{"id": "2508.01199", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2508.01199", "abs": "https://arxiv.org/abs/2508.01199", "authors": ["Avinash Malik"], "title": "Efficient compilation and execution of synchronous programs via type-state programming", "comment": null, "summary": "Synchronous programs are used extensively in implementation of safety\ncritical embedded software. Imperative synchronous programming languages model\nmultiple Finite State Machines (FSMs) executing in lockstep at logical clock\nticks. The synchronous view of time along with the FSM based design enables\neasier formal verification. The synchronous composition of multiple FSMs,\nduring compilation, results in the well known state space explosion problem.\nHence, efficiently compiling imperative synchronous programs into small and\nfast executables is challenging. This paper introduces a novel linear time\ncompilation technique for automata based compilation of synchronous programs.\nGraph based rewrite rules for kernel programming constructs are introduced. A\nlinear time algorithm applies these rules to produce a FSM. The FSM is then\nencoded into a type-state program using template meta-programming in C++.\nExperimental results show that the compilation time and generated binary size\nis comparable, while the execution times are on average 31-60% faster than\ncurrent state-of-the-art compilers."}
{"id": "2508.02305", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2508.02305", "abs": "https://arxiv.org/abs/2508.02305", "authors": ["Rose Bohrer"], "title": "Proceedings 14th International Workshop on Trends in Functional Programming in Education", "comment": null, "summary": "The goal of TFPIE is to gather researchers, teachers and professionals that\nuse, or are interested in the use of, functional programming in education.\nTFPIE aims to be a venue where novel ideas, classroom-tested ideas and\nwork-in-progress on the use of functional programming in education are\ndiscussed. The one-day workshop will foster a spirit of open discussion by\nhaving a review process for publication after the workshop."}
{"id": "2508.01180", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2508.01180", "abs": "https://arxiv.org/abs/2508.01180", "authors": ["Bowen Wang", "Marco Bertuletti", "Yichao Zhang", "Victor J. B. Jung", "Luca Benini"], "title": "A Dynamic Allocation Scheme for Adaptive Shared-Memory Mapping on Kilo-core RV Clusters for Attention-Based Model Deployment", "comment": "8 pages, 9 figures, 36th IEEE International Conference on\n  Application-specific Systems, Architectures and Processors", "summary": "Attention-based models demand flexible hardware to manage diverse kernels\nwith varying arithmetic intensities and memory access patterns. Large clusters\nwith shared L1 memory, a common architectural pattern, struggle to fully\nutilize their processing elements (PEs) when scaled up due to reduced\nthroughput in the hierarchical PE-to-L1 intra-cluster interconnect. This paper\npresents Dynamic Allocation Scheme (DAS), a runtime programmable address\nremapping hardware unit coupled with a unified memory allocator, designed to\nminimize data access contention of PEs onto the multi-banked L1. We evaluated\nDAS on an aggressively scaled-up 1024-PE RISC-V cluster with Non-Uniform Memory\nAccess (NUMA) PE-to-L1 interconnect to demonstrate its potential for improving\ndata locality in large parallel machine learning workloads. For a Vision\nTransformer (ViT)-L/16 model, each encoder layer executes in 5.67 ms, achieving\na 1.94x speedup over the fixed word-level interleaved baseline with 0.81 PE\nutilization. Implemented in 12nm FinFET technology, DAS incurs <0.1 % area\noverhead."}
{"id": "2508.01373", "categories": ["cs.DC", "cs.DS", "F.2.2"], "pdf": "https://arxiv.org/pdf/2508.01373", "abs": "https://arxiv.org/abs/2508.01373", "authors": ["Dariusz R. Kowalski", "Jan Olkowski"], "title": "Deterministic Fault-Tolerant Local Load Balancing and its Applications against Adaptive Adversaries", "comment": null, "summary": "Load balancing is among the basic primitives in distributed computing. In\nthis paper, we consider this problem when executed locally on a network with\nnodes prone to failures. We show that there exist lightweight network\ntopologies that are immune to message delivery failures incurred by (at most) a\nconstant fraction of all nodes. More precisely, we design a novel deterministic\nfault-tolerant local load balancing (LLB) algorithm, which, similarly to their\nclassical counterparts working in fault-free networks, has a relatively simple\nstructure and guarantees exponentially fast convergence to the average value\ndespite crash and omission failures.\n  As the second part of our contribution, we show three applications of the\nnewly developed fault-tolerant local load balancing protocol. We give a\nrandomized consensus algorithm, working against $t < n / 3$ crash failures,\nthat improves over the best-known consensus solution by Hajiaghayi et al. with\nrespect to communication complexity, yet with an arguable simpler technique of\ncombining a randomly and locally selected virtual communication graph with a\ndeterministic fault-tolerant local load balancing on this graph.\n  We also give a new solution for consensus for networks with omission\nfailures. Our solution works against $t < \\frac{n}{C\\log{n} (\\log\\log n)^2}$\nomissions, for some constant $C$, is nearly optimal in terms of time\ncomplexity, but most notably -- it has communication complexity $O((t^2 +\nn)\\text{ polylog } {n})$, matching, within a polylogarithmic factor, the lower\nbound by Abraham et. al. with respect to both terms depending on $t$ and $n$.\nOurs is the first algorithm in the literature that is simultaneously nearly\noptimal, in terms of $n,t$, with respect to both complexity measures, against\nthe adaptive omission-causing adversary."}
{"id": "2508.01786", "categories": ["cs.AR", "B.7; C.0; C.5"], "pdf": "https://arxiv.org/pdf/2508.01786", "abs": "https://arxiv.org/abs/2508.01786", "authors": ["Subhasish Mitra", "Subho Banerjee", "Martin Dixon", "Rama Govindaraju", "Peter Hochschild", "Eric X. Liu", "Bharath Parthasarathy", "Parthasarathy Ranganathan"], "title": "Silent Data Corruption by 10x Test Escapes Threatens Reliable Computing", "comment": null, "summary": "Too many defective compute chips are escaping existing manufacturing tests --\nat least an order of magnitude more than industrial targets across all compute\nchip types in data centers. Silent data corruptions (SDCs) caused by test\nescapes, when left unaddressed, pose a major threat to reliable computing. We\npresent a three-pronged approach to future directions in overcoming test\nescapes: (a) Quick diagnosis of defective chips directly from system-level\nincorrect behaviors. Such diagnosis is critical for gaining insights into why\nso many defective chips escape existing manufacturing testing. (b) In-field\ndetection of defective chips. (c) New test experiments to understand the\neffectiveness of new techniques for detecting defective chips. These\nexperiments must overcome the drawbacks and pitfalls of previous industrial\ntest experiments and case studies."}
{"id": "2508.01494", "categories": ["cs.DC", "cs.SE"], "pdf": "https://arxiv.org/pdf/2508.01494", "abs": "https://arxiv.org/abs/2508.01494", "authors": ["Steven Santillan", "Cristina L. Abad"], "title": "An Analysis of HPC and Edge Architectures in the Cloud", "comment": "8 pages, 10 figures, accepted at 2nd Workshop on Accelerated HPC in\n  the Cloud-Edge Continuum 2025, held in conjunction with 13th IEEE\n  International Conference on Cloud Engineering (IC2E 2025)", "summary": "We analyze a recently published dataset of 396 real-world cloud architectures\ndeployed on AWS, from companies belonging to a wide range of industries. From\nthis dataset, we identify those architectures that contain HPC or edge\ncomponents and characterize their designs. Specifically, we investigate the\nprevalence and interplay of AWS services within these architectures, examine\nthe types of storage systems employed, assess architectural complexity and the\nuse of machine learning services, discuss the implications of our findings and\nhow representative these results are of HPC and edge architectures in the\ncloud. This characterization provides valuable insights into current industry\npractices and trends in building robust and scalable HPC and edge solutions in\nthe cloud continuum, and can be valuable for those seeking to better understand\nhow these architectures are being built and to guide new research."}
{"id": "2508.01800", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2508.01800", "abs": "https://arxiv.org/abs/2508.01800", "authors": ["Ajay Kumar M", "Cian O'Mahoney", "Pedro Kreutz Werle", "Shreejith Shanker", "Dimitrios S. Nikolopoulos", "Bo Ji", "Hans Vandierendonck", "Deepu John"], "title": "MARVEL: An End-to-End Framework for Generating Model-Class Aware Custom RISC-V Extensions for Lightweight AI", "comment": "To be published in IEEE Open Journal of Circuits and Systems", "summary": "Deploying deep neural networks (DNNs) on resource-constrained IoT devices\nremains a challenging problem, often requiring hardware modifications tailored\nto individual AI models. Existing accelerator-generation tools, such as AMD's\nFINN, do not adequately address extreme resource limitations faced by IoT\nendpoints operating in bare-metal environments without an operating system\n(OS). To overcome these constraints, we propose MARVEL-an automated, end-to-end\nframework that generates custom RISC-V ISA extensions tailored to specific DNN\nmodel classes, with a primary focus on convolutional neural networks (CNNs).\nThe proposed method profiles high-level DNN representations in Python and\ngenerates an ISA-extended RISC-V core with associated compiler tools for\nefficient deployment. The flow leverages (1) Apache TVM for translating\nhigh-level Python-based DNN models into optimized C code, (2) Synopsys ASIP\nDesigner for identifying compute-intensive kernels, modeling, and generating a\ncustom RISC-V and (3) Xilinx Vivado for FPGA implementation. Beyond a model\nclass specific RISC-V, our approach produces an optimized bare-metal C\nimplementation, eliminating the need for an OS or extensive software\ndependencies. Unlike conventional deployment pipelines relying on\nTensorFlow/PyTorch runtimes, our solution enables seamless execution in highly\nresource-constrained environments. We evaluated the flow on popular DNN models\nsuch as LeNet-5*, MobileNetV1, ResNet50, VGG16, MobileNetV2 and DenseNet121\nusing the Synopsys trv32p3 RISC-V core as a baseline. Results show a 2x speedup\nin inference and upto 2x reduction in energy per inference at a 28.23% area\noverhead when implemented on an AMD Zynq UltraScale+ ZCU104 FPGA platform."}
{"id": "2508.01762", "categories": ["cs.DC", "cs.DS"], "pdf": "https://arxiv.org/pdf/2508.01762", "abs": "https://arxiv.org/abs/2508.01762", "authors": ["Yann Bourreau", "Sebastian Brandt", "Alexandre Nolin"], "title": "Faster Distributed $Δ$-Coloring via a Reduction to MIS", "comment": null, "summary": "Recent improvements on the deterministic complexities of fundamental graph\nproblems in the LOCAL model of distributed computing have yielded\nstate-of-the-art upper bounds of $\\tilde{O}(\\log^{5/3} n)$ rounds for maximal\nindependent set (MIS) and $(\\Delta + 1)$-coloring [Ghaffari, Grunau, FOCS'24]\nand $\\tilde{O}(\\log^{19/9} n)$ rounds for the more restrictive\n$\\Delta$-coloring problem [Ghaffari, Kuhn, FOCS'21; Ghaffari, Grunau, FOCS'24;\nBourreau, Brandt, Nolin, STOC'25]. In our work, we show that $\\Delta$-coloring\ncan be solved deterministically in $\\tilde{O}(\\log^{5/3} n)$ rounds as well,\nmatching the currently best bound for $(\\Delta + 1)$-coloring.\n  We achieve our result by developing a reduction from $\\Delta$-coloring to MIS\nthat guarantees that the (asymptotic) complexity of $\\Delta$-coloring is at\nmost the complexity of MIS, unless MIS can be solved in sublogarithmic time, in\nwhich case, due to the $\\Omega(\\log n)$-round $\\Delta$-coloring lower bound\nfrom [BFHKLRSU, STOC'16], our reduction implies a tight complexity of\n$\\Theta(\\log n)$ for $\\Delta$-coloring. In particular, any improvement on the\ncomplexity of the MIS problem will yield the same improvement for the\ncomplexity of $\\Delta$-coloring (up to the true complexity of\n$\\Delta$-coloring).\n  Our reduction yields improvements for $\\Delta$-coloring in the randomized\nLOCAL model and when complexities are parameterized by both $n$ and $\\Delta$.\nWe obtain a randomized complexity bound of $\\tilde{O}(\\log^{5/3} \\log n)$\nrounds (improving over the state of the art of $\\tilde{O}(\\log^{8/3} \\log n)$\nrounds) on general graphs and tight complexities of $\\Theta(\\log n)$ and\n$\\Theta(\\log \\log n)$ for the deterministic, resp.\\ randomized, complexity on\nbounded-degree graphs. In the special case of graphs of constant clique number\n(which for instance include bipartite graphs), we also give a reduction to the\n$(\\Delta+1)$-coloring problem."}
{"id": "2508.02007", "categories": ["cs.AR", "cs.OS", "B.3; D.4"], "pdf": "https://arxiv.org/pdf/2508.02007", "abs": "https://arxiv.org/abs/2508.02007", "authors": ["Konstantinos Kanellopoulos", "Konstantinos Sgouras", "Andreas Kosmas Kakolyris", "Vlad-Petru Nitu", "Berkin Kerim Konar", "Rahul Bera", "Onur Mutlu"], "title": "Revelator: Rapid Data Fetching via OS-Driven Hash-based Speculative Address Translation", "comment": null, "summary": "Address translation is a major performance bottleneck in modern computing\nsystems. Speculative address translation can hide this latency by predicting\nthe physical address (PA) of requested data early in the pipeline. However,\npredicting the PA from the virtual address (VA) is difficult due to the\nunpredictability of VA-to-PA mappings in conventional OSes. Prior works try to\novercome this but face two key issues: (i) reliance on large pages or VA-to-PA\ncontiguity, which is not guaranteed, and (ii) costly hardware changes to store\nspeculation metadata with limited effectiveness.\n  We introduce Revelator, a hardware-OS cooperative scheme enabling highly\naccurate speculative address translation with minimal modifications. Revelator\nemploys a tiered hash-based allocation strategy in the OS to create predictable\nVA-to-PA mappings, falling back to conventional allocation when needed. On a\nTLB miss, a lightweight speculation engine, guided by this policy, generates\ncandidate PAs for both program data and last-level page table entries (PTEs).\nThus, Revelator (i) speculatively fetches requested data before translation\nresolves, reducing access latency, and (ii) fetches the fourth-level PTE before\nthe third-level PTE is accessed, accelerating page table walks.\n  We prototype Revelator's OS support in Linux and evaluate it in simulation\nacross 11 diverse, data-intensive benchmarks in native and virtualized\nenvironments. Revelator achieves average speedups of 27% (20%) in native\n(virtualized) settings, surpasses a state-of-the-art speculative mechanism by\n5%, and reduces energy use by 9% compared to baseline. Our RTL prototype shows\nminimal area and power overheads on a modern CPU."}
{"id": "2508.01856", "categories": ["cs.DC", "cs.CR", "cs.DB", "cs.SE"], "pdf": "https://arxiv.org/pdf/2508.01856", "abs": "https://arxiv.org/abs/2508.01856", "authors": ["Xu Yuan", "Fang Luo", "Muhammad Zeeshan Haider", "Zhikui Chen", "Yucheng Li"], "title": "Efficient Byzantine Consensus MechanismBased on Reputation in IoT Blockchain", "comment": null, "summary": "Blockchain technology has advanced rapidly in recent years and is now widely\nused in a variety of fields. Blockchain appears to be one of the best solutions\nfor managing massive heterogeneous devices while achieving advanced data\nsecurity and data reputation, particularly in the field of large-scale IoT\n(Internet of Things) networks. Despite the numerous advantages, there are still\nchallenges while deploying IoT applications on blockchain systems due to the\nlimited storage, power, and computing capability of IoT devices, and some of\nthese problems are caused by the consensus algorithm, which plays a significant\nrole in blockchain systems by ensuring overall system reliability and\nrobustness. Nonetheless, most existing consensus algorithms are prone to poor\nnode reliability, low transaction per second (TPS) rates, and scalability\nissues. Aiming at some critical problems in the existing consensus algorithms,\nthis paper proposes the Efficient Byzantine Reputation-based Consensus (EBRC)\nmechanism to resolve the issues raised above. In comparison to traditional\nalgorithms, we reinvented ways to evaluate node reliability and robustness and\nmanage active nodes. Our experiments show that the EBRC algorithm has lower\nconsensus delay, higher throughput, improved security, and lower verification\ncosts. It offers new reference ideas for solving the Internet of\nThings+blockchain+Internet court construction problem."}
{"id": "2508.02236", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2508.02236", "abs": "https://arxiv.org/abs/2508.02236", "authors": ["Lu Chen", "Dingyi Zhao", "Zihao Yu", "Ninghui Sun", "Yungang Bao"], "title": "GSIM: Accelerating RTL Simulation for Large-Scale Designs", "comment": null, "summary": "Register Transfer Level (RTL) simulation is widely used in design space\nexploration, verification, debugging, and preliminary performance evaluation\nfor hardware design. Among various RTL simulation approaches, software\nsimulation is the most commonly used due to its flexibility, low cost, and ease\nof debugging. However, the slow simulation of complex designs has become the\nbottleneck in design flow. In this work, we explore the sources of computation\noverhead of RTL simulation and conclude them into four factors. To optimize\nthese factors, we propose several techniques at the supernode level, node\nlevel, and bit level. Finally, we implement these techniques in a novel RTL\nsimulator GSIM. GSIM succeeds in simulating XiangShan, the state-of-the-art\nopen-source RISC-V processor. Besides, compared to Verilator, GSIM can achieve\nspeedup of 7.34x for booting Linux on XiangShan, and 19.94x for running\nCoreMark on Rocket."}
{"id": "2508.01911", "categories": ["cs.DC", "cs.IT", "cs.NI", "math.IT"], "pdf": "https://arxiv.org/pdf/2508.01911", "abs": "https://arxiv.org/abs/2508.01911", "authors": ["Muhammad Farhan Khan", "Muhammad Ahmed Mohsin", "Zeeshan Alam", "Muhammad Saad", "Muhammad Waqar"], "title": "Machine Learning-Driven Performance Analysis of Compressed Communication in Aerial-RIS Networks for Future 6G Networks", "comment": "Submitted to Mobile Networks and Applications", "summary": "In the future 6G and wireless networks, particularly in dense urban\nenvironments, bandwidth exhaustion and limited capacity pose significant\nchallenges to enhancing data rates. We introduce a novel system model designed\nto improve the data rate of users in next-generation multi-cell networks by\nintegrating Unmanned Aerial Vehicle (UAV)-Assisted Reconfigurable Intelligent\nSurfaces (RIS), Non-Orthogonal Multiple Access (NOMA), and Coordinated\nMultipoint Transmission (CoMP). Optimally deploying Aerial RIS for higher data\nrates, employing NOMA to improve spectral efficiency, and utilizing CoMP to\nmitigate inter-cell interference (ICI), we significantly enhance the overall\nsystem capacity and sum rate. Furthermore, we address the challenge of feedback\noverhead associated with Quantized Phase Shifts (QPS) from the receiver to RIS.\nThe feedback channel is band-limited and cannot support a large overhead of QPS\nfor uplink communication. To ensure seamless transmission, we propose a Machine\nLearning Autoencoder technique for a compressed communication of QPS from the\nreceiver to RIS, while maintaining high accuracy. Additionally, we investigate\nthe impact of the number of Aerial RIS elements and power allocation ratio for\nNOMA on the individual data rate of users. Our simulation results demonstrate\nsubstantial improvements in spectral efficiency, outage probability, and\nbandwidth utilization, highlighting the potential of the proposed architecture\nto enhance network performance."}
{"id": "2508.02304", "categories": ["cs.AR", "cs.ET", "cs.GR"], "pdf": "https://arxiv.org/pdf/2508.02304", "abs": "https://arxiv.org/abs/2508.02304", "authors": ["Fangxin Liu", "Haomin Li", "Bowen Zhu", "Zongwu Wang", "Zhuoran Song", "Habing Guan", "Li Jiang"], "title": "ASDR: Exploiting Adaptive Sampling and Data Reuse for CIM-based Instant Neural Rendering", "comment": "Accepted by the 2025 International Conference on Architectural\n  Support for Programming Languages and Operating Systems (ASPLOS 2025). The\n  paper will be presented at ASPLOS 2026", "summary": "Neural Radiance Fields (NeRF) offer significant promise for generating\nphotorealistic images and videos. However, existing mainstream neural rendering\nmodels often fall short in meeting the demands for immediacy and power\nefficiency in practical applications. Specifically, these models frequently\nexhibit irregular access patterns and substantial computational overhead,\nleading to undesirable inference latency and high power consumption.\nComputing-in-memory (CIM), an emerging computational paradigm, has the\npotential to address these access bottlenecks and reduce the power consumption\nassociated with model execution.\n  To bridge the gap between model performance and real-world scene\nrequirements, we propose an algorithm-architecture co-design approach,\nabbreviated as ASDR, a CIM-based accelerator supporting efficient neural\nrendering. At the algorithmic level, we propose two rendering optimization\nschemes: (1) Dynamic sampling by online sensing of the rendering difficulty of\ndifferent pixels, thus reducing access memory and computational overhead. (2)\nReducing MLP overhead by decoupling and approximating the volume rendering of\ncolor and density. At the architecture level, we design an efficient\nReRAM-based CIM architecture with efficient data mapping and reuse\nmicroarchitecture. Experiments demonstrate that our design can achieve up to\n$9.55\\times$ and $69.75\\times$ speedup over state-of-the-art NeRF accelerators\nand Xavier NX GPU in graphics rendering tasks with only $0.1$ PSNR loss."}
{"id": "2508.01989", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2508.01989", "abs": "https://arxiv.org/abs/2508.01989", "authors": ["Chao Wang", "Pengfei Zuo", "Zhangyu Chen", "Yunkai Liang", "Zhou Yu", "Ming-Chang Yang"], "title": "Prefill-Decode Aggregation or Disaggregation? Unifying Both for Goodput-Optimized LLM Serving", "comment": "17 pages, 19 figures", "summary": "An ongoing debate considers whether prefill-decode (PD) aggregation or\ndisaggregation is superior for serving large language models (LLMs). This has\ndriven optimizations for both approaches, each showing distinct advantages.\nThis paper compares PD aggregation and disaggregation, showing that each excels\nunder different service-level objectives (SLOs): aggregation is optimal for\ntight time-to-first-token (TTFT) and relaxed time-per-output-token (TPOT),\nwhile disaggregation excels for strict TPOT and relaxed TTFT. However, under\nbalanced TTFT and TPOT SLOs, neither approach delivers optimal goodput.\n  This paper proposes TaiChi, an LLM serving system that unifies PD\ndisaggregation and aggregation for optimal goodput under any combination of\nTTFT and TPOT SLOs. TaiChi uses a unified disaggregation-aggregation\narchitecture with differentiated-capability GPU instances: prefill-heavy (fast\nprefill, high-interference decode) and decode-heavy (low-interference decode,\nslow prefill). Three configurable sliders control the ratio between these\ninstances and their chunk sizes. TaiChi adapts to various SLO regimes by\nadjusting sliders. When TTFT constraints are tight, TaiChi resembles a PD\naggregation configuration; when TPOT dominates, it adapts toward PD\ndisaggregation. Crucially, under balanced SLOs, TaiChi enables a hybrid mode\nfor superior goodput. The key innovation behind this hybrid mode is latency\nshifting: selectively reallocating GPU resources from requests that meet SLOs\nto those at risk of violation, maximizing the number of SLO-satisfied requests.\nThis fine-grained latency shifting is orchestrated by two scheduling\nmechanisms: flowing decode scheduling to control TPOTs and length-aware prefill\nscheduling to manage TTFTs, which jointly optimize request assignment. Our\nexperiments show TaiChi improves goodput by up to 77% over state-of-the-art\nsystems under balanced TTFT and TPOT SLOs."}
{"id": "2508.02536", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2508.02536", "abs": "https://arxiv.org/abs/2508.02536", "authors": ["Yuqi Xue", "Jian Huang"], "title": "ReGate: Enabling Power Gating in Neural Processing Units", "comment": "Accepted to MICRO'25", "summary": "The energy efficiency of neural processing units (NPU) is playing a critical\nrole in developing sustainable data centers. Our study with different\ngenerations of NPU chips reveals that 30%-72% of their energy consumption is\ncontributed by static power dissipation, due to the lack of power management\nsupport in modern NPU chips. In this paper, we present ReGate, which enables\nfine-grained power-gating of each hardware component in NPU chips with\nhardware/software co-design. Unlike conventional power-gating techniques for\ngeneric processors, enabling power-gating in NPUs faces unique challenges due\nto the fundamental difference in hardware architecture and program execution\nmodel. To address these challenges, we carefully investigate the power-gating\nopportunities in each component of NPU chips and decide the best-fit power\nmanagement scheme (i.e., hardware- vs. software-managed power gating).\nSpecifically, for systolic arrays (SAs) that have deterministic execution\npatterns, ReGate enables cycle-level power gating at the granularity of\nprocessing elements (PEs) following the inherent dataflow execution in SAs. For\ninter-chip interconnect (ICI) and HBM controllers that have long idle\nintervals, ReGate employs a lightweight hardware-based idle-detection\nmechanism. For vector units and SRAM whose idle periods vary significantly\ndepending on workload patterns, ReGate extends the NPU ISA and allows software\nlike compilers to manage the power gating. With implementation on a\nproduction-level NPU simulator, we show that ReGate can reduce the energy\nconsumption of NPU chips by up to 32.8% (15.5% on average), with negligible\nimpact on AI workload performance. The hardware implementation of power-gating\nlogic introduces less than 3.3% overhead in NPU chips."}
{"id": "2508.01996", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2508.01996", "abs": "https://arxiv.org/abs/2508.01996", "authors": ["Yizhou Shi", "Qianpiao Ma", "Yan Xu", "Junlong Zhou", "Ming Hu", "Yunming Liao", "Hongli Xu"], "title": "DySTop", "comment": null, "summary": "Federated Learning (FL) has emerged as a potential distributed learning\nparadigm that enables model training on edge devices (i.e., workers) while\npreserving data privacy. However, its reliance on a centralized server leads to\nlimited scalability. Decentralized federated learning (DFL) eliminates the\ndependency on a centralized server by enabling peer-to-peer model exchange.\nExisting DFL mechanisms mainly employ synchronous communication, which may\nresult in training inefficiencies under heterogeneous and dynamic edge\nenvironments. Although a few recent asynchronous DFL (ADFL) mechanisms have\nbeen proposed to address these issues, they typically yield stale model\naggregation and frequent model transmission, leading to degraded training\nperformance on non-IID data and high communication overhead. To overcome these\nissues, we present DySTop, an innovative mechanism that jointly optimizes\ndynamic staleness control and topology construction in ADFL. In each round,\nmultiple workers are activated, and a subset of their neighbors is selected to\ntransmit models for aggregation, followed by local training. We provide a\nrigorous convergence analysis for DySTop, theoretically revealing the\nquantitative relationships between the convergence bound and key factors such\nas maximum staleness, activating frequency, and data distribution among\nworkers. From the insights of the analysis, we propose a worker activation\nalgorithm (WAA) for staleness control and a phase-aware topology construction\nalgorithm (PTCA) to reduce communication overhead and handle data non-IID.\nExtensive evaluations through both large-scale simulations and real-world\ntestbed experiments demonstrate that our DySTop reduces completion time by\n51.8% and the communication resource consumption by 57.1% compared to\nstate-of-the-art solutions, while maintaining the same model accuracy."}
{"id": "2508.02202", "categories": ["cs.DC", "C.2.2; C.2.3; K.6.4"], "pdf": "https://arxiv.org/pdf/2508.02202", "abs": "https://arxiv.org/abs/2508.02202", "authors": ["Rui Eduardo Lopes", "Duarte Raposo", "Pedro V. Teixeira", "Susana Sargento"], "title": "Self-assessment approach for resource management protocols in heterogeneous computational systems", "comment": "13 pages, 12 figures, 6 tables", "summary": "With an ever growing number of heterogeneous applicational services running\non equally heterogeneous computational systems, the problem of resource\nmanagement becomes more essential. Although current solutions consider some\nnetwork and time requirements, they mostly handle a pre-defined list of\nresource types by design and, consequently, fail to provide an extensible\nsolution to assess any other set of requirements or to switch strategies on its\nresource estimation. This work proposes an heuristics-based estimation solution\nto support any computational system as a self-assessment, including\nconsiderations on dynamically weighting the requirements, how to compute each\nnode's capacity towards an admission request, and also offers the possibility\nto extend the list of resource types considered for assessment, which is an\nuncommon view in related works. This algorithm can be used by distributed and\ncentralized resource allocation protocols to decide the best node(s) for a\nservice intended for deployment. This approach was validated across its\ncomponents and the results show that its performance is straightforward in\nresource estimation while allowing scalability and extensibility."}
{"id": "2508.02230", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2508.02230", "abs": "https://arxiv.org/abs/2508.02230", "authors": ["Yachao Yuan", "Zhen Yu", "Jin Wang", "Zhipeng Cheng", "Jianhua Hu"], "title": "FedAPTA: Federated Multi-task Learning in Computing Power Networks with Adaptive Layer-wise Pruning and Task-aware Aggregation", "comment": null, "summary": "Federated Learning (FL) has shown considerable promise in Computing Power\nNetworks (CPNs) for privacy protection, efficient data utilization, and dynamic\ncollaboration. Although it offers practical benefits, applying FL in CPNs\ncontinues to encounter a major obstacle, i.e., multi-task deployment. However,\nexisting work mainly focuses on mitigating FL's computation and communication\noverhead of a single task while overlooking the computing resource wastage\nissue of heterogeneous devices across multiple tasks in FL under CPNs. To\ntackle this, we design FedAPTA, a federated multi-task learning framework in\nCPNs. FedAPTA alleviates computing resource wastage through the developed\nlayer-wise model pruning technique, which reduces local model size while\nconsidering both data and device heterogeneity. To aggregate structurally\nheterogeneous local models of different tasks, we introduce a heterogeneous\nmodel recovery strategy and a task-aware model aggregation method that enables\nthe aggregation through infilling local model architecture with the shared\nglobal model and clustering local models according to their specific tasks. We\ndeploy FedAPTA on a realistic FL platform and benchmark it against nine SOTA FL\nmethods. The experimental outcomes demonstrate that the proposed FedAPTA\nconsiderably outperforms the state-of-the-art FL methods by up to 4.23%. Our\ncode is available at https://github.com/Zhenzovo/FedCPN."}
{"id": "2508.02309", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2508.02309", "abs": "https://arxiv.org/abs/2508.02309", "authors": ["Yilong Zhao", "Mingyu Gao", "Huanchen Zhang", "Fangxin Liu", "Gongye Chen", "He Xian", "Haibing Guan", "Li Jiang"], "title": "PUSHtap: PIM-based In-Memory HTAP with Unified Data Storage Format", "comment": "Accepted by the 2025 International Conference on Architectural\n  Support for Programming Languages and Operating Systems (ASPLOS 2025) The\n  paper will be presented at ASPLOS 2026", "summary": "Hybrid transaction/analytical processing (HTAP) is an emerging database\nparadigm that supports both online transaction processing (OLTP) and online\nanalytical processing (OLAP) workloads. Computing-intensive OLTP operations,\ninvolving row-wise data manipulation, are suitable for row-store format. In\ncontrast, memory-intensive OLAP operations, which are column-centric, benefit\nfrom column-store format. This \\emph{data-format dilemma} prevents HTAP systems\nfrom concurrently achieving three design goals: performance isolation, data\nfreshness, and workload-specific optimization. Another background technology is\nProcessing-in-Memory (PIM), which integrates computing units (PIM units) inside\nDRAM memory devices to accelerate memory-intensive workloads, including OLAP.\n  Our key insight is to combine the interleaved CPU access and localized PIM\nunit access to provide two-dimensional access to address the data format\ncontradictions inherent in HTAP. First, we propose a unified data storage\nformat with novel data alignment and placement techniques to optimize the\neffective bandwidth of CPUs and PIM units and exploit the PIM's parallelism.\nSecond, we implement the multi-version concurrency control (MVCC) essential for\nsingle-instance HTAP. Third, we extend the commercial PIM architecture to\nsupport the OLAP operations and concurrent access from PIM and CPU. Experiments\nshow that PUSHtap can achieve 3.4\\texttimes{}/4.4\\texttimes{} OLAP/OLTP\nthroughput improvement compared to multi-instance PIM-based design."}
{"id": "2508.02446", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2508.02446", "abs": "https://arxiv.org/abs/2508.02446", "authors": ["Yichao Zhang", "Zexin Fu", "Tim Fischer", "Yinrong Li", "Marco Bertuletti", "Luca Benini"], "title": "TeraNoC: A Multi-Channel 32-bit Fine-Grained, Hybrid Mesh-Crossbar NoC for Efficient Scale-up of 1000+ Core Shared-L1-Memory Clusters", "comment": "8 pages, 9 figures. Proceeded by The 43rd IEEE International\n  Conference on Computer Design (ICCD 2025)", "summary": "A key challenge in on-chip interconnect design is to scale up bandwidth while\nmaintaining low latency and high area efficiency. 2D-meshes scale with low\nwiring area and congestion overhead; however, their end-to-end latency\nincreases with the number of hops, making them unsuitable for latency-sensitive\ncore-to-L1-memory access. On the other hand, crossbars offer low latency, but\ntheir routing complexity grows quadratically with the number of I/Os, requiring\nlarge physical routing resources and limiting area-efficient scalability. This\ntwo-sided interconnect bottleneck hinders the scale-up of many-core,\nlow-latency, tightly coupled shared-memory clusters, pushing designers toward\ninstantiating many smaller and loosely coupled clusters, at the cost of\nhardware and software overheads. We present TeraNoC, an open-source, hybrid\nmesh-crossbar on-chip interconnect that offers both scalability and low\nlatency, while maintaining very low routing overhead. The topology, built on\n32bit word-width multi-channel 2D-meshes and crossbars, enables the\narea-efficient scale-up of shared-memory clusters. A router remapper is\ndesigned to balance traffic load across interconnect channels. Using TeraNoC,\nwe build a cluster with 1024 single-stage, single-issue cores that share a\n4096-banked L1 memory, implemented in 12nm technology. The low interconnect\nstalls enable high compute utilization of up to 0.85 IPC in compute-intensive,\ndata-parallel key GenAI kernels. TeraNoC only consumes 7.6\\% of the total\ncluster power in kernels dominated by crossbar accesses, and 22.7\\% in kernels\nwith high 2D-mesh traffic. Compared to a hierarchical crossbar-only cluster,\nTeraNoC reduces die area by 37.8\\% and improves area efficiency (GFLOP/s/mm2)\nby up to 98.7\\%, while occupying only 10.9\\% of the logic area."}
{"id": "2508.02520", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2508.02520", "abs": "https://arxiv.org/abs/2508.02520", "authors": ["Ao Xiao", "Bangzheng He", "Baoquan Zhang", "Baoxing Huai", "Bingji Wang", "Bo Wang", "Bo Xu", "Boyi Hou", "Chan Yang", "Changhong Liu", "Cheng Cui", "Chenyu Zhu", "Cong Feng", "Daohui Wang", "Dayun Lin", "Duo Zhao", "Fengshao Zou", "Fu Wang", "Gangqiang Zhang", "Gengyuan Dan", "Guanjie Chen", "Guodong Guan", "Guodong Yang", "Haifeng Li", "Haipei Zhu", "Hao Feng", "Hao Huang", "Hao Xu", "Hengrui Ma", "Hengtao Fan", "Hui Liu", "Jia Li", "Jiang Liu", "Jiang Xu", "Jie Meng", "Jinhan Xin", "Junhao Hu", "Juwei Chen", "Lan Yu", "Lanxin Miao", "Liang Liu", "Linan Jing", "Lu Zhou", "Meina Han", "Mingkun Deng", "Mingyu Deng", "Naitian Deng", "Nizhong Lin", "Peihan Zhao", "Peng Pan", "Pengfei Shen", "Ping Li", "Qi Zhang", "Qin Zhang", "Qingrong Xia", "Qingyi Zhang", "Qunchao Fu", "Ren Guo", "Ruimin Gao", "Shaochun Li", "Sheng Long", "Shentian Li", "Shining Wan", "Shuai Shen", "Shuangfu Zeng", "Shuming Jing", "Siqi Yang", "Song Zhang", "Tao Xu", "Tianlin Du", "Ting Chen", "Wanxu Wu", "Wei Jiang", "Weinan Tong", "Weiwei Chen", "Wen Peng", "Wenli Zhou", "Wenquan Yang", "Wenxin Liang", "Xiang Liu", "Xiaoli Zhou", "Xin Jin", "Xinyu Duan", "Xu Li", "Xu Zhang", "Xusheng Chen", "Yalong Shan", "Yang Gan", "Yao Lu", "Yi Deng", "Yi Zheng", "Yingfei Zheng", "Yiyun Zheng", "Yizhou Shan", "Yong Gao", "Yongqiang Yang", "Yuanjin Gong", "Yue Yu", "Yuetao Chen", "Yukun Zhu", "Yulong He", "Yusu Zhao", "Yuyan Wu", "Zenan Zhang", "Zhaojin Zhuo", "Zhaoyang Ji", "Zhefeng Wang", "Zheng Wang", "Zhenhua Yang", "Zhenli Sheng", "Zhibin Yu", "Zhigang Ji", "Zhihao Ren", "Zhipeng Bian", "Zhixia Liu", "Zhiyu Dong", "Zhonghua Li", "Zhou Yu", "Zhuoming Shen", "Zhuwei Peng", "Zi Ye", "Zihao Xiang", "Zimin Fu", "Zixuan Zhang"], "title": "xDeepServe: Model-as-a-Service on Huawei CloudMatrix384", "comment": null, "summary": "The rise of scaled-out LLMs and scaled-up SuperPods signals a new era in\nlarge-scale AI infrastructure. LLMs continue to scale out via MoE, as seen in\nrecent models like DeepSeek, Kimi, and Qwen. In parallel, AI hardware is\nscaling up, with Huawei's CloudMatrix384 SuperPod offering hundreds of GB/s\nhigh-speed interconnects. Running large MoE models on SuperPod-scale hardware\nbrings new challenges. It requires new execution models, scalable scheduling,\nefficient expert load balancing, and elimination of single points of failure.\nThis paper presents xDeepServe, Huawei Cloud's LLM serving system designed for\nSuperPod-scale infrastructure. At its core is Transformerless, a disaggregated\narchitecture that decomposes transformer models into modular units--attention,\nfeedforward, and MoE--executed independently on NPUs connected via high-speed\nfabric. We implement this design in two forms: disaggregated prefill-decode and\ndisaggregated MoE-attention. This fully disaggregated setup enables independent\nscaling of compute and memory without sacrificing performance. To support this\narchitecture, we propose XCCL, a communication library that leverages\nCloudMatrix384's global shared memory to implement efficient point-to-point and\nall-to-all primitives. We also extend our serving engine FlowServe with\nsystem-level techniques, enabling scalable inference across hundreds of NPUs."}
{"id": "2508.02552", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2508.02552", "abs": "https://arxiv.org/abs/2508.02552", "authors": ["Siamak Abdi", "Giuseppe Di Fatta", "Atta Badii", "Giancarlo Fortino"], "title": "Blockchain Epidemic Consensus for Large-Scale Networks", "comment": "2025 IEEE 7th International Conference on Blockchain Computing and\n  Applications (BCCA)", "summary": "Blockchain is a distributed ledger technology that has applications in many\ndomains such as cryptocurrency, smart contracts, supply chain management, and\nmany others. Distributed consensus is a fundamental component of blockchain\nsystems that enables secure, precise, and tamper-proof verification of data\nwithout relying on central authorities. Existing consensus protocols,\nnevertheless, suffer from drawbacks, some of which are related to scalability,\nresource consumption, and fault tolerance. We introduce Blockchain Epidemic\nConsensus Protocol (BECP), a novel fully decentralised consensus protocol for\nblockchain networks at a large scale. BECP follows epidemic communication\nprinciples, without fixed roles like validators or leaders, and achieves\nprobabilistic convergence, efficient message dissemination, and tolerance to\nmessage delays. We provide an extensive experimental comparison of BECP against\nclassic protocols like PAXOS, RAFT, and PBFT, and newer epidemic-based\nprotocols like Avalanche and Snowman. The findings indicate that BECP provides\ndesirable gains in throughput, consensus latency, and substantial\nmessage-passing efficiency compared to existing epidemic-based approaches,\nvalidating its usability as an effective and scalable approach for\nnext-generation blockchain systems."}
{"id": "2508.02595", "categories": ["cs.DC", "cs.NI"], "pdf": "https://arxiv.org/pdf/2508.02595", "abs": "https://arxiv.org/abs/2508.02595", "authors": ["Siamak Abdi", "Giuseppe Di Fatta", "Atta Badii", "Giancarlo Fortino"], "title": "Fully Decentralised Consensus for Extreme-scale Blockchain", "comment": "IEEE Global Blockchain Conference (GBC) 2025", "summary": "Blockchain is a decentralised, immutable ledger technology that has been\nwidely adopted in many sectors for various applications such as\ncryptocurrencies, smart contracts and supply chain management. Distributed\nconsensus is a fundamental component of blockchain, which is required to ensure\ntrust, security, and integrity of the data stored and the transactions\nprocessed in the blockchain. Various consensus algorithms have been developed,\neach affected from certain issues such as node failures, high resource\nconsumption, collusion, etc. This work introduces a fully decentralised\nconsensus protocol, Blockchain Epidemic Consensus Protocol (BECP), suitable for\nvery large and extreme-scale blockchain systems. The proposed approach\nleverages the benefits of epidemic protocols, such as no reliance on a fixed\nset of validators or leaders, probabilistic guarantees of convergence,\nefficient use of network resources, and tolerance to node and network failures.\nA comparative experimental analysis has been carried out with traditional\nprotocols including PAXOS, RAFT, and Practical Byzantine Fault Tolerance\n(PBFT), as well as a relatively more recent protocol such as Avalanche, which\nis specifically designed for very large-scale systems. The results illustrate\nhow BECP outperforms them in terms of throughput, scalability and consensus\nlatency. BECP achieves an average of 1.196 times higher throughput in terms of\nconsensus on items and 4.775 times better average consensus latency.\nFurthermore, BECP significantly reduces the number of messages compared to\nAvalanche. These results demonstrate the effectiveness and efficiency of fully\ndecentralised consensus for blockchain technology based on epidemic protocols."}
