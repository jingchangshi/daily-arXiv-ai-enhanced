{"id": "2507.07480", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2507.07480", "abs": "https://arxiv.org/abs/2507.07480", "authors": ["Tobias Kapp\u00e9"], "title": "On Propositional Program Equivalence (extended abstract)", "comment": null, "summary": "General program equivalence is undecidable. However, if we abstract away the\nsemantics of statements, then this problem becomes not just decidable, but\npractically feasible. For instance, a program of the form \"if $b$ then $e$ else\n$f$\" should be equivalent to \"if not $b$ then $f$ else $e$\" - no matter what\n$b$, $e$ and $f$ are. This kind of equivalence is known as propositional\nequivalence. In this extended abstract, we discuss recent developments in\npropositional program equivalence from the perspective of (Guarded) Kleene\nAlgebra with Tests, or (G)KAT.", "AI": {"tldr": "\u8bba\u6587\u8ba8\u8bba\u4e86\u5728\u547d\u9898\u7b49\u4ef7\u6027\u6846\u67b6\u4e0b\u7a0b\u5e8f\u7b49\u4ef7\u6027\u7684\u53ef\u884c\u6027\uff0c\u57fa\u4e8e(G)KAT\u7406\u8bba\u7684\u6700\u65b0\u8fdb\u5c55\u3002", "motivation": "\u901a\u7528\u7a0b\u5e8f\u7b49\u4ef7\u6027\u4e0d\u53ef\u5224\u5b9a\uff0c\u4f46\u901a\u8fc7\u62bd\u8c61\u8bed\u53e5\u8bed\u4e49\uff0c\u547d\u9898\u7b49\u4ef7\u6027\u4e0d\u4ec5\u53ef\u5224\u5b9a\u4e14\u5b9e\u9645\u53ef\u884c\u3002", "method": "\u5229\u7528Guarded Kleene Algebra with Tests (G)KAT\u7406\u8bba\u5206\u6790\u547d\u9898\u7a0b\u5e8f\u7b49\u4ef7\u6027\u3002", "result": "\u5c55\u793a\u4e86\u547d\u9898\u7b49\u4ef7\u6027\u5728\u7a0b\u5e8f\u5206\u6790\u4e2d\u7684\u5b9e\u9645\u5e94\u7528\u548c\u53ef\u884c\u6027\u3002", "conclusion": "(G)KAT\u4e3a\u547d\u9898\u7a0b\u5e8f\u7b49\u4ef7\u6027\u63d0\u4f9b\u4e86\u6709\u6548\u7684\u7406\u8bba\u6846\u67b6\uff0c\u5177\u6709\u5b9e\u9645\u5e94\u7528\u6f5c\u529b\u3002"}}
{"id": "2507.07114", "categories": ["cs.DC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2507.07114", "abs": "https://arxiv.org/abs/2507.07114", "authors": ["Erez Weintraub", "Ron Banner", "Ariel Orda"], "title": "Distributed Training under Packet Loss", "comment": null, "summary": "State-of-the-art language and vision models are routinely trained across\nthousands of GPUs, often spanning multiple data-centers, yet today's\ndistributed frameworks still assume reliable connections (e.g., InfiniBand or\nRoCE). The resulting acknowledgment traffic and retransmissions inflate tail\nlatencies and limit scalability. Leveraging unreliable connections will reduce\nlatency but may sacrifice model accuracy and convergence once packets are\ndropped. A principled, end-to-end solution that preserves accuracy and\nconvergence guarantees under genuine packet loss has previously been missing.\nWe address this critical gap by introducing a novel distributed training\nframework capable of operating over unreliable connections, offering unbiased\ngradient aggregation and bounded parameter drift without modifying model code\nor optimizers. The key insight is a two-stage defense against missing messages:\n(i) Unbiased gradient aggregation: each worker reconstructs a consistent\ngradient estimate from whatever packets arrive, guaranteeing expectation-level\ncorrectness; and (ii) Bounded-drift parameter broadcasts: we prove the\ninter-worker model discrepancy remains O(1) even after arbitrarily many\niterations, preventing the unbounded divergence typical of asynchronous setups.\nAnalytical bounds are matched by experiments on the LLAMA2 7B model with 64\nGPUs: tolerating 10% random packet loss yields at most 0.8% perplexity change.\nThis work bridges the gap between communication-efficient datacenter protocols\nand the accuracy and generalization guarantees demanded by modern large-model\ntraining, enabling robust, high-throughput learning on commodity or wide-area\nnetworks.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u578b\u5206\u5e03\u5f0f\u8bad\u7ec3\u6846\u67b6\uff0c\u53ef\u5728\u4e0d\u53ef\u9760\u8fde\u63a5\u4e0b\u4fdd\u6301\u6a21\u578b\u7cbe\u5ea6\u548c\u6536\u655b\u6027\u3002", "motivation": "\u73b0\u6709\u5206\u5e03\u5f0f\u6846\u67b6\u4f9d\u8d56\u53ef\u9760\u8fde\u63a5\uff0c\u5bfc\u81f4\u5ef6\u8fdf\u548c\u53ef\u6269\u5c55\u6027\u95ee\u9898\uff0c\u800c\u4e0d\u53ef\u9760\u8fde\u63a5\u53ef\u80fd\u727a\u7272\u6a21\u578b\u7cbe\u5ea6\u3002", "method": "\u91c7\u7528\u4e24\u9636\u6bb5\u9632\u5fa1\u673a\u5236\uff1a\u65e0\u504f\u68af\u5ea6\u805a\u5408\u548c\u6709\u754c\u6f02\u79fb\u53c2\u6570\u5e7f\u64ad\u3002", "result": "\u5728LLAMA2 7B\u6a21\u578b\u4e0a\u5b9e\u9a8c\uff0c\u5bb9\u5fcd10%\u4e22\u5305\u7387\u65f6\u56f0\u60d1\u5ea6\u53d8\u5316\u4e0d\u8d85\u8fc70.8%\u3002", "conclusion": "\u8be5\u6846\u67b6\u586b\u8865\u4e86\u9ad8\u6548\u901a\u4fe1\u534f\u8bae\u4e0e\u73b0\u4ee3\u5927\u6a21\u578b\u8bad\u7ec3\u9700\u6c42\u4e4b\u95f4\u7684\u5dee\u8ddd\uff0c\u652f\u6301\u5728\u666e\u901a\u6216\u5e7f\u57df\u7f51\u7edc\u4e0a\u8fdb\u884c\u9c81\u68d2\u5b66\u4e60\u3002"}}
{"id": "2507.07683", "categories": ["cs.AR", "cs.DC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2507.07683", "abs": "https://arxiv.org/abs/2507.07683", "authors": ["Jude Haris", "Jos\u00e9 Cano"], "title": "Accelerating Transposed Convolutions on FPGA-based Edge Devices", "comment": "Accepted to 35th International Conference on Field-Programmable Logic\n  and Applications (FPL) 2025", "summary": "Transposed Convolutions (TCONV) enable the up-scaling mechanism within\ngenerative Artificial Intelligence (AI) models. However, the predominant\nInput-Oriented Mapping (IOM) method for implementing TCONV has complex output\nmapping, overlapping sums, and ineffectual computations. These inefficiencies\nfurther exacerbate the performance bottleneck of TCONV and generative models on\nresource-constrained edge devices. To address this problem, in this paper we\npropose MM2IM, a hardware-software co-designed accelerator that combines Matrix\nMultiplication (MatMul) with col2IM to process TCONV layers on\nresource-constrained edge devices efficiently. Using the SECDA-TFLite design\ntoolkit, we implement MM2IM and evaluate its performance across 261 TCONV\nproblem configurations, achieving an average speedup of 1.9x against a\ndual-thread ARM Neon optimized CPU baseline. We then evaluate the performance\nof MM2IM on a range of TCONV layers from well-known generative models achieving\nup to 4.2x speedup, and compare it against similar resource-constrained TCONV\naccelerators, outperforming them by at least 2x GOPs/DSP. Finally, we evaluate\nMM2IM on the DCGAN and pix2pix GAN models, achieving up to 3x speedup and 2.4x\nenergy reduction against the CPU baseline.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51faMM2IM\u52a0\u901f\u5668\uff0c\u901a\u8fc7\u7ed3\u5408\u77e9\u9635\u4e58\u6cd5\u4e0ecol2IM\u4f18\u5316\u8f6c\u7f6e\u5377\u79ef\uff08TCONV\uff09\u5728\u8fb9\u7f18\u8bbe\u5907\u4e0a\u7684\u6027\u80fd\uff0c\u663e\u8457\u63d0\u5347\u901f\u5ea6\u548c\u80fd\u6548\u3002", "motivation": "\u73b0\u6709TCONV\u5b9e\u73b0\uff08\u5982IOM\uff09\u5b58\u5728\u8f93\u51fa\u6620\u5c04\u590d\u6742\u3001\u8ba1\u7b97\u5197\u4f59\u7b49\u95ee\u9898\uff0c\u5bfc\u81f4\u8fb9\u7f18\u8bbe\u5907\u6027\u80fd\u74f6\u9888\uff0c\u4e9f\u9700\u9ad8\u6548\u89e3\u51b3\u65b9\u6848\u3002", "method": "\u63d0\u51fa\u786c\u4ef6-\u8f6f\u4ef6\u534f\u540c\u8bbe\u8ba1\u7684MM2IM\u52a0\u901f\u5668\uff0c\u7ed3\u5408\u77e9\u9635\u4e58\u6cd5\u4e0ecol2IM\u65b9\u6cd5\uff0c\u5229\u7528SECDA-TFLite\u5de5\u5177\u5305\u5b9e\u73b0\u5e76\u8bc4\u4f30\u3002", "result": "\u5728261\u79cdTCONV\u914d\u7f6e\u4e2d\u5e73\u5747\u63d0\u901f1.9\u500d\uff0c\u5728\u77e5\u540d\u751f\u6210\u6a21\u578b\u4e2d\u6700\u9ad8\u63d0\u901f4.2\u500d\uff0c\u80fd\u6548\u63d0\u5347\u663e\u8457\u3002", "conclusion": "MM2IM\u663e\u8457\u4f18\u5316TCONV\u5728\u8fb9\u7f18\u8bbe\u5907\u7684\u6027\u80fd\uff0c\u901f\u5ea6\u548c\u80fd\u6548\u5747\u4f18\u4e8e\u73b0\u6709\u65b9\u6848\u3002"}}
{"id": "2507.07116", "categories": ["cs.DC", "cs.AI", "cs.ET"], "pdf": "https://arxiv.org/pdf/2507.07116", "abs": "https://arxiv.org/abs/2507.07116", "authors": ["Juan Cano-Benito", "Andrea Cimmino", "Sven Hertling", "Heiko Paulheim", "Ra\u00fal Garc\u00eda-Castro"], "title": "Analysing semantic data storage in Distributed Ledger Technologies for Data Spaces", "comment": null, "summary": "Data spaces are emerging as decentralised infrastructures that enable\nsovereign, secure, and trustworthy data exchange among multiple participants.\nTo achieve semantic interoperability within these environments, the use of\nsemantic web technologies and knowledge graphs has been proposed. Although\ndistributed ledger technologies (DLT) fit as the underlying infrastructure for\ndata spaces, there remains a significant gap in terms of the efficient storage\nof semantic data on these platforms. This paper presents a systematic\nevaluation of semantic data storage across different types of DLT (public,\nprivate, and hybrid), using a real-world knowledge graph as an experimental\nbasis. The study compares performance, storage efficiency, resource\nconsumption, and the capabilities to update and query semantic data. The\nresults show that private DLTs are the most efficient for storing and managing\nsemantic content, while hybrid DLTs offer a balanced trade-off between public\nauditability and operational efficiency. This research leads to a discussion on\nthe selection of the most appropriate DLT infrastructure based on the data\nsovereignty requirements of decentralised data ecosystems.", "AI": {"tldr": "\u672c\u6587\u7cfb\u7edf\u8bc4\u4f30\u4e86\u4e0d\u540c\u7c7b\u578b\u7684\u5206\u5e03\u5f0f\u8d26\u672c\u6280\u672f\uff08DLT\uff09\u5728\u8bed\u4e49\u6570\u636e\u5b58\u50a8\u4e2d\u7684\u8868\u73b0\uff0c\u53d1\u73b0\u79c1\u6709DLT\u6548\u7387\u6700\u9ad8\uff0c\u6df7\u5408DLT\u5728\u516c\u5f00\u5ba1\u8ba1\u4e0e\u64cd\u4f5c\u6548\u7387\u95f4\u53d6\u5f97\u5e73\u8861\u3002", "motivation": "\u6570\u636e\u7a7a\u95f4\u9700\u8981\u53bb\u4e2d\u5fc3\u5316\u57fa\u7840\u8bbe\u65bd\u4ee5\u5b9e\u73b0\u8bed\u4e49\u4e92\u64cd\u4f5c\u6027\uff0c\u4f46\u73b0\u6709DLT\u5728\u8bed\u4e49\u6570\u636e\u5b58\u50a8\u65b9\u9762\u5b58\u5728\u6548\u7387\u4e0d\u8db3\u7684\u95ee\u9898\u3002", "method": "\u4f7f\u7528\u771f\u5b9e\u4e16\u754c\u77e5\u8bc6\u56fe\u8c31\u5bf9\u4e0d\u540c\u7c7b\u578bDLT\uff08\u516c\u6709\u3001\u79c1\u6709\u3001\u6df7\u5408\uff09\u8fdb\u884c\u6027\u80fd\u3001\u5b58\u50a8\u6548\u7387\u3001\u8d44\u6e90\u6d88\u8017\u53ca\u8bed\u4e49\u6570\u636e\u66f4\u65b0\u4e0e\u67e5\u8be2\u80fd\u529b\u7684\u6bd4\u8f83\u3002", "result": "\u79c1\u6709DLT\u5728\u8bed\u4e49\u5185\u5bb9\u5b58\u50a8\u548c\u7ba1\u7406\u4e0a\u6548\u7387\u6700\u9ad8\uff0c\u6df7\u5408DLT\u5728\u516c\u5f00\u5ba1\u8ba1\u4e0e\u64cd\u4f5c\u6548\u7387\u95f4\u63d0\u4f9b\u5e73\u8861\u3002", "conclusion": "\u7814\u7a76\u4e3a\u53bb\u4e2d\u5fc3\u5316\u6570\u636e\u751f\u6001\u7cfb\u7edf\u9009\u62e9\u5408\u9002DLT\u57fa\u7840\u8bbe\u65bd\u63d0\u4f9b\u4e86\u4f9d\u636e\uff0c\u9700\u6839\u636e\u6570\u636e\u4e3b\u6743\u9700\u6c42\u6743\u8861\u9009\u62e9\u3002"}}
{"id": "2507.07223", "categories": ["cs.DC", "cs.AR", "B.4.3; C.0; C.2.1; C.2.2"], "pdf": "https://arxiv.org/pdf/2507.07223", "abs": "https://arxiv.org/abs/2507.07223", "authors": ["Myoungsoo Jung"], "title": "Compute Can't Handle the Truth: Why Communication Tax Prioritizes Memory and Interconnects in Modern AI Infrastructure", "comment": null, "summary": "Modern AI workloads such as large language models (LLMs) and\nretrieval-augmented generation (RAG) impose severe demands on memory,\ncommunication bandwidth, and resource flexibility. Traditional GPU-centric\narchitectures struggle to scale due to growing inter-GPU communication\noverheads. This report introduces key AI concepts and explains how Transformers\nrevolutionized data representation in LLMs. We analyze large-scale AI hardware\nand data center designs, identifying scalability bottlenecks in hierarchical\nsystems. To address these, we propose a modular data center architecture based\non Compute Express Link (CXL) that enables disaggregated scaling of memory,\ncompute, and accelerators. We further explore accelerator-optimized\ninterconnects-collectively termed XLink (e.g., UALink, NVLink, NVLink\nFusion)-and introduce a hybrid CXL-over-XLink design to reduce long-distance\ndata transfers while preserving memory coherence. We also propose a\nhierarchical memory model that combines local and pooled memory, and evaluate\nlightweight CXL implementations, HBM, and silicon photonics for efficient\nscaling. Our evaluations demonstrate improved scalability, throughput, and\nflexibility in AI infrastructure.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8eCXL\u7684\u6a21\u5757\u5316\u6570\u636e\u4e2d\u5fc3\u67b6\u6784\uff0c\u4ee5\u89e3\u51b3\u73b0\u4ee3AI\u5de5\u4f5c\u8d1f\u8f7d\uff08\u5982\u5927\u8bed\u8a00\u6a21\u578b\u548c\u68c0\u7d22\u589e\u5f3a\u751f\u6210\uff09\u5bf9\u5185\u5b58\u3001\u901a\u4fe1\u5e26\u5bbd\u548c\u8d44\u6e90\u7075\u6d3b\u6027\u7684\u9ad8\u9700\u6c42\u3002\u901a\u8fc7\u4f18\u5316\u4e92\u8fde\u6280\u672f\u548c\u5206\u5c42\u5185\u5b58\u6a21\u578b\uff0c\u63d0\u9ad8\u4e86AI\u57fa\u7840\u8bbe\u65bd\u7684\u53ef\u6269\u5c55\u6027\u548c\u541e\u5410\u91cf\u3002", "motivation": "\u4f20\u7edfGPU\u67b6\u6784\u56e0GPU\u95f4\u901a\u4fe1\u5f00\u9500\u589e\u52a0\u800c\u96be\u4ee5\u6269\u5c55\uff0c\u65e0\u6cd5\u6ee1\u8db3\u73b0\u4ee3AI\u5de5\u4f5c\u8d1f\u8f7d\u7684\u9700\u6c42\u3002", "method": "\u63d0\u51fa\u57fa\u4e8eCXL\u7684\u6a21\u5757\u5316\u6570\u636e\u4e2d\u5fc3\u67b6\u6784\uff0c\u7ed3\u5408XLink\u4e92\u8fde\u6280\u672f\u548c\u5206\u5c42\u5185\u5b58\u6a21\u578b\uff0c\u51cf\u5c11\u957f\u8ddd\u79bb\u6570\u636e\u4f20\u8f93\u5e76\u4fdd\u6301\u5185\u5b58\u4e00\u81f4\u6027\u3002", "result": "\u8bc4\u4f30\u8868\u660e\uff0c\u8be5\u8bbe\u8ba1\u663e\u8457\u63d0\u5347\u4e86AI\u57fa\u7840\u8bbe\u65bd\u7684\u53ef\u6269\u5c55\u6027\u3001\u541e\u5410\u91cf\u548c\u7075\u6d3b\u6027\u3002", "conclusion": "\u901a\u8fc7\u6a21\u5757\u5316\u8bbe\u8ba1\u548c\u4f18\u5316\u4e92\u8fde\u6280\u672f\uff0c\u80fd\u591f\u6709\u6548\u652f\u6301\u73b0\u4ee3AI\u5de5\u4f5c\u8d1f\u8f7d\u7684\u9ad8\u9700\u6c42\u3002"}}
{"id": "2507.07117", "categories": ["cs.DC", "cs.AI", "cs.NI"], "pdf": "https://arxiv.org/pdf/2507.07117", "abs": "https://arxiv.org/abs/2507.07117", "authors": ["Jit Gupta", "Andrew Li", "Tarun Banka", "Ariel Cohen", "T. Sridhar", "Raj Yavatkar"], "title": "Collective Communication Profiling of Modern-day Machine Learning Workloads", "comment": "Poser, USENIX NSDI 2025, April 2025, Philadelphia, PA, USA", "summary": "Machine Learning jobs, carried out on large number of distributed high\nperformance systems, involve periodic communication using operations like\nAllReduce, AllGather, and Broadcast. These operations may create high bandwidth\nand bursty traffic patterns, leading to network congestion and packet loss,\nthus impacting the performance of these jobs. Hence it is imperative to analyze\nthese patterns, which can be helpful in provisioning network resources\ndepending on the type of machine learning workloads. In this poster we carry\nout extensive analysis of the collective communication behavior seen in a wide\nvariety of models (ex. DeepSeek, GPT, Llama, etc.) To achieve this we\ninstrument Nvidia Collective Communication Library logging functionality for\nricher context about the collectives and workloads. We adjust configuration\nparameters that influence collective communication behavior, such as\nparallelism, number of nodes, and model type. This overview presents and\ndiscusses some of the results on the collective communication behavior for the\nopen source DeepSeek V3 inferencing model, which includes operation type and\ncount, transfer sizes per operation, and request size distribution. Our\nanalysis shows that it makes sense to rethink current collective communication\nframeworks and network topologies so as to accommodate the effect of network\nanomalies on the mentioned workloads.", "AI": {"tldr": "\u5206\u6790\u673a\u5668\u5b66\u4e60\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u96c6\u4f53\u901a\u4fe1\u884c\u4e3a\u5bf9\u7f51\u7edc\u6027\u80fd\u7684\u5f71\u54cd\uff0c\u5e76\u63d0\u51fa\u4f18\u5316\u6846\u67b6\u548c\u62d3\u6251\u7ed3\u6784\u7684\u5fc5\u8981\u6027\u3002", "motivation": "\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u4e2d\u7684\u96c6\u4f53\u901a\u4fe1\u64cd\u4f5c\u53ef\u80fd\u5bfc\u81f4\u7f51\u7edc\u62e5\u585e\u548c\u6027\u80fd\u4e0b\u964d\uff0c\u9700\u5206\u6790\u5176\u884c\u4e3a\u4ee5\u4f18\u5316\u8d44\u6e90\u5206\u914d\u3002", "method": "\u901a\u8fc7Nvidia Collective Communication Library\u8bb0\u5f55\u548c\u5206\u6790\u591a\u79cd\u6a21\u578b\u7684\u901a\u4fe1\u884c\u4e3a\uff0c\u8c03\u6574\u5e76\u884c\u5ea6\u3001\u8282\u70b9\u6570\u548c\u6a21\u578b\u7c7b\u578b\u7b49\u53c2\u6570\u3002", "result": "\u5c55\u793a\u4e86DeepSeek V3\u63a8\u7406\u6a21\u578b\u7684\u901a\u4fe1\u884c\u4e3a\u6570\u636e\uff0c\u5305\u62ec\u64cd\u4f5c\u7c7b\u578b\u3001\u4f20\u8f93\u5927\u5c0f\u548c\u8bf7\u6c42\u5206\u5e03\u3002", "conclusion": "\u9700\u91cd\u65b0\u8bbe\u8ba1\u96c6\u4f53\u901a\u4fe1\u6846\u67b6\u548c\u7f51\u7edc\u62d3\u6251\u4ee5\u5e94\u5bf9\u7f51\u7edc\u5f02\u5e38\u5bf9\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u7684\u5f71\u54cd\u3002"}}
{"id": "2507.07120", "categories": ["cs.DC", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.07120", "abs": "https://arxiv.org/abs/2507.07120", "authors": ["Nidhi Bhatia", "Ankit More", "Ritika Borkar", "Tiyasa Mitra", "Ramon Matas", "Ritchie Zhao", "Maximilian Golub", "Dheevatsa Mudigere", "Brian Pharris", "Bita Darvish Rouhani"], "title": "Helix Parallelism: Rethinking Sharding Strategies for Interactive Multi-Million-Token LLM Decoding", "comment": null, "summary": "As LLMs scale to multi-million-token KV histories, real-time autoregressive\ndecoding under tight Token-to-Token Latency (TTL) constraints faces growing\npressure. Two core bottlenecks dominate: accessing Feed-Forward Network (FFN)\nweights and reading long KV caches. While Tensor Parallelism (TP) helps\nmitigate the cost of FFN weight reads, it does not scale well for attention.\nWhen TP width exceeds the number of KV heads, it leads to inefficient KV\nduplication, limits parallelism, and constrains batch size. Simultaneously,\nDRAM reads for long KV histories scale linearly with batch size, further\ncapping efficiency.\n  We introduce Helix Parallelism, a hybrid execution strategy that applies KV\nparallelism during attention to shard KV caches across GPUs, then reuses the\nsame GPUs for TP in dense LLMs or TPxExpert Parallel (EP) in MoEs during FFN\ncomputation. To preserve exact attention behavior, Helix includes a lightweight\ncommunication step. To minimize the exposed communication cost, we introduce\nHelix HOP-B. Helix HOP-B effectively minimizes communication overhead through\nbatchwise overlap, preserving low TTL while improving GPU efficiency. Compared\nto conventional parallelism approaches, Helix reduces TTL by up to 1.5x at\nfixed batch sizes and supports up to 32x larger batches under the same latency\nbudget for DeepSeek-R1, pushing forward the throughput-latency Pareto on\nBlackwell and making real-time inference with ultra-long-sequence practical.", "AI": {"tldr": "Helix Parallelism\u662f\u4e00\u79cd\u6df7\u5408\u6267\u884c\u7b56\u7565\uff0c\u901a\u8fc7KV\u5e76\u884c\u548cTP/EP\u5e76\u884c\u4f18\u5316LLM\u7684\u63a8\u7406\u6548\u7387\uff0c\u51cf\u5c11\u5ef6\u8fdf\u5e76\u652f\u6301\u66f4\u5927\u6279\u6b21\u3002", "motivation": "\u968f\u7740LLM\u7684KV\u5386\u53f2\u589e\u957f\uff0c\u5b9e\u65f6\u89e3\u7801\u9762\u4e34FFN\u6743\u91cd\u8bbf\u95ee\u548c\u957fKV\u7f13\u5b58\u8bfb\u53d6\u7684\u74f6\u9888\uff0c\u73b0\u6709\u65b9\u6cd5\u5982TP\u5728\u6ce8\u610f\u529b\u673a\u5236\u4e2d\u6548\u7387\u4e0d\u8db3\u3002", "method": "\u5f15\u5165Helix Parallelism\uff0c\u7ed3\u5408KV\u5e76\u884c\u548cTP/EP\u5e76\u884c\uff0c\u901a\u8fc7\u8f7b\u91cf\u901a\u4fe1\u6b65\u9aa4\u4fdd\u7559\u7cbe\u786e\u6ce8\u610f\u529b\u884c\u4e3a\uff0c\u5e76\u5229\u7528Helix HOP-B\u6700\u5c0f\u5316\u901a\u4fe1\u5f00\u9500\u3002", "result": "Helix\u5728\u56fa\u5b9a\u6279\u6b21\u4e0b\u51cf\u5c11TTL\u8fbe1.5\u500d\uff0c\u652f\u630132\u500d\u66f4\u5927\u6279\u6b21\uff0c\u63d0\u5347DeepSeek-R1\u7684\u541e\u5410-\u5ef6\u8fdfPareto\u6548\u7387\u3002", "conclusion": "Helix\u4f7f\u8d85\u957f\u5e8f\u5217\u5b9e\u65f6\u63a8\u7406\u6210\u4e3a\u53ef\u80fd\uff0c\u663e\u8457\u63d0\u5347\u6548\u7387\u3002"}}
{"id": "2507.07130", "categories": ["cs.DC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2507.07130", "abs": "https://arxiv.org/abs/2507.07130", "authors": ["Zihan Zhang", "Leon Wong", "Blesson Varghese"], "title": "Ampere: Communication-Efficient and High-Accuracy Split Federated Learning", "comment": null, "summary": "A Federated Learning (FL) system collaboratively trains neural networks\nacross devices and a server but is limited by significant on-device computation\ncosts. Split Federated Learning (SFL) systems mitigate this by offloading a\nblock of layers of the network from the device to a server. However, in doing\nso, it introduces large communication overheads due to frequent exchanges of\nintermediate activations and gradients between devices and the server and\nreduces model accuracy for non-IID data. We propose Ampere, a novel\ncollaborative training system that simultaneously minimizes on-device\ncomputation and device-server communication while improving model accuracy.\nUnlike SFL, which uses a global loss by iterative end-to-end training, Ampere\ndevelops unidirectional inter-block training to sequentially train the device\nand server block with a local loss, eliminating the transfer of gradients. A\nlightweight auxiliary network generation method decouples training between the\ndevice and server, reducing frequent intermediate exchanges to a single\ntransfer, which significantly reduces the communication overhead. Ampere\nmitigates the impact of data heterogeneity by consolidating activations\ngenerated by the trained device block to train the server block, in contrast to\nSFL, which trains on device-specific, non-IID activations. Extensive\nexperiments on multiple CNNs and transformers show that, compared to\nstate-of-the-art SFL baseline systems, Ampere (i) improves model accuracy by up\nto 13.26% while reducing training time by up to 94.6%, (ii) reduces\ndevice-server communication overhead by up to 99.1% and on-device computation\nby up to 93.13%, and (iii) reduces standard deviation of accuracy by 53.39% for\nvarious non-IID degrees highlighting superior performance when faced with\nheterogeneous data.", "AI": {"tldr": "Ampere\u662f\u4e00\u79cd\u65b0\u578b\u7684\u8054\u90a6\u5b66\u4e60\u7cfb\u7edf\uff0c\u901a\u8fc7\u51cf\u5c11\u8bbe\u5907\u8ba1\u7b97\u548c\u901a\u4fe1\u5f00\u9500\uff0c\u540c\u65f6\u63d0\u9ad8\u6a21\u578b\u51c6\u786e\u6027\uff0c\u89e3\u51b3\u4e86Split Federated Learning (SFL)\u7684\u95ee\u9898\u3002", "motivation": "SFL\u867d\u7136\u51cf\u5c11\u4e86\u8bbe\u5907\u8ba1\u7b97\u8d1f\u62c5\uff0c\u4f46\u5f15\u5165\u4e86\u5927\u91cf\u901a\u4fe1\u5f00\u9500\u5e76\u964d\u4f4e\u4e86\u975e\u72ec\u7acb\u540c\u5206\u5e03\uff08non-IID\uff09\u6570\u636e\u7684\u6a21\u578b\u51c6\u786e\u6027\u3002Ampere\u65e8\u5728\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002", "method": "Ampere\u91c7\u7528\u5355\u5411\u5757\u95f4\u8bad\u7ec3\u548c\u8f7b\u91cf\u7ea7\u8f85\u52a9\u7f51\u7edc\u751f\u6210\u65b9\u6cd5\uff0c\u51cf\u5c11\u68af\u5ea6\u4f20\u8f93\u548c\u4e2d\u95f4\u4ea4\u6362\uff0c\u540c\u65f6\u901a\u8fc7\u6574\u5408\u8bbe\u5907\u5757\u751f\u6210\u7684\u6fc0\u6d3b\u6765\u8bad\u7ec3\u670d\u52a1\u5668\u5757\u3002", "result": "\u5b9e\u9a8c\u8868\u660e\uff0cAmpere\u5728\u6a21\u578b\u51c6\u786e\u6027\u3001\u8bad\u7ec3\u65f6\u95f4\u3001\u901a\u4fe1\u5f00\u9500\u548c\u8bbe\u5907\u8ba1\u7b97\u65b9\u9762\u663e\u8457\u4f18\u4e8eSFL\u57fa\u7ebf\u7cfb\u7edf\u3002", "conclusion": "Ampere\u5728\u8054\u90a6\u5b66\u4e60\u4e2d\u5b9e\u73b0\u4e86\u9ad8\u6548\u3001\u4f4e\u5f00\u9500\u548c\u9ad8\u51c6\u786e\u6027\u7684\u8bad\u7ec3\uff0c\u7279\u522b\u9002\u7528\u4e8e\u975eIID\u6570\u636e\u573a\u666f\u3002"}}
{"id": "2507.07144", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2507.07144", "abs": "https://arxiv.org/abs/2507.07144", "authors": ["Hongyi Xie", "Min Zhou", "Qiao Yu", "Jialiang Yu", "Zhenli Sheng", "Hong Xie", "Defu Lian"], "title": "M$^2$-MFP: A Multi-Scale and Multi-Level Memory Failure Prediction Framework for Reliable Cloud Infrastructure", "comment": null, "summary": "As cloud services become increasingly integral to modern IT infrastructure,\nensuring hardware reliability is essential to sustain high-quality service.\nMemory failures pose a significant threat to overall system stability, making\naccurate failure prediction through the analysis of memory error logs (i.e.,\nCorrectable Errors) imperative. Existing memory failure prediction approaches\nhave notable limitations: rule-based expert models suffer from limited\ngeneralizability and low recall rates, while automated feature extraction\nmethods exhibit suboptimal performance. To address these limitations, we\npropose M$^2$-MFP: a Multi-scale and hierarchical memory failure prediction\nframework designed to enhance the reliability and availability of cloud\ninfrastructure. M$^2$-MFP converts Correctable Errors (CEs) into multi-level\nbinary matrix representations and introduces a Binary Spatial Feature Extractor\n(BSFE) to automatically extract high-order features at both DIMM-level and\nbit-level. Building upon the BSFE outputs, we develop a dual-path temporal\nmodeling architecture: 1) a time-patch module that aggregates multi-level\nfeatures within observation windows, and 2) a time-point module that employs\ninterpretable rule-generation trees trained on bit-level patterns. Experiments\non both benchmark datasets and real-world deployment show the superiority of\nM$^2$-MFP as it outperforms existing state-of-the-art methods by significant\nmargins. Code and data are available at this repository:\nhttps://github.com/hwcloud-RAS/M2-MFP.", "AI": {"tldr": "M$^2$-MFP\u662f\u4e00\u79cd\u591a\u5c3a\u5ea6\u5206\u5c42\u5185\u5b58\u6545\u969c\u9884\u6d4b\u6846\u67b6\uff0c\u901a\u8fc7\u4e8c\u8fdb\u5236\u7a7a\u95f4\u7279\u5f81\u63d0\u53d6\u5668\u548c\u53cc\u8def\u5f84\u65f6\u95f4\u5efa\u6a21\u67b6\u6784\uff0c\u663e\u8457\u63d0\u5347\u4e86\u5185\u5b58\u6545\u969c\u9884\u6d4b\u7684\u6027\u80fd\u3002", "motivation": "\u5185\u5b58\u6545\u969c\u5bf9\u4e91\u57fa\u7840\u8bbe\u65bd\u7684\u7a33\u5b9a\u6027\u6784\u6210\u5a01\u80c1\uff0c\u73b0\u6709\u9884\u6d4b\u65b9\u6cd5\u5b58\u5728\u6cdb\u5316\u80fd\u529b\u5dee\u548c\u6027\u80fd\u4e0d\u8db3\u7684\u95ee\u9898\u3002", "method": "\u5c06\u53ef\u7ea0\u6b63\u9519\u8bef\u8f6c\u6362\u4e3a\u591a\u7ea7\u4e8c\u8fdb\u5236\u77e9\u9635\u8868\u793a\uff0c\u5f15\u5165\u4e8c\u8fdb\u5236\u7a7a\u95f4\u7279\u5f81\u63d0\u53d6\u5668\uff08BSFE\uff09\uff0c\u5e76\u5f00\u53d1\u53cc\u8def\u5f84\u65f6\u95f4\u5efa\u6a21\u67b6\u6784\u3002", "result": "\u5728\u57fa\u51c6\u6570\u636e\u96c6\u548c\u5b9e\u9645\u90e8\u7f72\u4e2d\uff0cM$^2$-MFP\u663e\u8457\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5\u3002", "conclusion": "M$^2$-MFP\u6709\u6548\u63d0\u5347\u4e86\u5185\u5b58\u6545\u969c\u9884\u6d4b\u7684\u51c6\u786e\u6027\u548c\u53ef\u9760\u6027\uff0c\u9002\u7528\u4e8e\u4e91\u57fa\u7840\u8bbe\u65bd\u3002"}}
{"id": "2507.07352", "categories": ["cs.DC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2507.07352", "abs": "https://arxiv.org/abs/2507.07352", "authors": ["Lo\u00efc Pottier", "Konstantia Georgouli", "Timothy S. Carpenter", "Fikret Aydin", "Jeremy O. B. Tempkin", "Dwight V. Nissley", "Frederick H. Streitz", "Thomas R. W. Scogland", "Peer-Timo Bremer", "Felice C. Lightstone", "Helgi I. Ing\u00f3lfsson"], "title": "Machine Learning-driven Multiscale MD Workflows: The Mini-MuMMI Experience", "comment": null, "summary": "Computational models have become one of the prevalent methods to model\ncomplex phenomena. To accurately model complex interactions, such as detailed\nbiomolecular interactions, scientists often rely on multiscale models comprised\nof several internal models operating at difference scales, ranging from\nmicroscopic to macroscopic length and time scales. Bridging the gap between\ndifferent time and length scales has historically been challenging but the\nadvent of newer machine learning (ML) approaches has shown promise for tackling\nthat task. Multiscale models require massive amounts of computational power and\na powerful workflow management system. Orchestrating ML-driven multiscale\nstudies on parallel systems with thousands of nodes is challenging, the\nworkflow must schedule, allocate and control thousands of simulations operating\nat different scales. Here, we discuss the massively parallel Multiscale\nMachine-Learned Modeling Infrastructure (MuMMI), a multiscale workflow\nmanagement infrastructure, that can orchestrate thousands of molecular dynamics\n(MD) simulations operating at different timescales, spanning from millisecond\nto nanosecond. More specifically, we introduce a novel version of MuMMI called\n\"mini-MuMMI\". Mini-MuMMI is a curated version of MuMMI designed to run on\nmodest HPC systems or even laptops whereas MuMMI requires larger HPC systems.\nWe demonstrate mini-MuMMI utility by exploring RAS-RAF membrane interactions\nand discuss the different challenges behind the generalization of multiscale\nworkflows and how mini-MuMMI can be leveraged to target a broader range of\napplications outside of MD and RAS-RAF interactions.", "AI": {"tldr": "\u8bba\u6587\u4ecb\u7ecd\u4e86\u591a\u5c3a\u5ea6\u673a\u5668\u5b66\u4e60\u5efa\u6a21\u57fa\u7840\u8bbe\u65bdMuMMI\u53ca\u5176\u8f7b\u91cf\u7248mini-MuMMI\uff0c\u7528\u4e8e\u7ba1\u7406\u5927\u89c4\u6a21\u5e76\u884c\u591a\u5c3a\u5ea6\u5206\u5b50\u52a8\u529b\u5b66\u6a21\u62df\uff0c\u5e76\u5c55\u793a\u4e86\u5176\u5728RAS-RAF\u819c\u76f8\u4e92\u4f5c\u7528\u4e2d\u7684\u5e94\u7528\u3002", "motivation": "\u591a\u5c3a\u5ea6\u6a21\u578b\u5728\u590d\u6742\u73b0\u8c61\u5efa\u6a21\u4e2d\u5e94\u7528\u5e7f\u6cdb\uff0c\u4f46\u8de8\u5c3a\u5ea6\u5efa\u6a21\u548c\u5e76\u884c\u8ba1\u7b97\u7ba1\u7406\u5177\u6709\u6311\u6218\u6027\u3002\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u4e3a\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u63d0\u4f9b\u4e86\u65b0\u601d\u8def\u3002", "method": "\u63d0\u51fa\u4e86MuMMI\u53ca\u5176\u8f7b\u91cf\u7248mini-MuMMI\uff0c\u7528\u4e8e\u7ba1\u7406\u548c\u534f\u8c03\u5927\u89c4\u6a21\u591a\u5c3a\u5ea6\u5206\u5b50\u52a8\u529b\u5b66\u6a21\u62df\uff0c\u652f\u6301\u4ece\u6beb\u79d2\u5230\u7eb3\u79d2\u7684\u65f6\u95f4\u5c3a\u5ea6\u3002", "result": "\u5c55\u793a\u4e86mini-MuMMI\u5728RAS-RAF\u819c\u76f8\u4e92\u4f5c\u7528\u4e2d\u7684\u5e94\u7528\uff0c\u9a8c\u8bc1\u4e86\u5176\u5728\u5c0f\u89c4\u6a21\u8ba1\u7b97\u7cfb\u7edf\u4e0a\u7684\u5b9e\u7528\u6027\u3002", "conclusion": "mini-MuMMI\u6269\u5c55\u4e86\u591a\u5c3a\u5ea6\u5de5\u4f5c\u6d41\u7684\u9002\u7528\u8303\u56f4\uff0c\u4e3a\u66f4\u5e7f\u6cdb\u7684\u5e94\u7528\u63d0\u4f9b\u4e86\u53ef\u80fd\u3002"}}
{"id": "2507.07400", "categories": ["cs.DC", "cs.MA"], "pdf": "https://arxiv.org/pdf/2507.07400", "abs": "https://arxiv.org/abs/2507.07400", "authors": ["Zaifeng Pan", "Ajjkumar Patel", "Zhengding Hu", "Yipeng Shen", "Yue Guan", "Wan-Lu Li", "Lianhui Qin", "Yida Wang", "Yufei Ding"], "title": "KVFlow: Efficient Prefix Caching for Accelerating LLM-Based Multi-Agent Workflows", "comment": null, "summary": "Large language model (LLM) based agentic workflows have become a popular\nparadigm for coordinating multiple specialized agents to solve complex tasks.\nTo improve serving efficiency, existing LLM systems employ prefix caching to\nreuse key-value (KV) tensors corresponding to agents' fixed prompts, thereby\navoiding redundant computation across repeated invocations. However, current\nsystems typically evict KV caches using a Least Recently Used (LRU) policy,\nwhich fails to anticipate future agent usage and often discards KV caches\nshortly before their reuse. This leads to frequent cache misses and substantial\nrecomputation or swapping overhead. We present KVFlow, a workflow-aware KV\ncache management framework tailored for agentic workloads. KVFlow abstracts the\nagent execution schedule as an Agent Step Graph and assigns each agent a\nsteps-to-execution value that estimates its temporal proximity to future\nactivation. These values guide a fine-grained eviction policy at the KV node\nlevel, allowing KVFlow to preserve entries likely to be reused and efficiently\nmanage shared prefixes in tree-structured caches. Moreover, KVFlow introduces a\nfully overlapped KV prefetching mechanism, which proactively loads required\ntensors from CPU to GPU in background threads for agents scheduled in the next\nstep, thereby avoiding cache miss stalls during generation. Compared to SGLang\nwith hierarchical radix cache, KVFlow achieves up to 1.83$\\times$ speedup for\nsingle workflows with large prompts, and up to 2.19$\\times$ speedup for\nscenarios with many concurrent workflows.", "AI": {"tldr": "KVFlow\u662f\u4e00\u79cd\u9488\u5bf9\u57fa\u4e8eLLM\u7684\u4ee3\u7406\u5de5\u4f5c\u6d41\u7a0b\u7684KV\u7f13\u5b58\u7ba1\u7406\u6846\u67b6\uff0c\u901a\u8fc7\u9884\u6d4b\u4ee3\u7406\u7684\u672a\u6765\u4f7f\u7528\u60c5\u51b5\u4f18\u5316\u7f13\u5b58\u7b56\u7565\uff0c\u663e\u8457\u63d0\u5347\u6548\u7387\u3002", "motivation": "\u73b0\u6709\u7cfb\u7edf\u4f7f\u7528LRU\u7b56\u7565\u7ba1\u7406KV\u7f13\u5b58\uff0c\u65e0\u6cd5\u9884\u6d4b\u4ee3\u7406\u7684\u672a\u6765\u4f7f\u7528\uff0c\u5bfc\u81f4\u9891\u7e41\u7f13\u5b58\u672a\u547d\u4e2d\u548c\u8ba1\u7b97\u5f00\u9500\u3002", "method": "KVFlow\u901a\u8fc7Agent Step Graph\u62bd\u8c61\u4ee3\u7406\u6267\u884c\u8ba1\u5212\uff0c\u5e76\u5f15\u5165\u6b65\u9aa4\u5230\u6267\u884c\u503c\u6307\u5bfc\u7ec6\u7c92\u5ea6\u7f13\u5b58\u7b56\u7565\uff0c\u540c\u65f6\u652f\u6301\u91cd\u53e0KV\u9884\u53d6\u3002", "result": "KVFlow\u5728\u5355\u5de5\u4f5c\u6d41\u7a0b\u548c\u591a\u5e76\u53d1\u5de5\u4f5c\u6d41\u7a0b\u4e2d\u5206\u522b\u5b9e\u73b0\u4e861.83\u500d\u548c2.19\u500d\u7684\u52a0\u901f\u3002", "conclusion": "KVFlow\u901a\u8fc7\u667a\u80fd\u7f13\u5b58\u7ba1\u7406\u548c\u9884\u53d6\u673a\u5236\uff0c\u663e\u8457\u63d0\u5347\u4e86\u4ee3\u7406\u5de5\u4f5c\u6d41\u7a0b\u7684\u6548\u7387\u3002"}}
{"id": "2507.07671", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2507.07671", "abs": "https://arxiv.org/abs/2507.07671", "authors": ["Jovan Prodanov", "Bla\u017e Bertalani\u010d", "Carolina Fortuna", "Shih-Kai Chou", "Matja\u017e Branko Juri\u010d", "Ramon Sanchez-Iborra", "Jernej Hribar"], "title": "Multi-agent Reinforcement Learning-based In-place Scaling Engine for Edge-cloud Systems", "comment": "Accepted at IEEE Cloud 2025", "summary": "Modern edge-cloud systems face challenges in efficiently scaling resources to\nhandle dynamic and unpredictable workloads. Traditional scaling approaches\ntypically rely on static thresholds and predefined rules, which are often\ninadequate for optimizing resource utilization and maintaining performance in\ndistributed and dynamic environments. This inefficiency hinders the\nadaptability and performance required in edge-cloud infrastructures, which can\nonly be achieved through the newly proposed in-place scaling. To address this\nproblem, we propose the Multi-Agent Reinforcement Learning-based In-place\nScaling Engine (MARLISE) that enables seamless, dynamic, reactive control with\nin-place resource scaling. We develop our solution using two Deep Reinforcement\nLearning algorithms: Deep Q-Network (DQN), and Proximal Policy Optimization\n(PPO). We analyze each version of the proposed MARLISE solution using dynamic\nworkloads, demonstrating their ability to ensure low response times of\nmicroservices and scalability. Our results show that MARLISE-based approaches\noutperform heuristic method in managing resource elasticity while maintaining\nmicroservice response times and achieving higher resource efficiency.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u591a\u667a\u80fd\u4f53\u5f3a\u5316\u5b66\u4e60\u7684\u52a8\u6001\u8d44\u6e90\u6269\u5c55\u5f15\u64ce\uff08MARLISE\uff09\uff0c\u7528\u4e8e\u89e3\u51b3\u8fb9\u7f18\u4e91\u7cfb\u7edf\u4e2d\u8d44\u6e90\u6269\u5c55\u6548\u7387\u4f4e\u7684\u95ee\u9898\u3002", "motivation": "\u4f20\u7edf\u8d44\u6e90\u6269\u5c55\u65b9\u6cd5\u4f9d\u8d56\u9759\u6001\u9608\u503c\u548c\u9884\u5b9a\u4e49\u89c4\u5219\uff0c\u96be\u4ee5\u9002\u5e94\u52a8\u6001\u548c\u5206\u5e03\u5f0f\u73af\u5883\u7684\u9700\u6c42\uff0c\u5bfc\u81f4\u8d44\u6e90\u5229\u7528\u7387\u548c\u6027\u80fd\u4e0d\u4f73\u3002", "method": "\u91c7\u7528\u4e24\u79cd\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\uff08DQN\u548cPPO\uff09\u5f00\u53d1\u4e86MARLISE\uff0c\u5b9e\u73b0\u52a8\u6001\u3001\u53cd\u5e94\u5f0f\u7684\u8d44\u6e90\u6269\u5c55\u3002", "result": "\u5b9e\u9a8c\u8868\u660e\uff0cMARLISE\u5728\u52a8\u6001\u8d1f\u8f7d\u4e0b\u80fd\u663e\u8457\u964d\u4f4e\u5fae\u670d\u52a1\u54cd\u5e94\u65f6\u95f4\uff0c\u5e76\u63d0\u9ad8\u8d44\u6e90\u6548\u7387\uff0c\u4f18\u4e8e\u542f\u53d1\u5f0f\u65b9\u6cd5\u3002", "conclusion": "MARLISE\u4e3a\u8fb9\u7f18\u4e91\u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e00\u79cd\u9ad8\u6548\u7684\u52a8\u6001\u8d44\u6e90\u6269\u5c55\u89e3\u51b3\u65b9\u6848\uff0c\u63d0\u5347\u4e86\u6027\u80fd\u548c\u9002\u5e94\u6027\u3002"}}
{"id": "2507.07932", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2507.07932", "abs": "https://arxiv.org/abs/2507.07932", "authors": ["Guilin Zhang", "Wulan Guo", "Ziqi Tan", "Qiang Guan", "Hailong Jiang"], "title": "KIS-S: A GPU-Aware Kubernetes Inference Simulator with RL-Based Auto-Scaling", "comment": "8 pages, 6 figures", "summary": "Autoscaling GPU inference workloads in Kubernetes remains challenging due to\nthe reactive and threshold-based nature of default mechanisms such as the\nHorizontal Pod Autoscaler (HPA), which struggle under dynamic and bursty\ntraffic patterns and lack integration with GPU-level metrics. We present KIS-S,\na unified framework that combines KISim, a GPU-aware Kubernetes Inference\nSimulator, with KIScaler, a Proximal Policy Optimization (PPO)-based\nautoscaler. KIScaler learns latency-aware and resource-efficient scaling\npolicies entirely in simulation, and is directly deployed without retraining.\nExperiments across four traffic patterns show that KIScaler improves average\nreward by 75.2%, reduces P95 latency up to 6.7x over CPU baselines, and\ngeneralizes without retraining. Our work bridges the gap between reactive\nautoscaling and intelligent orchestration for scalable GPU-accelerated\nenvironments.", "AI": {"tldr": "KIS-S\u6846\u67b6\u7ed3\u5408GPU\u611f\u77e5\u7684Kubernetes\u63a8\u7406\u6a21\u62df\u5668\uff08KISim\uff09\u548c\u57fa\u4e8ePPO\u7684\u81ea\u52a8\u6269\u5c55\u5668\uff08KIScaler\uff09\uff0c\u663e\u8457\u63d0\u5347\u52a8\u6001\u6d41\u91cf\u4e0b\u7684GPU\u63a8\u7406\u6027\u80fd\u3002", "motivation": "\u89e3\u51b3Kubernetes\u4e2dGPU\u63a8\u7406\u5de5\u4f5c\u8d1f\u8f7d\u7684\u81ea\u52a8\u6269\u5c55\u95ee\u9898\uff0c\u5c24\u5176\u662f\u52a8\u6001\u548c\u7a81\u53d1\u6d41\u91cf\u4e0b\u9ed8\u8ba4\u673a\u5236\uff08\u5982HPA\uff09\u7684\u4e0d\u8db3\u3002", "method": "\u63d0\u51faKIS-S\u6846\u67b6\uff0c\u7ed3\u5408KISim\uff08\u6a21\u62df\u5668\uff09\u548cKIScaler\uff08\u57fa\u4e8ePPO\u7684\u81ea\u52a8\u6269\u5c55\u5668\uff09\uff0c\u5728\u6a21\u62df\u4e2d\u5b66\u4e60\u5ef6\u8fdf\u611f\u77e5\u548c\u8d44\u6e90\u9ad8\u6548\u7684\u6269\u5c55\u7b56\u7565\u3002", "result": "\u5b9e\u9a8c\u663e\u793aKIScaler\u5e73\u5747\u5956\u52b1\u63d0\u534775.2%\uff0cP95\u5ef6\u8fdf\u964d\u4f4e6.7\u500d\uff0c\u4e14\u65e0\u9700\u91cd\u65b0\u8bad\u7ec3\u5373\u53ef\u6cdb\u5316\u3002", "conclusion": "KIS-S\u586b\u8865\u4e86\u53cd\u5e94\u5f0f\u81ea\u52a8\u6269\u5c55\u4e0e\u667a\u80fd\u7f16\u6392\u4e4b\u95f4\u7684\u5dee\u8ddd\uff0c\u9002\u7528\u4e8eGPU\u52a0\u901f\u73af\u5883\u3002"}}
