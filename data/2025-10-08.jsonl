{"id": "2510.05245", "categories": ["cs.AR", "cs.ET", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.05245", "abs": "https://arxiv.org/abs/2510.05245", "authors": ["Yue Pan", "Zihan Xia", "Po-Kai Hsu", "Lanxiang Hu", "Hyungyo Kim", "Janak Sharda", "Minxuan Zhou", "Nam Sung Kim", "Shimeng Yu", "Tajana Rosing", "Mingu Kang"], "title": "Stratum: System-Hardware Co-Design with Tiered Monolithic 3D-Stackable DRAM for Efficient MoE Serving", "comment": null, "summary": "As Large Language Models (LLMs) continue to evolve, Mixture of Experts (MoE)\narchitecture has emerged as a prevailing design for achieving state-of-the-art\nperformance across a wide range of tasks. MoE models use sparse gating to\nactivate only a handful of expert sub-networks per input, achieving\nbillion-parameter capacity with inference costs akin to much smaller models.\nHowever, such models often pose challenges for hardware deployment due to the\nmassive data volume introduced by the MoE layers. To address the challenges of\nserving MoE models, we propose Stratum, a system-hardware co-design approach\nthat combines the novel memory technology Monolithic 3D-Stackable DRAM (Mono3D\nDRAM), near-memory processing (NMP), and GPU acceleration. The logic and Mono3D\nDRAM dies are connected through hybrid bonding, whereas the Mono3D DRAM stack\nand GPU are interconnected via silicon interposer. Mono3D DRAM offers higher\ninternal bandwidth than HBM thanks to the dense vertical interconnect pitch\nenabled by its monolithic structure, which supports implementations of\nhigher-performance near-memory processing. Furthermore, we tackle the latency\ndifferences introduced by aggressive vertical scaling of Mono3D DRAM along the\nz-dimension by constructing internal memory tiers and assigning data across\nlayers based on access likelihood, guided by topic-based expert usage\nprediction to boost NMP throughput. The Stratum system achieves up to 8.29x\nimprovement in decoding throughput and 7.66x better energy efficiency across\nvarious benchmarks compared to GPU baselines."}
{"id": "2510.05327", "categories": ["cs.AR", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.05327", "abs": "https://arxiv.org/abs/2510.05327", "authors": ["Zahin Ibnat", "Paul E. Calzada", "Rasin Mohammed Ihtemam", "Sujan Kumar Saha", "Jingbo Zhou", "Farimah Farahmandi", "Mark Tehranipoor"], "title": "DeepV: A Model-Agnostic Retrieval-Augmented Framework for Verilog Code Generation with a High-Quality Knowledge Base", "comment": "22 pages, 6 figures", "summary": "As large language models (LLMs) continue to be integrated into modern\ntechnology, there has been an increased push towards code generation\napplications, which also naturally extends to hardware design automation.\nLLM-based solutions for register transfer level (RTL) code generation for\nintellectual property (IP) designs have grown, especially with fine-tuned LLMs,\nprompt engineering, and agentic approaches becoming popular in literature.\nHowever, a gap has been exposed in these techniques, as they fail to integrate\nnovel IPs into the model's knowledge base, subsequently resulting in poorly\ngenerated code. Additionally, as general-purpose LLMs continue to improve,\nfine-tuned methods on older models will not be able to compete to produce more\naccurate and efficient designs. Although some retrieval augmented generation\n(RAG) techniques exist to mitigate challenges presented in fine-tuning\napproaches, works tend to leverage low-quality codebases, incorporate\ncomputationally expensive fine-tuning in the frameworks, or do not use RAG\ndirectly in the RTL generation step. In this work, we introduce DeepV: a\nmodel-agnostic RAG framework to generate RTL designs by enhancing context\nthrough a large, high-quality dataset without any RTL-specific training. Our\nframework benefits the latest commercial LLM, OpenAI's GPT-5, with a near 17%\nincrease in performance on the VerilogEval benchmark. We host DeepV for use by\nthe community in a Hugging Face (HF) Space:\nhttps://huggingface.co/spaces/FICS-LLM/DeepV."}
{"id": "2510.05632", "categories": ["cs.AR", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.05632", "abs": "https://arxiv.org/abs/2510.05632", "authors": ["Tianhao Zhu", "Dahu Feng", "Erhu Feng", "Yubin Xia"], "title": "From Principles to Practice: A Systematic Study of LLM Serving on Multi-core NPUs", "comment": null, "summary": "With the widespread adoption of Large Language Models (LLMs), the demand for\nhigh-performance LLM inference services continues to grow. To meet this demand,\na growing number of AI accelerators have been proposed, such as Google TPU,\nHuawei NPU, Graphcore IPU, and Cerebras WSE, etc. Most of these accelerators\nadopt multi-core architectures to achieve enhanced scalability, but lack the\nflexibility of SIMT architectures. Therefore, without careful configuration of\nthe hardware architecture, as well as deliberate design of tensor parallelism\nand core placement strategies, computational resources may be underutilized,\nresulting in suboptimal inference performance.\n  To address these challenges, we first present a multi-level simulation\nframework with both transaction-level and performance-model-based simulation\nfor multi-core NPUs. Using this simulator, we conduct a systematic analysis and\nfurther propose the optimal solutions for tensor parallelism strategies, core\nplacement policies, memory management methods, as well as the selection between\nPD-disaggregation and PD-fusion on multi-core NPUs. We conduct comprehensive\nexperiments on representative LLMs and various NPU configurations. The\nevaluation results demonstrate that, our solution can achieve 1.32x-6.03x\nspeedup compared to SOTA designs for multi-core NPUs across different hardware\nconfigurations. As for LLM serving, our work offers guidance on designing\noptimal hardware architectures and serving strategies for multi-core NPUs\nacross various LLM workloads."}
{"id": "2510.05787", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2510.05787", "abs": "https://arxiv.org/abs/2510.05787", "authors": ["Panagiota Nikolaou", "Freddy Gabbay", "Jawad Haj-Yahya", "Yiannakis Sazeides"], "title": "An opportunity to improve Data Center Efficiency: Optimizing the Server's Upgrade Cycle", "comment": "This work was has been submitted and presented at the 1st\n  International Workshop on Data Center Energy Efficiency (DCEE-2025) at\n  ISCA-2025, June 21, 2025, Tokyo, Japan", "summary": "This work aims to improve a data center's efficiency by optimizing the server\nupgrade plan: determine the optimal timing for replacing old servers with new\nones. The opportunity presented by this approach is demonstrated through a\nstudy based on historical server data. The study establishes a significant\nopportunity to increase the QPS/(TCOxCO2) metric by formulating a global\nupgrade plan at the data center's design time covering its entire life cycle.\nThis plan leverages information, such as server entry year, performance, and\nactive power consumption for both existing and future servers. Our findings\nreveal that an optimal global upgrade plan, may involve upgrades at non fixed\ntime periods and outperforms local upgrade plans. Local upgrade plans follow a\nfixed, equal-length cycle and make decisions based only on currently available\nserver models. These local plans select the best available server at each\nupgrade cycle without accounting for future server releases."}
{"id": "2510.05109", "categories": ["cs.DC", "cs.AI", "cs.CL", "eess.SP"], "pdf": "https://arxiv.org/pdf/2510.05109", "abs": "https://arxiv.org/abs/2510.05109", "authors": ["Yilong Li", "Shuai Zhang", "Yijing Zeng", "Hao Zhang", "Xinmiao Xiong", "Jingyu Liu", "Pan Hu", "Suman Banerjee"], "title": "Tiny but Mighty: A Software-Hardware Co-Design Approach for Efficient Multimodal Inference on Battery-Powered Small Devices", "comment": null, "summary": "Large Multimodal Models (LMMs) are inherently modular, consisting of vision\nand audio encoders, projectors, and large language models. Yet, they are almost\nalways executed monolithically, which underutilizes the heterogeneous\naccelerators (NPUs, GPUs, DSPs) in modern SoCs and leads to high end-to-end\nlatency. In this paper, we present NANOMIND, a hardware--software co-design\ninference framework for Large Multimodal Models (LMMs) that breaks large models\ninto modular ``bricks'' (vision, language, audio, etc.) and maps each to its\nideal accelerator. The key insight is that large models can be broken into\nmodular components and scheduled to run on the most appropriate compute units.\nIt performs module-level dynamic offloading across accelerators on\nunified-memory SoCs. By combining customized hardware design, system-level\nscheduling, and optimized low-bit computation kernels, we demonstrate our\nframework with a compact, battery-powered device capable of running LMMs\nentirely on device. This prototype functions as a self-contained intelligent\nassistant that requires no network connectivity, while achieving higher\nthroughput and superior power efficiency under strict resource constraints. The\ndesign further bypasses CPU bottlenecks and reduces redundant memory usage\nthrough token-aware buffer management and module-level coordination. Our system\noutperforms existing implementations in resource efficiency, cutting energy\nconsumption by 42.3\\% and GPU memory usage by 11.2\\%. This enables a\nbattery-powered device to run LLaVA-OneVision with a camera for nearly half a\nday and LLaMA-3-8B for voice interactions up to almost 20.8 hours."}
{"id": "2510.05476", "categories": ["cs.DC", "cs.AR", "cs.NI"], "pdf": "https://arxiv.org/pdf/2510.05476", "abs": "https://arxiv.org/abs/2510.05476", "authors": ["Xi Wang", "Bin Ma", "Jongryool Kim", "Byungil Koh", "Hoshik Kim", "Dong Li"], "title": "cMPI: Using CXL Memory Sharing for MPI One-Sided and Two-Sided Inter-Node Communications", "comment": null, "summary": "Message Passing Interface (MPI) is a foundational programming model for\nhigh-performance computing. MPI libraries traditionally employ network\ninterconnects (e.g., Ethernet and InfiniBand) and network protocols (e.g., TCP\nand RoCE) with complex software stacks for cross-node communication. We present\ncMPI, the first work to optimize MPI point-to-point communication (both\none-sided and two-sided) using CXL memory sharing on a real CXL platform,\ntransforming cross-node communication into memory transactions and data copies\nwithin CXL memory, bypassing traditional network protocols. We analyze\nperformance across various interconnects and find that CXL memory sharing\nachieves 7.2x-8.1x lower latency than TCP-based interconnects deployed in\nsmall- and medium-scale clusters. We address challenges of CXL memory sharing\nfor MPI communication, including data object management over the dax\nrepresentation [50], cache coherence, and atomic operations. Overall, cMPI\noutperforms TCP over standard Ethernet NIC and high-end SmartNIC by up to 49x\nand 72x in latency and bandwidth, respectively, for small messages."}
{"id": "2510.05111", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.05111", "abs": "https://arxiv.org/abs/2510.05111", "authors": ["Ian McDougall", "Noah Scott", "Joon Huh", "Kirthevasan Kandasamy", "Karthikeyan Sankaralingam"], "title": "Agora: Bridging the GPU Cloud Resource-Price Disconnect", "comment": "15 pages, 6 figures", "summary": "The historic trend of Moore's Law, which predicted exponential growth in\ncomputational performance per dollar, has diverged for modern Graphics\nProcessing Units (GPUs). While Floating Point Operations per Second (FLOPs)\ncapabilities have continued to scale economically, memory bandwidth has not,\ncreating a significant price-performance disconnect. This paper argues that the\nprevailing time-based pricing models for cloud GPUs are economically\ninefficient for bandwidth-bound workloads. These models fail to account for the\nrising marginal cost of memory bandwidth, leading to market distortions and\nsuboptimal hardware allocation. To address this, we propose a novel\nfeature-based pricing framework that directly links cost to resource\nconsumption, including but not limited to memory bandwidth. We provide a robust\neconomic and algorithmic definition of this framework and introduce Agora, a\npractical and secure system architecture for its implementation. Our\nimplementation of Agora shows that a 50us sampling provides nearly perfect\npricing as what ideal sampling would provide - losing only 5\\% of revenue. 10us\nsampling is even better result in 2.4\\% loss. Modern telemetry systems can\nalready provide this rate of measurement, and our prototype implementation\nshows the system design for feature-based pricing is buildable. Our evaluation\nacross diverse GPU applications and hardware generations empirically validates\nthe effectiveness of our approach in creating a more transparent and efficient\nmarket for cloud GPU resources."}
{"id": "2510.05497", "categories": ["cs.DC", "cs.AI", "cs.AR", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.05497", "abs": "https://arxiv.org/abs/2510.05497", "authors": ["Zhongkai Yu", "Yue Guan", "Zihao Yu", "Chenyang Zhou", "Shuyi Pei", "Yangwook Kang", "Yufei Ding", "Po-An Tsai"], "title": "Orders in Chaos: Enhancing Large-Scale MoE LLM Serving with Data Movement Forecasting", "comment": null, "summary": "Large Language Models (LLMs) with Mixture of Experts (MoE) architectures\nachieve remarkable performance improvements, but their random expert selection\nmechanism introduces significant data movement overhead that becomes the\ndominant bottleneck in multi-unit serving systems. To forecast the patterns\nunderlying this data movement, we conduct comprehensive data-movement-centric\nprofiling across three state-of-the-art large-scale MoE models (200B- 671B)\nusing over 24,000 requests spanning diverse workloads. With the resulting\n150GB+ trace files, we perform systematic analysis from both temporal and\nspatial perspectives and distill six key insights to guide the design of\ndiverse future serving systems. Taking wafer-scale GPUs as a case study, we\ndemonstrate that minor architectural modifications leveraging our insights\nachieve substantial performance gains, delivering 6.3X and 4.0X average\nspeedups on DeepSeek V3 and Qwen3, respectively. Our work provides the first\ncomprehensive data-centric analysis of MoE models at scale. Our profiling\ntraces and analysis results are publicly available at\n{https://huggingface.co/datasets/core12345/MoE_expert_selection_trace. We will\nalso release our simulation framework shortly to facilitate future research in\nthis area."}
{"id": "2510.05112", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.05112", "abs": "https://arxiv.org/abs/2510.05112", "authors": ["Lijuan Jiang", "Xingjian Qian", "Zhenxiang Ma", "Zan Zong", "Hengjie Li", "Chao Yang", "Jidong Zhai"], "title": "A Flexible Programmable Pipeline Parallelism Framework for Efficient DNN Training", "comment": null, "summary": "Pipeline parallelism is an essential distributed parallelism method.\nIncreasingly complex and diverse DNN models necessitate meticulously customized\npipeline schedules for performance. However, existing practices typically rely\non predefined schedules, each with strengths, but fail to adapt automatically\nto the emerging model architectures. Exploring novel high-efficiency schedules\nis daunting due to the enormous and varying schedule space. Besides, manually\nimplementing schedules can be challenging due to the onerous coding burdens and\nconstantly changing needs. Unfortunately, existing frameworks have limitations\nin automated schedule exploration and lack flexibility and controllability.\n  This paper presents FlexPipe, a programmable pipeline parallelism framework\nwith enhanced productivity, programmability, debuggability, and ease of tuning.\nFlexPipe has two main components: a succinct domain-specific language (DSL) and\nan automated scheduler. FlexPipe enables automated schedule exploration for\nvarious parallel scenarios within a broad spectrum of schedule types at a small\nsearch cost. Besides, users can swiftly develop and customize schedules using\nthe FlexPipe DSL, which embodies flexible controllability in the pipeline order\nof micro-batch computations over stages. It also provides convenient mechanisms\nto include new operations in schedules to meet changing demands. Our evaluation\nresults demonstrate that FlexPipe achieves up to 2.28X performance speedup\ncompared to the popular large-scale parallel framework Megtron-LM, and gains up\nto 1.49X performance speedup compared to the state-of-the-art automated\npipeline parallelism framework."}
{"id": "2510.05118", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.05118", "abs": "https://arxiv.org/abs/2510.05118", "authors": ["Cynthia Marcelino", "Noah Krennmair", "Thomas Pusztai", "Stefan Nastic"], "title": "Lumos: Performance Characterization of WebAssembly as a Serverless Runtime in the Edge-Cloud Continuum", "comment": null, "summary": "WebAssembly has emerged as a lightweight and portable runtime to execute\nserverless functions, particularly in heterogeneous and resource-constrained\nenvironments such as the Edge Cloud Continuum. However, the performance\nbenefits versus trade-offs remain insufficiently understood. This paper\npresents Lumos, a performance model and benchmarking tool for characterizing\nserverless runtimes. Lumos identifies workload, system, and environment-level\nperformance drivers in the Edge-Cloud Continuum. We benchmark state-of-the-art\ncontainers and the Wasm runtime in interpreted mode and with ahead-of-time\ncompilation. Our performance characterization shows that AoT-compiled Wasm\nimages are up to 30x smaller and decrease cold-start latency by up to 16%\ncompared to containers, while interpreted Wasm suffers up to 55x higher warm\nlatency and up to 10x I/O-serialization overhead."}
{"id": "2510.05127", "categories": ["cs.DC", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.05127", "abs": "https://arxiv.org/abs/2510.05127", "authors": ["Harshit Goyal"], "title": "Artificial Intelligence for Cost-Aware Resource Prediction in Big Data Pipelines", "comment": "14 pages, 3 figures", "summary": "Efficient resource allocation is a key challenge in modern cloud computing.\nOver-provisioning leads to unnecessary costs, while under-provisioning risks\nperformance degradation and SLA violations. This work presents an artificial\nintelligence approach to predict resource utilization in big data pipelines\nusing Random Forest regression. We preprocess the Google Borg cluster traces to\nclean, transform, and extract relevant features (CPU, memory, usage\ndistributions). The model achieves high predictive accuracy (R Square = 0.99,\nMAE = 0.0048, RMSE = 0.137), capturing non-linear relationships between\nworkload characteristics and resource utilization. Error analysis reveals\nimpressive performance on small-to-medium jobs, with higher variance in rare\nlarge-scale jobs. These results demonstrate the potential of AI-driven\nprediction for cost-aware autoscaling in cloud environments, reducing\nunnecessary provisioning while safeguarding service quality."}
{"id": "2510.05145", "categories": ["cs.DC", "cs.AI", "cs.MA"], "pdf": "https://arxiv.org/pdf/2510.05145", "abs": "https://arxiv.org/abs/2510.05145", "authors": ["Lunyiu Nie", "Nedim Lipka", "Ryan A. Rossi", "Swarat Chaudhuri"], "title": "FlashResearch: Real-time Agent Orchestration for Efficient Deep Research", "comment": null, "summary": "Deep research agents, which synthesize information across diverse sources,\nare significantly constrained by their sequential reasoning processes. This\narchitectural bottleneck results in high latency, poor runtime adaptability,\nand inefficient resource allocation, making them impractical for interactive\napplications. To overcome this, we introduce FlashResearch, a novel framework\nfor efficient deep research that transforms sequential processing into\nparallel, runtime orchestration by dynamically decomposing complex queries into\ntree-structured sub-tasks. Our core contributions are threefold: (1) an\nadaptive planner that dynamically allocates computational resources by\ndetermining research breadth and depth based on query complexity; (2) a\nreal-time orchestration layer that monitors research progress and prunes\nredundant paths to reallocate resources and optimize efficiency; and (3) a\nmulti-dimensional parallelization framework that enables concurrency across\nboth research breadth and depth. Experiments show that FlashResearch\nconsistently improves final report quality within fixed time budgets, and can\ndeliver up to a 5x speedup while maintaining comparable quality."}
{"id": "2510.05149", "categories": ["cs.DC", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.05149", "abs": "https://arxiv.org/abs/2510.05149", "authors": ["Clarisse Sousa", "Tiago Fonseca", "Luis Lino Ferreira", "Ricardo Venâncio", "Ricardo Severino"], "title": "Percepta: High Performance Stream Processing at the Edge", "comment": null, "summary": "The rise of real-time data and the proliferation of Internet of Things (IoT)\ndevices have highlighted the limitations of cloud-centric solutions,\nparticularly regarding latency, bandwidth, and privacy. These challenges have\ndriven the growth of Edge Computing. Associated with IoT appears a set of other\nproblems, like: data rate harmonization between multiple sources, protocol\nconversion, handling the loss of data and the integration with Artificial\nIntelligence (AI) models. This paper presents Percepta, a lightweight Data\nStream Processing (DSP) system tailored to support AI workloads at the edge,\nwith a particular focus on such as Reinforcement Learning (RL). It introduces\nspecialized features such as reward function computation, data storage for\nmodel retraining, and real-time data preparation to support continuous\ndecision-making. Additional functionalities include data normalization,\nharmonization across heterogeneous protocols and sampling rates, and robust\nhandling of missing or incomplete data, making it well suited for the\nchallenges of edge-based AI deployment."}
{"id": "2510.05164", "categories": ["cs.DC", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.05164", "abs": "https://arxiv.org/abs/2510.05164", "authors": ["Yuanzhe Shen", "Yide Liu", "Zisu Huang", "Ruicheng Yin", "Xiaoqing Zheng", "Xuanjing Huang"], "title": "SATER: A Self-Aware and Token-Efficient Approach to Routing and Cascading", "comment": "Accepted to EMNLP 2025 Main", "summary": "Large language models (LLMs) demonstrate remarkable performance across\ndiverse tasks, yet their effectiveness frequently depends on costly commercial\nAPIs or cloud services. Model selection thus entails a critical trade-off\nbetween performance and cost: high-performing LLMs typically incur substantial\nexpenses, whereas budget-friendly small language models (SLMs) are constrained\nby limited capabilities. Current research primarily proposes two routing\nstrategies: pre-generation routing and cascade routing. Both approaches have\ndistinct characteristics, with cascade routing typically offering superior\ncost-effectiveness and accuracy despite its higher latency. To further address\nthe limitations of both approaches, we introduce SATER, a dual-mode compatible\napproach that fine-tunes models through shortest-response preference\noptimization and a confidence-aware rejection mechanism. SATER significantly\nreduces redundant outputs and response times, while improving both the\nperformance of pre-generation routing and the efficiency of cascade routing.\nExperiments across three SLMs and six datasets, varying in type and complexity,\ndemonstrate that SATER achieves comparable performance while consistently\nreducing computational costs by over 50\\% and cascade latency by over 80\\%."}
{"id": "2510.05186", "categories": ["cs.DC", "cs.AI", "math.OC"], "pdf": "https://arxiv.org/pdf/2510.05186", "abs": "https://arxiv.org/abs/2510.05186", "authors": ["Hongpei Li", "Han Zhang", "Huikang Liu", "Dongdong Ge", "Yinyu Ye"], "title": "OptPipe: Memory- and Scheduling-Optimized Pipeline Parallelism for LLM Training", "comment": "Use Mathematical Programming to model Pipeline Parallelism with\n  Offloading to balance efficiency and memory requirement", "summary": "Pipeline parallelism (PP) has become a standard technique for scaling large\nlanguage model (LLM) training across multiple devices. However, despite recent\nprogress in reducing memory consumption through activation offloading, existing\napproaches remain largely heuristic and coarse-grained, often overlooking the\nfine-grained trade-offs between memory, computation, and scheduling latency. In\nthis work, we revisit the pipeline scheduling problem from a principled\noptimization perspective. We observe that prevailing strategies either rely on\nstatic rules or aggressively offload activations without fully leveraging the\ninteraction between memory constraints and scheduling efficiency. To address\nthis, we formulate scheduling as a constrained optimization problem that\njointly accounts for memory capacity, activation reuse, and pipeline bubble\nminimization. Solving this model yields fine-grained schedules that reduce\npipeline bubbles while adhering to strict memory budgets. Our approach\ncomplements existing offloading techniques: whereas prior approaches trade\nmemory for time in a fixed pattern, we dynamically optimize the tradeoff with\nrespect to model structure and hardware configuration. Experimental results\ndemonstrate that our method consistently improves both throughput and memory\nutilization. In particular, we reduce idle pipeline time by up to 50% under the\nsame per-device memory limit, and in some cases, enable the training of larger\nmodels within limited memory budgets."}
{"id": "2510.05254", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.05254", "abs": "https://arxiv.org/abs/2510.05254", "authors": ["Filipp Sporykhin", "Holger Homann"], "title": "Performance of a high-order MPI-Kokkos accelerated fluid solver", "comment": "12 pages, 16 figures. submitted to Computer Physics Communications", "summary": "This work discusses the performance of a modern numerical scheme for fluid\ndynamical problems on modern high-performance computing architectures. Our code\nimplements a spatial nodal discontinuous Galerkin scheme that we test up to an\norder of convergence of eight. It is temporally coupled to a set of Runge-Kutta\nmethods of orders up to six. The code integrates the linear advection equations\nas well as the isothermal Euler equations in one, two, and three dimensions. In\norder to target modern hardware involving many-core Central Processing Units\nand accelerators such as Graphic Processing Units we use the Kokkos library in\nconjunction with the Message Passing Interface to run our single source code on\nvarious GPU systems. We find that the higher the order the faster is the code.\nEighth-order simulations attain a given global error with much less computing\ntime than third- or fourth-order simulations. The RK scheme has a smaller\nimpact on the code performance and a classical fourth-order scheme seems to\ngenerally be a good choice. The code performs very well on all considered GPUs.\nThe many-CPU performance is also very good and perfect weak scaling is observed\nup to many hundreds of CPU cores using MPI. We note that small grid-size\nsimulations are faster on CPUs than on GPUs while GPUs win significantly over\nCPUs for simulations involving more than $10^7$ degrees of freedom ($\\approx\n3100^2$ grid points). When it comes to the environmental impact of numerical\nsimulations we estimate that GPUs consume less energy than CPUs for large\ngrid-size simulations but more energy on small grids. We observe a tendency\nthat the more modern is the GPU the larger needs to be the grid in order to use\nit efficiently. This yields a rebound effect because larger simulations need\nlonger computing times and in turn more energy that is not compensated by the\nenergy efficiency gain of the newer GPUs."}
{"id": "2510.05476", "categories": ["cs.DC", "cs.AR", "cs.NI"], "pdf": "https://arxiv.org/pdf/2510.05476", "abs": "https://arxiv.org/abs/2510.05476", "authors": ["Xi Wang", "Bin Ma", "Jongryool Kim", "Byungil Koh", "Hoshik Kim", "Dong Li"], "title": "cMPI: Using CXL Memory Sharing for MPI One-Sided and Two-Sided Inter-Node Communications", "comment": null, "summary": "Message Passing Interface (MPI) is a foundational programming model for\nhigh-performance computing. MPI libraries traditionally employ network\ninterconnects (e.g., Ethernet and InfiniBand) and network protocols (e.g., TCP\nand RoCE) with complex software stacks for cross-node communication. We present\ncMPI, the first work to optimize MPI point-to-point communication (both\none-sided and two-sided) using CXL memory sharing on a real CXL platform,\ntransforming cross-node communication into memory transactions and data copies\nwithin CXL memory, bypassing traditional network protocols. We analyze\nperformance across various interconnects and find that CXL memory sharing\nachieves 7.2x-8.1x lower latency than TCP-based interconnects deployed in\nsmall- and medium-scale clusters. We address challenges of CXL memory sharing\nfor MPI communication, including data object management over the dax\nrepresentation [50], cache coherence, and atomic operations. Overall, cMPI\noutperforms TCP over standard Ethernet NIC and high-end SmartNIC by up to 49x\nand 72x in latency and bandwidth, respectively, for small messages."}
{"id": "2510.05497", "categories": ["cs.DC", "cs.AI", "cs.AR", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.05497", "abs": "https://arxiv.org/abs/2510.05497", "authors": ["Zhongkai Yu", "Yue Guan", "Zihao Yu", "Chenyang Zhou", "Shuyi Pei", "Yangwook Kang", "Yufei Ding", "Po-An Tsai"], "title": "Orders in Chaos: Enhancing Large-Scale MoE LLM Serving with Data Movement Forecasting", "comment": null, "summary": "Large Language Models (LLMs) with Mixture of Experts (MoE) architectures\nachieve remarkable performance improvements, but their random expert selection\nmechanism introduces significant data movement overhead that becomes the\ndominant bottleneck in multi-unit serving systems. To forecast the patterns\nunderlying this data movement, we conduct comprehensive data-movement-centric\nprofiling across three state-of-the-art large-scale MoE models (200B- 671B)\nusing over 24,000 requests spanning diverse workloads. With the resulting\n150GB+ trace files, we perform systematic analysis from both temporal and\nspatial perspectives and distill six key insights to guide the design of\ndiverse future serving systems. Taking wafer-scale GPUs as a case study, we\ndemonstrate that minor architectural modifications leveraging our insights\nachieve substantial performance gains, delivering 6.3X and 4.0X average\nspeedups on DeepSeek V3 and Qwen3, respectively. Our work provides the first\ncomprehensive data-centric analysis of MoE models at scale. Our profiling\ntraces and analysis results are publicly available at\n{https://huggingface.co/datasets/core12345/MoE_expert_selection_trace. We will\nalso release our simulation framework shortly to facilitate future research in\nthis area."}
{"id": "2510.05556", "categories": ["cs.DC", "cs.OS"], "pdf": "https://arxiv.org/pdf/2510.05556", "abs": "https://arxiv.org/abs/2510.05556", "authors": ["Jiakai Xu", "Tianle Zhou", "Eugene Wu", "Kostis Kaffes"], "title": "Toward Systems Foundations for Agentic Exploration", "comment": null, "summary": "Agentic exploration, letting LLM-powered agents branch, backtrack, and search\nacross many execution paths, demands systems support well beyond today's\npass-at-k resets. Our benchmark of six snapshot/restore mechanisms shows that\ngeneric tools such as CRIU or container commits are not fast enough even in\nisolated testbeds, and they crumble entirely in real deployments where agents\nshare files, sockets, and cloud APIs with other agents and human users. In this\ntalk, we pinpoint three open fundamental challenges: fork semantics, which\nconcerns how branches reveal or hide tentative updates; external side-effects,\nwhere fork awareness must be added to services or their calls intercepted; and\nnative forking, which requires cloning databases and runtimes in microseconds\nwithout bulk copying."}
{"id": "2510.05621", "categories": ["cs.DC", "cs.MA"], "pdf": "https://arxiv.org/pdf/2510.05621", "abs": "https://arxiv.org/abs/2510.05621", "authors": ["Zhiyuan Ren", "Tao Zhang", "Wenchi Chen"], "title": "Decoupling Correctness from Policy: A Deterministic Causal Structure for Multi-Agent Systems", "comment": null, "summary": "In distributed multi-agent systems, correctness is often entangled with\noperational policies such as scheduling, batching, or routing, which makes\nsystems brittle since performance-driven policy evolution may break integrity\nguarantees. This paper introduces the Deterministic Causal Structure (DCS), a\nformal foundation that decouples correctness from policy. We develop a minimal\naxiomatic theory and prove four results: existence and uniqueness,\npolicy-agnostic invariance, observational equivalence, and axiom minimality.\nThese results show that DCS resolves causal ambiguities that value-centric\nconvergence models such as CRDTs cannot address, and that removing any axiom\ncollapses determinism into ambiguity. DCS thus emerges as a boundary principle\nof asynchronous computation, analogous to CAP and FLP: correctness is preserved\nonly within the expressive power of a join-semilattice. All guarantees are\nestablished by axioms and proofs, with only minimal illustrative constructions\nincluded to aid intuition. This work establishes correctness as a fixed,\npolicy-agnostic substrate, a Correctness-as-a-Chassis paradigm, on which\ndistributed intelligent systems can be built modularly, safely, and evolvably."}
{"id": "2510.05711", "categories": ["cs.DC", "cs.CE"], "pdf": "https://arxiv.org/pdf/2510.05711", "abs": "https://arxiv.org/abs/2510.05711", "authors": ["Ailiya Borjigin", "Cong He"], "title": "Intertemporal Pricing of Time-Bound Stablecoins: Measuring and Controlling the Liquidity-of-Time Premium", "comment": "23 pages, 5 figures", "summary": "Time-bound stablecoins are DeFi assets that temporarily tokenize traditional\nsecurities during market off-hours, enabling continuous cross-market liquidity.\nWe introduce the Liquidity-of-Time Premium (TLP): the extra return or cost of\nproviding liquidity when the primary market is closed. We build a no-arbitrage\npricing model that yields a band for fair values over different expiries, and a\ndynamic risk-control mechanism that adjusts loan-to-value (LTV) ratios in real\ntime to keep TLP within a target range. Our analysis blends financial\nengineering (no-arbitrage conditions, option-style pricing) with empirical\nfinance (event studies on cross-listed stocks and futures) to measure TLP under\ntime-zone frictions. We define TLP formally, derive closed-form expressions for\nits term structure under idealized assumptions, and simulate scenarios that\nvary volatility and collateralization. We then propose an LTV policy that\nraises or lowers collateral to expand or curtail time-bound stablecoin supply,\nanalogous to a central bank adjusting rates to defend a peg. We outline\nempirical proxies for TLP, including ADR premiums, overseas index futures\nversus cash index divergence, and pre-market versus official close gaps.\nResults show that TLP grows with closure length and volatility, yet can be\ncontained by adaptive LTV. We provide backtests and figures (term-structure\ncurves, capital-efficiency versus tail-risk trade-offs, time-liquidity\nheatmaps) and discuss protocol design (vault structure, closing-price oracles,\non-chain auction liquidations). The findings position time-bound stablecoins as\na tool to reduce temporal market inefficiencies and inform future research and\ndeployment."}
{"id": "2510.05738", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.05738", "abs": "https://arxiv.org/abs/2510.05738", "authors": ["Ritesh Chandra", "Sonali Agarwal", "Navjot Singh", "Sadhana Tiwari"], "title": "A Review of Ontology-Driven Big Data Analytics in Healthcare: Challenges, Tools, and Applications", "comment": null, "summary": "Exponential growth in heterogeneous healthcare data arising from electronic\nhealth records (EHRs), medical imaging, wearable sensors, and biomedical\nresearch has accelerated the adoption of data lakes and centralized\narchitectures capable of handling the Volume, Variety, and Velocity of Big Data\nfor advanced analytics. However, without effective governance, these\nrepositories risk devolving into disorganized data swamps. Ontology-driven\nsemantic data management offers a robust solution by linking metadata to\nhealthcare knowledge graphs, thereby enhancing semantic interoperability,\nimproving data discoverability, and enabling expressive, domain-aware access.\nThis review adopts a systematic research strategy, formulating key research\nquestions and conducting a structured literature search across major academic\ndatabases, with selected studies analyzed and classified into six categories of\nontology-driven healthcare analytics: (i) ontology-driven integration\nframeworks, (ii) semantic modeling for metadata enrichment, (iii)\nontology-based data access (OBDA), (iv) basic semantic data management, (v)\nontology-based reasoning for decision support, and (vi) semantic annotation for\nunstructured data. We further examine the integration of ontology technologies\nwith Big Data frameworks such as Hadoop, Spark, Kafka, and so on, highlighting\ntheir combined potential to deliver scalable and intelligent healthcare\nanalytics. For each category, recent techniques, representative case studies,\ntechnical and organizational challenges, and emerging trends such as artificial\nintelligence, machine learning, the Internet of Things (IoT), and real-time\nanalytics are reviewed to guide the development of sustainable, interoperable,\nand high-performance healthcare data ecosystems."}
{"id": "2510.05943", "categories": ["cs.DC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.05943", "abs": "https://arxiv.org/abs/2510.05943", "authors": ["Zheyue Tan", "Mustapha Abdullahi", "Tuo Shi", "Huining Yuan", "Zelai Xu", "Chao Yu", "Boxun Li", "Bo Zhao"], "title": "EARL: Efficient Agentic Reinforcement Learning Systems for Large Language Models", "comment": null, "summary": "Reinforcement learning (RL) has become a pivotal component of large language\nmodel (LLM) post-training, and agentic RL extends this paradigm to operate as\nagents through multi-turn interaction and tool use. Scaling such systems\nexposes two practical bottlenecks: (1) context length grows rapidly during\ntraining, inflating memory usage and latency, and triggering out-of-memory\n(OOM) failures; and (2) intermediate tensors accumulate with context length,\nmaking cross-device data movement a major system bottleneck.\n  We present EARL, a scalable system for efficient agentic RL. EARL designs a\nparallelism selector that dynamically adapts model and training parallelism\nacross RL stages based on sequence length and system load, and a data\ndispatcher that performs layout-aware, decentralized exchange of intermediate\ndata batches. Together, these components increase throughput, reduce\nlong-context failures, and enable stable large-scale training of agentic LLMs\nwithout relying on hard limits or penalties of context length."}
