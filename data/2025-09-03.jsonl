{"id": "2509.00360", "categories": ["cs.PL", "D.3.0"], "pdf": "https://arxiv.org/pdf/2509.00360", "abs": "https://arxiv.org/abs/2509.00360", "authors": ["Shaan Nagy", "Timothy Zhou", "Nadia Polikarpova", "Loris D'Antoni"], "title": "ChopChop: a Programmable Framework for Semantically Constraining the Output of Language Models", "comment": null, "summary": "Language models (LMs) can generate code, but cannot guarantee its\ncorrectness--producing outputs that often violate type safety, program\ninvariants, or semantic equivalence. Constrained decoding offers a solution by\nrestricting generation to programs that satisfy desired properties. Yet,\nexisting methods are limited to shallow syntactic constraints or rely on\nbrittle, ad hoc encodings of semantics over token sequences.\n  We present ChopChop, the first programmable framework for semantic\nconstrained decoding, enabling LMs to generate code that provably satisfies\nrich semantic properties. ChopChop connects token-level generation with\nreasoning over abstract program structures using a coinduction-based formalism\nand reduces constraint enforcement to a realizability problem over regular\ncodata. We demonstrate ChopChop's generality through generation constrained by\ntype safety and program equivalence, showing how formal methods can be\nseamlessly integrated into LM-driven code generation. ChopChop transforms\nsemantic constrained decoding from a niche technique into a systematic,\nprincipled extension of LMs--improving success rates across models and tasks\nwhile maintaining practical decoding latency."}
{"id": "2509.00587", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2509.00587", "abs": "https://arxiv.org/abs/2509.00587", "authors": ["Vaibhav Mehta", "Justin Hsu"], "title": "A Hoare Logic for Symmetry Properties", "comment": "Accepted to OOPSLA '25", "summary": "Many natural program correctness properties can be stated in terms of\n  symmetries, but existing formal methods have little support for reasoning\n  about such properties. We consider how to formally verify a broad class of\n  symmetry properties expressed in terms of group actions. To specify these\n  properties, we design a syntax for group actions, supporting standard\n  constructions and a natural notion of entailment. Then, we develop a\n  Hoare-style logic for verifying symmetry properties of imperative programs,\n  where group actions take the place of the typical pre- and post-condition\n  assertions. Finally, we develop a prototype tool $\\mathsf{SymVerif}$, and use\n  it to verify symmetry properties on a series of handcrafted benchmarks. Our\n  tool uncovered an error in a model of a dynamical system described by\n\\citet{McLachlan_Quispel_2002}."}
{"id": "2509.00699", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2509.00699", "abs": "https://arxiv.org/abs/2509.00699", "authors": ["Yumeng He", "Chandrakana Nandi", "Sreepathi Pai"], "title": "Formalizing Linear Motion G-code for Invariant Checking and Differential Testing of Fabrication Tools", "comment": null, "summary": "The computational fabrication pipeline for 3D printing is much like a\ncompiler - users design models in Computer Aided Design (CAD) tools that are\nlowered to polygon meshes to be ultimately compiled to machine code by 3D\nslicers. For traditional compilers and programming languages, techniques for\nchecking program invariants are well-established. Similarly, methods like\ndifferential testing are often used to uncover bugs in compilers themselves,\nwhich makes them more reliable. The fabrication pipeline would benefit from\nsimilar techniques but traditional approaches do not directly apply to the\nrepresentations used in this domain. Unlike traditional programs, 3D models\nexist both as geometric objects as well as machine code that ultimately runs on\nthe hardware. The machine code, like in traditional compiling, is affected by\nmany factors like the model, the slicer being used, and numerous\nuser-configurable parameters that control the slicing process. In this work, we\npropose a new algorithm for lifting G-code (a common language used in\nfabrication pipelines) by denoting a G-code program to a set of cuboids, and\nthen defining an approximate point cloud representation for efficiently\noperating on these cuboids. Our algorithm opens up new opportunities: we show\nthree use cases that demonstrate how it enables error localization in CAD\nmodels through invariant checking, quantitative comparisons between slicers,\nand evaluating the efficacy of mesh repair tools. We present a prototype\nimplementation of our algorithm in a tool, GlitchFinder, and evaluate it on 58\nreal-world CAD models. Our results show that GlitchFinder is particularly\neffective in identifying slicing issues due to small features, can highlight\ndifferences in how popular slicers (Cura and PrusaSlicer) slice the same model,\nand can identify cases where mesh repair tools (MeshLab and Meshmixer)\nintroduce new errors during repair."}
{"id": "2509.00948", "categories": ["cs.PL", "cs.FL"], "pdf": "https://arxiv.org/pdf/2509.00948", "abs": "https://arxiv.org/abs/2509.00948", "authors": ["Denghang Hu", "Taolue Chen", "Philipp RÃ¼mmer", "Fu Song", "Zhilin Wu"], "title": "Decision Procedure for A Theory of String Sequences", "comment": "21 pages, 2 tables, APLAS 2025", "summary": "The theory of sequences, supported by many SMT solvers, can model program\ndata types including bounded arrays and lists. Sequences are parameterized by\nthe element data type and provide operations such as accessing elements,\nconcatenation, forming sub-sequences and updating elements. Strings and\nsequences are intimately related; many operations, e.g., matching a string\naccording to a regular expression, splitting strings, or joining strings in a\nsequence, are frequently used in string-manipulating programs. Nevertheless,\nthese operations are typically not directly supported by existing SMT solvers,\nwhich instead only consider the generic theory of sequences. In this paper, we\npropose a theory of string sequences and study its satisfiability. We show\nthat, while it is undecidable in general, the decidability can be recovered by\nrestricting to the straight-line fragment. This is shown by encoding each\nstring sequence as a string, and each string sequence operation as a\ncorresponding string operation. We provide pre-image computation for the\nresulting string operations with respect to automata, effectively casting it\ninto the generic OSTRICH string constraint solving framework. We implement the\nnew decision procedure as a tool $\\ostrichseq$, and carry out experiments on\nbenchmark constraints generated from real-world JavaScript programs,\nhand-crafted templates and unit tests. The experiments confirm the efficacy of\nour approach."}
{"id": "2509.00433", "categories": ["cs.AR", "cs.RO"], "pdf": "https://arxiv.org/pdf/2509.00433", "abs": "https://arxiv.org/abs/2509.00433", "authors": ["Houshu He", "Naifeng Jing", "Li Jiang", "Xiaoyao Liang", "Zhuoran Song"], "title": "AGS: Accelerating 3D Gaussian Splatting SLAM via CODEC-Assisted Frame Covisibility Detection", "comment": "15 pages", "summary": "Simultaneous Localization and Mapping (SLAM) is a critical task that enables\nautonomous vehicles to construct maps and localize themselves in unknown\nenvironments. Recent breakthroughs combine SLAM with 3D Gaussian Splatting\n(3DGS) to achieve exceptional reconstruction fidelity. However, existing\n3DGS-SLAM systems provide insufficient throughput due to the need for multiple\ntraining iterations per frame and the vast number of Gaussians.\n  In this paper, we propose AGS, an algorithm-hardware co-design framework to\nboost the efficiency of 3DGS-SLAM based on the intuition that SLAM systems\nprocess frames in a streaming manner, where adjacent frames exhibit high\nsimilarity that can be utilized for acceleration. On the software level: 1) We\npropose a coarse-then-fine-grained pose tracking method with respect to the\nrobot's movement. 2) We avoid redundant computations of Gaussians by sharing\ntheir contribution information across frames. On the hardware level, we propose\na frame covisibility detection engine to extract intermediate data from the\nvideo CODEC. We also implement a pose tracking engine and a mapping engine with\nworkload schedulers to efficiently deploy the AGS algorithm. Our evaluation\nshows that AGS achieves up to $17.12\\times$, $6.71\\times$, and $5.41\\times$\nspeedups against the mobile and high-end GPUs, and a state-of-the-art 3DGS\naccelerator, GSCore."}
{"id": "2509.00579", "categories": ["cs.DC", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.00579", "abs": "https://arxiv.org/abs/2509.00579", "authors": ["Bo Jiang", "Taolue Yang", "Youyuan Liu", "Chengming Zhang", "Xubin He", "Sian Jin"], "title": "KVComp: A High-Performance, LLM-Aware, Lossy Compression Framework for KV Cache", "comment": null, "summary": "Transformer-based large language models (LLMs) demonstrate impressive\npotential in various practical applications. However, long context inference\nposes a significant challenge due to the enormous memory requirements of the\nkey-value (KV) cache, which can scale to multiple gigabytes as sequence length\nand batch size increase. In this paper, we present KVComp, a generic and\nefficient KV cache management framework optimized for long-text generation that\nsynergistically works with both latency-critical and throughput-critical\ninference systems. KVComp employs novel lossy compression techniques\nspecifically designed for KV cache data characteristics, featuring careful\nco-design of compression algorithms and system architecture. Our approach\nmaintains compatibility with the growing nature of KV cache while preserving\nhigh computational efficiency. Experimental results show that KVComp achieves\non average 47\\% and up to 83\\% higher memory reduction rate compared to\nexisting methods with little/no model accuracy degradation. Furthermore, KVComp\nachieves extremely high execution throughput, effectively reducing\ndecompression overhead and, in some cases, even accelerating the matrix-vector\nmultiplication operation and outperform cuBLAS-based attention kernels with\nless data movement."}
{"id": "2509.01511", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2509.01511", "abs": "https://arxiv.org/abs/2509.01511", "authors": ["Zhe Zhou", "Benjamin Delaware", "Suresh Jagannathan"], "title": "Type-Based Incorrectness Reasoning", "comment": null, "summary": "A coverage type generalizes refinement types found in many functional\nlanguages with support for must-style underapproximate reasoning.\nProperty-based testing frameworks are one particularly useful domain where such\ncapabilities are useful as they allow us to verify the completeness, as well as\nsafety, of test generators. There is a surprising connection between the kind\nof underapproximate reasoning coverage types offer and the style of reasoning\nenabled by recently proposed Incorrectness Logic frameworks. In our\npresentation, we propose to explore this connection more deeply, identifying\nmechanisms that more systematically integrate incorrectness reasoning within an\nexpressive refinement type system and the opportunities that such integration\noffers to functional programmers, program verifiers, and program analyzers and\nrelated tools."}
{"id": "2509.00500", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2509.00500", "abs": "https://arxiv.org/abs/2509.00500", "authors": ["Yizhi Chen", "Jingwei Li", "Wenyao Zhu", "Zhonghai Lu"], "title": "Bit Transition Reduction by Data Transmission Ordering in NoC-based DNN Accelerator", "comment": "Accepted to IEEE SoCC 2025 (38th IEEE International System-on-Chip\n  Conference)", "summary": "As Deep Neural Networks (DNN) are becoming essential, Network-on-Chip\n(NoC)-based DNN accelerators gained increasing popularity. To save link power\nin NoC, many researchers focus on reducing the Bit Transition (BT). We propose\n'1'-bit count-based ordering method to reduce BT for DNN workloads. We provide\na mathematical proof of the efficacy of proposed ordering. We evaluate our\nmethod through experiments without NoC and with NoC. Without NoC, our proposed\nordering method achieves up to 20.38% BT reduction for floating-point-32 data\nand 55.71% for fixed-point-8 data, respectively. We propose two data ordering\nmethods, affiliated-ordering and separated-ordering to process weight and input\njointly or individually and apply them to run full DNNs in NoC-based DNN\naccelerator. We evaluate our approaches under various configurations, including\ndifferent DNN models such as LeNet and DarkNet, various NoC sizes with\ndifferent numbers of memory controllers, random weights and trained weights,\nand different data precision. Our approach efficiently reduces the link power\nby achieving up to 32.01% BT reduction for floating-point-32 data and 40.85% BT\nreduction for fixed-point-8 data."}
{"id": "2509.00642", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2509.00642", "abs": "https://arxiv.org/abs/2509.00642", "authors": ["Qizheng Yang", "Tung-I Chen", "Siyu Zhao", "Ramesh K. Sitaraman", "Hui Guan"], "title": "HADIS: Hybrid Adaptive Diffusion Model Serving for Efficient Text-to-Image Generation", "comment": "13 pages, 10 figures", "summary": "Text-to-image diffusion models have achieved remarkable visual quality but\nincur high computational costs, making real-time, scalable deployment\nchallenging. Existing query-aware serving systems mitigate the cost by\ncascading lightweight and heavyweight models, but most rely on a fixed cascade\nconfiguration and route all prompts through an initial lightweight stage,\nwasting resources on complex queries. We present HADIS, a hybrid adaptive\ndiffusion model serving system that jointly optimizes cascade model selection,\nquery routing, and resource allocation. HADIS employs a rule-based prompt\nrouter to send clearly hard queries directly to heavyweight models, bypassing\nthe overhead of the lightweight stage. To reduce the complexity of resource\nmanagement, HADIS uses an offline profiling phase to produce a Pareto-optimal\ncascade configuration table. At runtime, HADIS selects the best cascade\nconfiguration and GPU allocation given latency and workload constraints.\nEmpirical evaluations on real-world traces demonstrate that HADIS improves\nresponse quality by up to 35% while reducing latency violation rates by\n2.7-45$\\times$ compared to state-of-the-art model serving systems."}
{"id": "2509.02428", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2509.02428", "abs": "https://arxiv.org/abs/2509.02428", "authors": ["Yongwei Yuan", "Zhe Zhou", "Julia Belyakova", "Benjamin Delaware", "Suresh Jagannathan"], "title": "From Traces to Program Incorrectness: A Type-Theoretic Approach", "comment": null, "summary": "We present a type-theoretic framework for reasoning about incorrectness in\nfunctional programs that interact with effectful, opaque library APIs. Our\napproach centers on traces -- temporally-ordered sequences of library API\ninvocations -- which naturally characterize both the preconditions of\nindividual APIs and their composite behavior. We represent these traces using\nsymbolic regular expressions (SREs), enabling formal specification of incorrect\nabstract data type (ADT) behaviors across function boundaries. The core\ncontribution is a novel type inference algorithm that operates modulo specified\nincorrectness properties and leverages the symbolic finite automata (SFAs)\nrepresentations of regexes for compositional reasoning of traces. When the\nalgorithm succeeds, the inferred types witness that an ADT implementation can\nexhibit some subset of the specified incorrect behaviors. This represents the\nfirst systematic approach to underapproximate reasoning against trace-based\nincorrectness specifications, enabling a new form of trace-guided compositional\nanalysis."}
{"id": "2509.00589", "categories": ["cs.AR", "cs.SD", "eess.AS"], "pdf": "https://arxiv.org/pdf/2509.00589", "abs": "https://arxiv.org/abs/2509.00589", "authors": ["Shafayet M. Anik", "D. G. Perera"], "title": "Real-Time Piano Note Frequency Detection Using FPGA and FFT Core", "comment": "20 pages, 11 Figures", "summary": "Real-time frequency analysis of musical instruments, such as the piano, is an\nessential feature in areas like electronic tuners, music visualizers, and live\nsound monitoring. Traditional methods often rely on software-based digital\nsignal processing (DSP), which may introduce latency and require significant\ncomputational power. In contrast, hardware platforms such as FPGAs (Field\nProgrammable Gate Arrays) offer the ability to perform such analyses with\ngreater speed and determinism due to their parallel processing capabilities.\nThe primary objective of this project was to analyze analog audio signals from\na digital piano using an FPGA-based real-time Fast Fourier Transform (FFT)\nsystem."}
{"id": "2509.00883", "categories": ["cs.DC", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.00883", "abs": "https://arxiv.org/abs/2509.00883", "authors": ["Denis Los", "Igor Petushkov"], "title": "Accelerating Latency-Critical Applications with AI-Powered Semi-Automatic Fine-Grained Parallelization on SMT Processors", "comment": null, "summary": "Latency-critical applications tend to show low utilization of functional\nunits due to frequent cache misses and mispredictions during speculative\nexecution in high-performance superscalar processors. However, due to\nsignificant impact on single-thread performance, Simultaneous Multithreading\n(SMT) technology is rarely used with heavy threads of latency-critical\napplications. In this paper, we explore utilization of SMT technology to\nsupport fine-grained parallelization of latency-critical applications.\nFollowing the advancements in the development of Large Language Models (LLMs),\nwe introduce Aira, an AI-powered Parallelization Adviser. To implement Aira, we\nextend AI Coding Agent in Cursor IDE with additional tools connected through\nModel Context Protocol, enabling end-to-end AI Agent for parallelization.\nAdditional connected tools enable LLM-guided hotspot detection, collection of\ndynamic dependencies with Dynamic Binary Instrumentation, SMT-aware performance\nsimulation to estimate performance gains. We apply Aira with Relic parallel\nframework for fine-grained task parallelism on SMT cores to parallelize\nlatency-critical benchmarks representing real-world applications used in\nindustry. We show 17% geomean performance gain from parallelization of\nlatency-critical benchmarks using Aira with Relic framework."}
{"id": "2509.02457", "categories": ["cs.DC", "cs.DS", "cs.PF", "cs.PL"], "pdf": "https://arxiv.org/pdf/2509.02457", "abs": "https://arxiv.org/abs/2509.02457", "authors": ["Ajay Singh"], "title": "Safe Memory Reclamation Techniques", "comment": "Ph.D. Thesis", "summary": "Safe memory reclamation is crucial to memory safety for optimistic and\nlock-free concurrent data structures in non garbage collected programming\nlanguages. However, several challenges arise in designing an ideal safe memory\nreclamation algorithm, including achieving high speed and scalability, easy of\nuse for programmers, applicability to wide class of data structures, managing\nthe large memory footprint caused by delayed freeing of memory for safety and\nperformance, and avoiding asymmetric overhead on data structure operations.\nSeveral approaches to designing safe memory reclamation algorithms are studied\nby blending ideas and tools from across the hardware-software stack. These\nsolutions cross traditional boundaries and exploit features exposed at\ndifferent layers."}
{"id": "2509.00599", "categories": ["cs.AR", "cs.DC"], "pdf": "https://arxiv.org/pdf/2509.00599", "abs": "https://arxiv.org/abs/2509.00599", "authors": ["Shubham Negi", "Manik Singhal", "Aayush Ankit", "Sudeep Bhoja", "Kaushik Roy"], "title": "COMET: A Framework for Modeling Compound Operation Dataflows with Explicit Collectives", "comment": null, "summary": "Modern machine learning accelerators are designed to efficiently execute deep\nneural networks (DNNs) by optimizing data movement, memory hierarchy, and\ncompute throughput. However, emerging DNN models such as large language models,\nstate space models increasingly rely on compound operations-structured\ncompositions of multiple basic operations-which introduce new challenges for\ndataflow optimization and minimizing off-chip memory traffic. Moreover, as\nmodel size continues to grow, deployment across spatially distributed compute\nclusters becomes essential, requiring frequent and complex collective\ncommunication. Existing dataflow optimization frameworks and performance models\neither focus on single operations or lack explicit modeling of collective\ncommunication cost, limiting their applicability to modern workloads.\n  To address these limitations, we propose, a framework for modeling and\noptimizing dataflow for compound operations on machine learning accelerators.\nCOMET introduces a novel representation that explicitly models collective\ncommunication across spatial clusters, along with latency and energy cost\nmodels that account for both GEMM and non-GEMM operation level dependencies\nwithin compound operations. We demonstrate COMET's capabilities to analyze and\noptimize dataflows for compound operations such as GEMM--Softmax,\nGEMM--LayerNorm, and self-attention, across both edge and cloud accelerator\nconfigurations. Our collective-aware modeling enables exploration of a broader\nmapping space, leading to improved performance and energy efficiency.\nSpecifically, our optimized dataflows achieve up to 1.42$\\times$ speedup for\nGEMM-Softmax, 3.46$\\times$ for GEMM-LayerNorm and 1.82$\\times$ for\nself-attention compared to unfused baselines."}
{"id": "2509.00937", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2509.00937", "abs": "https://arxiv.org/abs/2509.00937", "authors": ["Paul Ruiz Alliata", "Diana Rubaga", "Daniel Kumlin", "Alberto Puliga"], "title": "Parallelizing Drug Discovery: HPC Pipelines for Alzheimer's Molecular Docking and Simulation", "comment": "7 pages, 5 figures", "summary": "High-performance computing (HPC) is reshaping computational drug discovery by\nenabling large-scale, time-efficient molecular simulations. In this work, we\nexplore HPC-driven pipelines for Alzheimer's disease drug discovery, focusing\non virtual screening, molecular docking, and molecular dynamics simulations. We\nimplemented a parallelised workflow using GROMACS with hybrid MPI-OpenMP\nstrategies, benchmarking scaling performance across energy minimisation,\nequilibration, and production stages. Additionally, we developed a docking\nprototype that demonstrates significant runtime gains when moving from\nsequential execution to process-based parallelism using Python's\nmultiprocessing library. Case studies on prolinamide derivatives and baicalein\nhighlight the biological relevance of these workflows in targeting amyloid-beta\nand tau proteins. While limitations remain in data management, computational\ncosts, and scaling efficiency, our results underline the potential of HPC to\naccelerate neurodegenerative drug discovery."}
{"id": "2509.00633", "categories": ["cs.AR", "cs.CE"], "pdf": "https://arxiv.org/pdf/2509.00633", "abs": "https://arxiv.org/abs/2509.00633", "authors": ["Mehdi Elahi", "Mohamed R. Elshamy", "Abdel-Hameed A. Badawy", "Ahmad Patooghy"], "title": "On the Thermal Vulnerability of 3D-Stacked High-Bandwidth Memory Architectures", "comment": null, "summary": "3D-stacked High Bandwidth Memory (HBM) architectures provide high-performance\nmemory interactions to address the well-known performance challenge, namely the\nmemory wall. However, these architectures are susceptible to thermal\nvulnerabilities due to the inherent vertical adjacency that occurs during the\nmanufacturing process of HBM architectures. We anticipate that adversaries may\nexploit the intense vertical and lateral adjacency to design and develop\nthermal performance degradation attacks on the memory banks that host\ndata/instructions from victim applications. In such attacks, the adversary\nmanages to inject short and intense heat pulses from vertically and/or\nlaterally adjacent memory banks, creating a convergent thermal wave that\nmaximizes impact and delays the victim application from accessing its\ndata/instructions. As the attacking application does not access any\nout-of-range memory locations, it can bypass both design-time security tests\nand the operating system's memory management policies. In other words, since\nthe attack mimics legitimate workloads, it will be challenging to detect."}
{"id": "2509.01083", "categories": ["cs.DC", "cs.AI", "cs.IT", "math.IT", "I.2.7; C.2.4"], "pdf": "https://arxiv.org/pdf/2509.01083", "abs": "https://arxiv.org/abs/2509.01083", "authors": ["Mingyu Yang", "Jae-Young Choi", "Kihyo Moon", "Minsung Jang", "Eunjoo Joen"], "title": "DSDE: Dynamic Speculative Decoding with KLD Stability for Real-World Serving", "comment": "10 pages, 9 figures. Preprint submitted to IEEE BigData 2025", "summary": "Speculative decoding accelerates large language model inference, but its\nreliance on a fixed speculation length is suboptimal in large-batch serving\nenvironments with diverse requests. This paper explores a new direction for\ndynamic adaptation by investigating a novel class of post-hoc, diagnostic\nsignals. We propose Dynamic Speculative Decoding Engine (DSDE), a training-free\nframework built on two primary components: (1) a predictive signal based on the\nvariance of the Kullback-Leibler (KLD) divergence, which diagnoses the\ngeneration's regional stability, and (2) an adaptive speculation length cap to\nmitigate the straggler problem in per-sequence decoding. Experiments\ndemonstrate the potential of using KLD-based stability signals for dynamic\nadaptation. An algorithm guided by these signals achieves end-to-end latency\ncompetitive with leading baselines and exhibits superior robustness across\ndiverse workloads. This robustness is particularly valuable in challenging\nlow-acceptance-rate regimes, where the proposed signal maintains its diagnostic\nutility. Collectively, these findings validate post-hoc signals as a valuable\ncomponent for building more robust and intelligent LLM inference systems, and\nhighlight a promising direction for future research on dynamic speculation\nlength adaptation."}
{"id": "2509.00764", "categories": ["cs.AR", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.00764", "abs": "https://arxiv.org/abs/2509.00764", "authors": ["Pragun Jaswal", "L. Hemanth Krishna", "B. Srinivasu"], "title": "Low Power Approximate Multiplier Architecture for Deep Neural Networks", "comment": null, "summary": "This paper proposes an low power approximate multiplier architecture for deep\nneural network (DNN) applications. A 4:2 compressor, introducing only a single\ncombination error, is designed and integrated into an 8x8 unsigned multiplier.\nThis integration significantly reduces the usage of exact compressors while\npreserving low error rates. The proposed multiplier is employed within a custom\nconvolution layer and evaluated on neural network tasks, including image\nrecognition and denoising. Hardware evaluation demonstrates that the proposed\ndesign achieves up to 30.24% energy savings compared to the best among existing\nmultipliers. In image denoising, the custom approximate convolution layer\nachieves improved Peak Signal-to-Noise Ratio (PSNR) and Structural Similarity\nIndex Measure (SSIM) compared to other approximate designs. Additionally, when\napplied to handwritten digit recognition, the model maintains high\nclassification accuracy. These results demonstrate that the proposed\narchitecture offers a favorable balance between energy efficiency and\ncomputational precision, making it suitable for low-power AI hardware\nimplementations."}
{"id": "2509.01118", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2509.01118", "abs": "https://arxiv.org/abs/2509.01118", "authors": ["Jinyuan Chen"], "title": "Ocior: Ultra-Fast Asynchronous Leaderless Consensus with Two-Round Finality, Linear Overhead, and Adaptive Security", "comment": "52 pages", "summary": "In this work, we propose Ocior, a practical asynchronous Byzantine\nfault-tolerant (BFT) consensus protocol that achieves the optimal performance\nin resilience, communication, computation, and round complexity. Unlike\ntraditional BFT consensus protocols, Ocior processes incoming transactions\nindividually and concurrently using parallel instances of consensus. While\nleader-based consensus protocols rely on a designated leader to propose\ntransactions, Ocior is a leaderless consensus protocol that guarantees stable\nliveness. Ocior achieves: 1) Optimal resilience: Ocior tolerates up to $t$\nfaulty nodes controlled by an adaptive adversary, for $n\\geq 3t+1$. 2) Optimal\ncommunication complexity: The total expected communication per transaction is\n$O(n)$. 3) Optimal (or near-optimal) computation complexity: The total\ncomputation per transaction is $O(n)$ in the best case, or $O(n \\log^2 n)$ in\nthe worst case. 4) Optimal round complexity: A legitimate two-party transaction\ncan be finalized with a good-case latency of two asynchronous rounds, for any\n$n\\geq 3t+1$. The good case in terms of latency refers to the scenario where\nthe transaction is proposed by any (not necessarily designated) honest node. A\ntwo-party transaction involves the transfer of digital assets from one user (or\ngroup of users) to one or more recipients. To support efficient consensus, we\nintroduce a novel non-interactive threshold signature (TS) scheme called\nOciorBLSts. It offers fast signature aggregation, and is adaptively secure.\nOciorBLSts achieves a signature aggregation computation cost of only $O(n)$ for\nthe best case. Moreover, OciorBLSts supports the property of Instantaneous TS\nAggregation. This enables real-time aggregation of partial signatures as they\narrive, reducing waiting time and improving responsiveness."}
{"id": "2509.00778", "categories": ["cs.AR", "cs.CV"], "pdf": "https://arxiv.org/pdf/2509.00778", "abs": "https://arxiv.org/abs/2509.00778", "authors": ["Pragun Jaswal", "L. Hemanth Krishna", "B. Srinivasu"], "title": "Energy Efficient Exact and Approximate Systolic Array Architecture for Matrix Multiplication", "comment": "Submitted to 39th International Conference on VLSI Design, 2026", "summary": "Deep Neural Networks (DNNs) require highly efficient matrix multiplication\nengines for complex computations. This paper presents a systolic array\narchitecture incorporating novel exact and approximate processing elements\n(PEs), designed using energy-efficient positive partial product and negative\npartial product cells, termed as PPC and NPPC, respectively. The proposed 8-bit\nexact and approximate PE designs are employed in a 8x8 systolic array, which\nachieves a energy savings of 22% and 32%, respectively, compared to the\nexisting design. To demonstrate their effectiveness, the proposed PEs are\nintegrated into a systolic array (SA) for Discrete Cosine Transform (DCT)\ncomputation, achieving high output quality with a PSNR of 38.21,dB.\nFurthermore, in an edge detection application using convolution, the\napproximate PE achieves a PSNR of 30.45,dB. These results highlight the\npotential of the proposed design to deliver significant energy efficiency while\nmaintaining competitive output quality, making it well-suited for\nerror-resilient image and vision processing applications."}
{"id": "2509.01168", "categories": ["cs.DC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.01168", "abs": "https://arxiv.org/abs/2509.01168", "authors": ["Dmitry Yaremus", "Jianghai Li", "Alisa Kalacheva", "Igor Vodolazov", "Yury Yanovich"], "title": "Detecting Rug Pulls in Decentralized Exchanges: Machine Learning Evidence from the TON Blockchain", "comment": null, "summary": "This paper presents a machine learning framework for the early detection of\nrug pull scams on decentralized exchanges (DEXs) within The Open Network (TON)\nblockchain. TON's unique architecture, characterized by asynchronous execution\nand a massive web2 user base from Telegram, presents a novel and critical\nenvironment for fraud analysis. We conduct a comprehensive study on the two\nlargest TON DEXs, Ston.Fi and DeDust, fusing data from both platforms to train\nour models. A key contribution is the implementation and comparative analysis\nof two distinct rug pull definitions--TVL-based (a catastrophic liquidity\nwithdrawal) and idle-based (a sudden cessation of all trading activity)--within\na single, unified study. We demonstrate that Gradient Boosting models can\neffectively identify rug pulls within the first five minutes of trading, with\nthe TVL-based method achieving superior AUC (up to 0.891) while the idle-based\nmethod excels at recall. Our analysis reveals that while feature sets are\nconsistent across exchanges, their underlying distributions differ\nsignificantly, challenging straightforward data fusion and highlighting the\nneed for robust, platform-aware models. This work provides a crucial\nearly-warning mechanism for investors and enhances the security infrastructure\nof the rapidly growing TON DeFi ecosystem."}
{"id": "2509.00911", "categories": ["cs.AR", "cs.CV"], "pdf": "https://arxiv.org/pdf/2509.00911", "abs": "https://arxiv.org/abs/2509.00911", "authors": ["Joongho Jo", "Jongsun Park"], "title": "GS-TG: 3D Gaussian Splatting Accelerator with Tile Grouping for Reducing Redundant Sorting while Preserving Rasterization Efficiency", "comment": "DAC 2025", "summary": "3D Gaussian Splatting (3D-GS) has emerged as a promising alternative to\nneural radiance fields (NeRF) as it offers high speed as well as high image\nquality in novel view synthesis. Despite these advancements, 3D-GS still\nstruggles to meet the frames per second (FPS) demands of real-time\napplications. In this paper, we introduce GS-TG, a tile-grouping-based\naccelerator that enhances 3D-GS rendering speed by reducing redundant sorting\noperations and preserving rasterization efficiency. GS-TG addresses a critical\ntrade-off issue in 3D-GS rendering: increasing the tile size effectively\nreduces redundant sorting operations, but it concurrently increases unnecessary\nrasterization computations. So, during sorting of the proposed approach, GS-TG\ngroups small tiles (for making large tiles) to share sorting operations across\ntiles within each group, significantly reducing redundant computations. During\nrasterization, a bitmask assigned to each Gaussian identifies relevant small\ntiles, to enable efficient sharing of sorting results. Consequently, GS-TG\nenables sorting to be performed as if a large tile size is used by grouping\ntiles during the sorting stage, while allowing rasterization to proceed with\nthe original small tiles by using bitmasks in the rasterization stage. GS-TG is\na lossless method requiring no retraining or fine-tuning and it can be\nseamlessly integrated with previous 3D-GS optimization techniques. Experimental\nresults show that GS-TG achieves an average speed-up of 1.54 times over\nstate-of-the-art 3D-GS accelerators."}
{"id": "2509.01193", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2509.01193", "abs": "https://arxiv.org/abs/2509.01193", "authors": ["Sheng Lin", "Fangcheng Fu", "Haoyang Li", "Hao Ge", "Xuanyu Wang", "Jiawen Niu", "Yaofeng Tu", "Bin Cui"], "title": "LobRA: Multi-tenant Fine-tuning over Heterogeneous Data", "comment": "VLDB 2025, version with appendix", "summary": "With the breakthrough of Transformer-based pre-trained models, the demand for\nfine-tuning (FT) to adapt the base pre-trained models to downstream\napplications continues to grow, so it is essential for service providers to\nreduce the cost of processing FT requests. Low-rank adaption (LoRA) is a widely\nused FT technique that only trains small-scale adapters and keeps the base\nmodel unaltered, conveying the possibility of processing multiple FT tasks by\njointly training different LoRA adapters with a shared base model.\n  Nevertheless, through in-depth analysis, we reveal the efficiency of joint FT\nis dampened by two heterogeneity issues in the training data -- the sequence\nlength variation and skewness. To tackle these issues, we develop LobRA, a\nbrand new framework that supports processing multiple FT tasks by jointly\ntraining LoRA adapters. Two innovative designs are introduced. Firstly, LobRA\ndeploys the FT replicas (i.e., model replicas for FT) with heterogeneous\nresource usages and parallel configurations, matching the diverse workloads\ncaused by the sequence length variation. Secondly, for each training step,\nLobRA takes account of the sequence length skewness and dispatches the training\ndata among the heterogeneous FT replicas to achieve workload balance. We\nconduct experiments to assess the performance of LobRA, validating that it\nsignificantly reduces the GPU seconds required for joint FT by 45.03%-60.67%."}
{"id": "2509.01020", "categories": ["cs.AR", "cs.PF"], "pdf": "https://arxiv.org/pdf/2509.01020", "abs": "https://arxiv.org/abs/2509.01020", "authors": ["Elena Espinosa", "RubÃ©n RodrÃ­guez Ãlvarez", "JosÃ© Miranda", "Rafael Larrosa", "Miguel PeÃ³n-QuirÃ³s", "Oscar Plata", "David Atienza"], "title": "GeneTEK: Low-power, high-performance and scalable genome sequence matching in FPGAs", "comment": null, "summary": "The advent of next-generation sequencing (NGS) has revolutionized genomic\nresearch by enabling high-throughput data generation through parallel\nsequencing of a diverse range of organisms at significantly reduced costs. This\nbreakthrough has unleashed a \"Cambrian explosion\" in genomic data volume and\ndiversity. This volume of workloads places genomics among the top four big data\nchallenges anticipated for this decade. In this context, pairwise sequence\nalignment represents a very time- and energy-consuming step in common\nbioinformatics pipelines. Speeding up this step requires the implementation of\nheuristic approaches, optimized algorithms, and/or hardware acceleration.\n  Whereas state-of-the-art CPU and GPU implementations have demonstrated\nsignificant performance gains, recent field programmable gate array (FPGA)\nimplementations have shown improved energy efficiency. However, the latter\noften suffer from limited scalability due to constraints on hardware resources\nwhen aligning longer sequences. In this work, we present a scalable and\nflexible FPGA-based accelerator template that implements Myers's algorithm\nusing high-level synthesis and a worker-based architecture. GeneTEK, an\ninstance of this accelerator template in a Xilinx Zynq UltraScale+ FPGA,\noutperforms state-of-the-art CPU and GPU implementations in both speed and\nenergy efficiency, while overcoming scalability limitations of current FPGA\napproaches. Specifically, GeneTEK achieves at least a 19.4% increase in\nexecution speed and up to 62x reduction in energy consumption compared to\nleading CPU and GPU solutions, while fitting comparison matrices up to 72%\nlarger compared to previous FPGA solutions. These results reaffirm the\npotential of FPGAs as an energy-efficient platform for scalable genomic\nworkloads."}
{"id": "2509.01229", "categories": ["cs.DC", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.01229", "abs": "https://arxiv.org/abs/2509.01229", "authors": ["Huanqi Hu", "Bowen Xiao", "Shixuan Sun", "Jianian Yin", "Zhexi Zhang", "Xiang Luo", "Chengquan Jiang", "Weiqi Xu", "Xiaoying Jia", "Xin Liu", "Minyi Guo"], "title": "LiquidGEMM: Hardware-Efficient W4A8 GEMM Kernel for High-Performance LLM Serving", "comment": "12 pages, 13 figures", "summary": "Quantization is a critical technique for accelerating LLM inference by\nreducing memory footprint and improving computational efficiency. Among various\nschemes, 4-bit weight and 8-bit activation quantization (W4A8) offers a strong\nbalance between accuracy and performance. However, existing W4A8 GEMM kernels\nfall short in practice due to inefficient dequantization on CUDA Cores, which\ncannot keep pace with the high throughput of Tensor Cores. In this paper, we\npresent LiquidGEMM, a hardware-efficient W4A8 GEMM kernel for efficient LLM\nserving. LiquidGEMM designs two key techniques: LiquidQuant, a\nhardware-efficient quantization method that enables fast, overflow-safe\ndequantization using just two arithmetic instructions per four elements; and an\nimplicit fine-grained pipeline that fully overlaps weight loading,\ndequantization, and MMA across warp groups without software synchronization or\nredundant memory traffic. Experimental results show that LiquidGEMM achieves up\nto 2.90x speedup over state-of-the-art W4A8 kernels and up to 4.94x end-to-end\nsystem-level speedup. Compared to various quantized GEMM kernels in NVIDIA\nTensorRT-LLM, LiquidGEMM delivers 1.12-1.63x performance gains, and achieves up\nto 1.63x system-level speedup."}
{"id": "2509.01339", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2509.01339", "abs": "https://arxiv.org/abs/2509.01339", "authors": ["Bochen Ye", "Gustavo Naspolini", "Kimmo Salo", "Manil Dev Gomony"], "title": "LinkBo: An Adaptive Single-Wire, Low-Latency, and Fault-Tolerant Communications Interface for Variable-Distance Chip-to-Chip Systems", "comment": "This paper is full version of SOCC'2025 conference", "summary": "Cost-effective embedded systems necessitate utilizing the single-wire\ncommunication protocol for inter-chip communication, thanks to its reduced pin\ncount in comparison to the multi-wire I2C or SPI protocols. However, current\nsingle-wire protocols suffer from increased latency, restricted throughput, and\nlack of robustness. This paper presents LinkBo, an innovative single-wire\nprotocol that offers reduced latency, enhanced throughput, and greater\nrobustness with hardware-interrupt for variable-distance inter-chip\ncommunication. The LinkBo protocol-level guarantees that high-priority messages\nare delivered with an error detection feature in just 50.4 $\\mu$s, surpassing\ncurrent commercial options, 1-wire and UNI/O by at least 20X and 6.3X,\nrespectively. In addition, we present the hardware architecture for this new\nprotocol and its performance evaluation on a hardware platform consisting of\ntwo FPGAs. Our findings demonstrate that the protocol reliably supports wire\nlengths up to 15 meters with a data rate of 300 kbps, while reaching a maximum\ndata rate of 7.5 Mbps over an 11 cm wire, providing reliable performance for\nvarying inter-chip communication distances."}
{"id": "2509.01425", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2509.01425", "abs": "https://arxiv.org/abs/2509.01425", "authors": ["Sergio Miguel Martin", "Luca Terracciano", "Kiril Dichev", "Noah Baumann", "Jiashu Lin", "Albert-Jan Yzelman"], "title": "HiCR, an Abstract Model for Distributed Heterogeneous Programming", "comment": null, "summary": "We present HiCR, a model to represent the semantics of distributed\nheterogeneous applications and runtime systems. The model describes a minimal\nset of abstract operations to enable hardware topology discovery, kernel\nexecution, memory management, communication, and instance management, without\nprescribing any implementation decisions. The goal of the model is to enable\nexecution in current and future systems without the need for significant\nrefactoring, while also being able to serve any governing parallel programming\nparadigm. In terms of software abstraction, HiCR is naturally located between\ndistributed heterogeneous systems and runtime systems. We coin the phrase\n\\emph{Runtime Support Layer} for this level of abstraction. We explain how the\nmodel's components and operations are realized by a plugin-based approach that\ntakes care of device-specific implementation details, and present examples of\nHiCR-based applications that operate equally on a diversity of platforms."}
{"id": "2509.02369", "categories": ["cs.AR", "cs.AI", "cs.SY", "eess.SY"], "pdf": "https://arxiv.org/pdf/2509.02369", "abs": "https://arxiv.org/abs/2509.02369", "authors": ["Zacharia A. Rudge", "Dario Izzo", "Moritz Fieback", "Anteneh Gebregiorgis", "Said Hamdioui", "Dominik Dold"], "title": "Guidance and Control Neural Network Acceleration using Memristors", "comment": "4 pages, SPAICE 2024 conference", "summary": "In recent years, the space community has been exploring the possibilities of\nArtificial Intelligence (AI), specifically Artificial Neural Networks (ANNs),\nfor a variety of on board applications. However, this development is limited by\nthe restricted energy budget of smallsats and cubesats as well as radiation\nconcerns plaguing modern chips. This necessitates research into neural network\naccelerators capable of meeting these requirements whilst satisfying the\ncompute and performance needs of the application. This paper explores the use\nof Phase-Change Memory (PCM) and Resistive Random-Access Memory (RRAM)\nmemristors for on-board in-memory computing AI acceleration in space\napplications. A guidance and control neural network (G\\&CNET) accelerated using\nmemristors is simulated in a variety of scenarios and with both device types to\nevaluate the performance of memristor-based accelerators, considering device\nnon-idealities such as noise and conductance drift. We show that the memristive\naccelerator is able to learn the expert actions, though challenges remain with\nthe impact of noise on accuracy. We also show that re-training after\ndegradation is able to restore performance to nominal levels. This study\nprovides a foundation for future research into memristor-based AI accelerators\nfor space, highlighting their potential and the need for further investigation."}
{"id": "2509.01626", "categories": ["cs.DC", "cs.MM"], "pdf": "https://arxiv.org/pdf/2509.01626", "abs": "https://arxiv.org/abs/2509.01626", "authors": ["Daoce Wang", "Pascal Grosset", "Jesus Pulido", "Jiannan Tian", "Tushar M. Athawale", "Jinda Jia", "Baixi Sun", "Boyuan Zhang", "Sian Jin", "Kai Zhao", "James Ahrens", "Fengguang Song"], "title": "STZ: A High Quality and High Speed Streaming Lossy Compression Framework for Scientific Data", "comment": "accepted by SC '25", "summary": "Error-bounded lossy compression is one of the most efficient solutions to\nreduce the volume of scientific data. For lossy compression, progressive\ndecompression and random-access decompression are critical features that enable\non-demand data access and flexible analysis workflows. However, these features\ncan severely degrade compression quality and speed. To address these\nlimitations, we propose a novel streaming compression framework that supports\nboth progressive decompression and random-access decompression while\nmaintaining high compression quality and speed. Our contributions are\nthree-fold: (1) we design the first compression framework that simultaneously\nenables both progressive decompression and random-access decompression; (2) we\nintroduce a hierarchical partitioning strategy to enable both streaming\nfeatures, along with a hierarchical prediction mechanism that mitigates the\nimpact of partitioning and achieves high compression quality -- even comparable\nto state-of-the-art (SOTA) non-streaming compressor SZ3; and (3) our framework\ndelivers high compression and decompression speed, up to 6.7$\\times$ faster\nthan SZ3."}
{"id": "2509.01811", "categories": ["cs.DC", "cs.PF"], "pdf": "https://arxiv.org/pdf/2509.01811", "abs": "https://arxiv.org/abs/2509.01811", "authors": ["Chengzhang Li", "Peizhong Ju", "Atilla Eryilmaz", "Ness Shroff"], "title": "Optimal Parallel Scheduling under Concave Speedup Functions", "comment": null, "summary": "Efficient scheduling of parallel computation resources across multiple jobs\nis a fundamental problem in modern cloud/edge computing systems for many\nAI-based applications. Allocating more resources to a job accelerates its\ncompletion, but with diminishing returns. Prior work (heSRPT) solved this\nproblem only for some specific speedup functions with an exponential form,\nproviding a closed-form solution. However, the general case with arbitrary\nconcave speedup functions -- which more accurately capture real-world workloads\n-- has remained open.\n  In this paper, we solve this open problem by developing optimal scheduling\nalgorithms for parallel jobs under general concave speedup functions. We first\ndiscover a fundamental and broadly-applicable rule for optimal parallel\nscheduling, namely the Consistent Derivative Ratio (CDR) Rule, which states\nthat the ratio of the derivatives of the speedup functions across active jobs\nremains constant over time. To efficiently compute the optimal allocations that\nsatisfy the CDR Rule, we propose the General Water-Filling (GWF) method, a more\ngeneral version of classical water-filling in wireless communications.\nCombining these insights, we design the SmartFill Algorithm to solve the\ngeneral scheduling problem. Unlike heSRPT, which always allocates resources to\nall active jobs, SmartFill selectively determines which jobs should receive\nresources and how much they should be allocated. For a broad class of so-called\n\\emph{regular} speedup functions, SmartFill yields closed-form optimal\nsolutions, while for non-regular functions it efficiently computes the optimum\nwith low complexity. Numerical evaluations show that SmartFill can\nsubstantially outperform heSRPT across a wide range of concave speedup\nfunctions."}
{"id": "2509.01928", "categories": ["cs.DC", "math-ph", "math.MP", "math.OC", "quant-ph", "90C26, 90C59, 82B20, 68W40, 65K10, 82C32"], "pdf": "https://arxiv.org/pdf/2509.01928", "abs": "https://arxiv.org/abs/2509.01928", "authors": ["Debraj Banerjee", "Santanu Mahapatra", "Kunal Narayan Chaudhury"], "title": "A Continuous Energy Ising Machine Leveraging Difference-of-Convex Programming", "comment": "41 pages, 24 figures, journal paper", "summary": "Many combinatorial optimization problems can be reformulated as the task of\nfinding the ground state of a physical system, such as the Ising model. Most\nexisting Ising solvers are inspired by simulated annealing. Although annealing\ntechniques offer scalability, they lack convergence guarantees and are\nsensitive to the cooling schedule. We propose to solve the Ising problem by\nrelaxing the binary spins to continuous variables and introducing a potential\nfunction (attractor) that steers the solution toward binary spin\nconfigurations. The resulting Hamiltonian can be expressed as a difference of\nconvex functions, enabling the design of efficient iterative algorithms that\nrequire a single matrix-vector multiplication per iteration and are backed by\nconvergence guarantees. We implement our Ising solver across a range of GPU\nplatforms: from edge devices to high-performance computing clusters and\ndemonstrate that it consistently outperforms existing solvers across problem\nsizes ranging from small ($10^3$ spins) to ultra-large ($10^8$ spins)."}
{"id": "2509.02186", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2509.02186", "abs": "https://arxiv.org/abs/2509.02186", "authors": ["Phani Sahasra Akkinepally", "Manaswini Piduguralla", "Sushant Joshi", "Sathya Peri", "Sandeep Kulkarni"], "title": "Fault-Tolerant Decentralized Distributed Asynchronous Federated Learning with Adaptive Termination Detection", "comment": null, "summary": "Federated Learning (FL) facilitates collaborative model training across\ndistributed clients while ensuring data privacy. Traditionally, FL relies on a\ncentralized server to coordinate learning, which creates bottlenecks and a\nsingle point of failure. Decentralized FL architectures eliminate the need for\na central server and can operate in either synchronous or asynchronous modes.\nSynchronous FL requires all clients to compute updates and wait for one another\nbefore aggregation, guaranteeing consistency but often suffering from delays\ndue to slower participants. Asynchronous FL addresses this by allowing clients\nto update independently, offering better scalability and responsiveness in\nheterogeneous environments.\n  Our research develops an asynchronous decentralized FL approach in two\nprogressive phases. (a) In Phase 1, we develop an asynchronous FL framework\nthat enables clients to learn and update independently, removing the need for\nstrict synchronization. (b) In Phase 2, we extend this framework with fault\ntolerance mechanisms to handle client failures and message drops, ensuring\nrobust performance even under unpredictable conditions. As a central\ncontribution, we propose Client-Confident Convergence and Client-Responsive\nTermination novel techniques that provide each client with the ability to\nautonomously determine appropriate termination points. These methods ensure\nthat all active clients conclude meaningfully and efficiently, maintaining\nreliable convergence despite the challenges of asynchronous communication and\nfaults."}
{"id": "2509.02421", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2509.02421", "abs": "https://arxiv.org/abs/2509.02421", "authors": ["Ramesh Adhikari", "Costas Busch", "Dariusz R. Kowalski"], "title": "Near-Optimal Stability for Distributed Transaction Processing in Blockchain Sharding", "comment": "13 pages, 1 figure, accepted for publication in Proceedings of the\n  27th International Symposium on Stabilization, Safety, and Security of\n  Distributed Systems (SSS 2025)", "summary": "In blockchain sharding, $n$ processing nodes are divided into $s$ shards, and\neach shard processes transactions in parallel. A key challenge in such a system\nis to ensure system stability for any ``tractable'' pattern of generated\ntransactions; this is modeled by an adversary generating transactions with a\ncertain rate of at most $\\rho$ and burstiness $b$. This model captures\nworst-case scenarios and even some attacks on transactions' processing, e.g.,\nDoS. A stable system ensures bounded transaction queue sizes and bounded\ntransaction latency. It is known that the absolute upper bound on the maximum\ninjection rate for which any scheduler could guarantee bounded queues and\nlatency of transactions is $\\max\\left\\{ \\frac{2}{k+1}, \\frac{2}{\n\\left\\lfloor\\sqrt{2s}\\right\\rfloor}\\right\\}$, where $k$ is the maximum number\nof shards that each transaction accesses. Here, we first provide a single\nleader scheduler that guarantees stability under injection rate $\\rho \\leq\n\\max\\left\\{ \\frac{1}{16k}, \\frac{1}{16\\lceil \\sqrt{s} \\rceil}\\right\\}$.\nMoreover, we also give a distributed scheduler with multiple leaders that\nguarantees stability under injection rate $\\rho \\leq \\frac{1}{16c_1 \\log D \\log\ns}\\max\\left\\{ \\frac{1}{k}, \\frac{1}{\\lceil \\sqrt{s} \\rceil} \\right\\}$, where\n$c_1$ is some positive constant and $D$ is the diameter of shard graph $G_s$.\nThis bound is within a poly-log factor from the optimal injection rate, and\nsignificantly improves the best previous known result for the distributed\nsetting by Adhikari et al., SPAA 2024."}
{"id": "2509.02440", "categories": ["cs.DC", "cs.CV"], "pdf": "https://arxiv.org/pdf/2509.02440", "abs": "https://arxiv.org/abs/2509.02440", "authors": ["Marie Reinbigler", "Rishi Sharma", "Rafael Pires", "Elisabeth Brunet", "Anne-Marie Kermarrec", "Catalin Fetita"], "title": "Efficient Pyramidal Analysis of Gigapixel Images on a Decentralized Modest Computer Cluster", "comment": "Accepted at the 31st International European Conference on Parallel\n  and Distributed Computing (Euro-Par'25)", "summary": "Analyzing gigapixel images is recognized as computationally demanding. In\nthis paper, we introduce PyramidAI, a technique for analyzing gigapixel images\nwith reduced computational cost. The proposed approach adopts a gradual\nanalysis of the image, beginning with lower resolutions and progressively\nconcentrating on regions of interest for detailed examination at higher\nresolutions. We investigated two strategies for tuning the accuracy-computation\nperformance trade-off when implementing the adaptive resolution selection,\nvalidated against the Camelyon16 dataset of biomedical images. Our results\ndemonstrate that PyramidAI substantially decreases the amount of processed data\nrequired for analysis by up to 2.65x, while preserving the accuracy in\nidentifying relevant sections on a single computer. To ensure democratization\nof gigapixel image analysis, we evaluated the potential to use mainstream\ncomputers to perform the computation by exploiting the parallelism potential of\nthe approach. Using a simulator, we estimated the best data distribution and\nload balancing algorithm according to the number of workers. The selected\nalgorithms were implemented and highlighted the same conclusions in a\nreal-world setting. Analysis time is reduced from more than an hour to a few\nminutes using 12 modest workers, offering a practical solution for efficient\nlarge-scale image analysis."}
{"id": "2509.02447", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2509.02447", "abs": "https://arxiv.org/abs/2509.02447", "authors": ["Xinrui Zhong", "Xinze Feng", "Jingwei Zuo", "Fanjiang Ye", "Yi Mu", "Junfeng Guo", "Heng Huang", "Myungjin Lee", "Yuke Wang"], "title": "An Efficient and Adaptive Watermark Detection System with Tile-based Error Correction", "comment": null, "summary": "Efficient and reliable detection of generated images is critical for the\nresponsible deployment of generative models. Existing approaches primarily\nfocus on improving detection accuracy and robustness under various image\ntransformations and adversarial manipulations, yet they largely overlook the\nefficiency challenges of watermark detection across large-scale image\ncollections. To address this gap, we propose QRMark, an efficient and adaptive\nend-to-end method for detecting embedded image watermarks. The core idea of\nQRMark is to combine QR Code inspired error correction with tailored tiling\ntechniques to improve detection efficiency while preserving accuracy and\nrobustness. At the algorithmic level, QRMark employs a Reed-Solomon error\ncorrection mechanism to mitigate the accuracy degradation introduced by tiling.\nAt the system level, QRMark implements a resource-aware stream allocation\npolicy that adaptively assigns more streams to GPU-intensive stages of the\ndetection pipeline. It further employs a tile-based workload interleaving\nstrategy to overlap data-loading overhead with computation and schedules\nkernels across stages to maximize efficiency. End-to-end evaluations show that\nQRMark achieves an average 2.43x inference speedup over the sequential\nbaseline."}
{"id": "2509.02449", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2509.02449", "abs": "https://arxiv.org/abs/2509.02449", "authors": ["Mohsen Seyedkazemi Ardebili", "Andrea Bartolini"], "title": "KubeIntellect: A Modular LLM-Orchestrated Agent Framework for End-to-End Kubernetes Management", "comment": null, "summary": "Kubernetes has become the foundation of modern cloud-native infrastructure,\nyet its management remains complex and fragmented. Administrators must navigate\na vast API surface, manage heterogeneous workloads, and coordinate tasks across\ndisconnected tools - often requiring precise commands, YAML configuration, and\ncontextual expertise.\n  This paper presents KubeIntellect, a Large Language Model (LLM)-powered\nsystem for intelligent, end-to-end Kubernetes control. Unlike existing tools\nthat focus on observability or static automation, KubeIntellect supports\nnatural language interaction across the full spectrum of Kubernetes API\noperations, including read, write, delete, exec, access control, lifecycle, and\nadvanced verbs. The system uses modular agents aligned with functional domains\n(e.g., logs, metrics, RBAC), orchestrated by a supervisor that interprets user\nqueries, maintains workflow memory, invokes reusable tools, or synthesizes new\nones via a secure Code Generator Agent.\n  KubeIntellect integrates memory checkpoints, human-in-the-loop clarification,\nand dynamic task sequencing into a structured orchestration framework.\nEvaluation results show a 93% tool synthesis success rate and 100% reliability\nacross 200 natural language queries, demonstrating the system's ability to\noperate efficiently under diverse workloads. An automated demo environment is\nprovided on Azure, with additional support for local testing via kind. This\nwork introduces a new class of interpretable, extensible, and LLM-driven\nsystems for managing complex infrastructure."}
{"id": "2509.02457", "categories": ["cs.DC", "cs.DS", "cs.PF", "cs.PL"], "pdf": "https://arxiv.org/pdf/2509.02457", "abs": "https://arxiv.org/abs/2509.02457", "authors": ["Ajay Singh"], "title": "Safe Memory Reclamation Techniques", "comment": "Ph.D. Thesis", "summary": "Safe memory reclamation is crucial to memory safety for optimistic and\nlock-free concurrent data structures in non garbage collected programming\nlanguages. However, several challenges arise in designing an ideal safe memory\nreclamation algorithm, including achieving high speed and scalability, easy of\nuse for programmers, applicability to wide class of data structures, managing\nthe large memory footprint caused by delayed freeing of memory for safety and\nperformance, and avoiding asymmetric overhead on data structure operations.\nSeveral approaches to designing safe memory reclamation algorithms are studied\nby blending ideas and tools from across the hardware-software stack. These\nsolutions cross traditional boundaries and exploit features exposed at\ndifferent layers."}
{"id": "2509.02480", "categories": ["cs.DC", "cs.AI", "cs.LG", "H.2.0; E.2; I.2.11"], "pdf": "https://arxiv.org/pdf/2509.02480", "abs": "https://arxiv.org/abs/2509.02480", "authors": ["Avinash Maurya", "M. Mustafa Rafique", "Franck Cappello", "Bogdan Nicolae"], "title": "MLP-Offload: Multi-Level, Multi-Path Offloading for LLM Pre-training to Break the GPU Memory Wall", "comment": "SC'25: The International Conference for High Performance Computing,\n  Networking, Storage and Analysis", "summary": "Training LLMs larger than the aggregated memory of multiple GPUs is\nincreasingly necessary due to the faster growth of LLM sizes compared to GPU\nmemory. To this end, multi-tier host memory or disk offloading techniques are\nproposed by state of art. Despite advanced asynchronous multi-tier read/write\nstrategies, such offloading strategies result in significant I/O overheads in\nthe critical path of training, resulting in slower iterations. To this end, we\npropose MLP-Offload, a novel multi-level, multi-path offloading engine\nspecifically designed for optimizing LLM training on resource-constrained\nsetups by mitigating I/O bottlenecks. We make several key observations that\ndrive the design of MLP-Offload, such as I/O overheads during the update\ndominate the iteration time; I/O bandwidth of the third-level remote storage\ntier remains unutilized; and, contention due to concurrent offloading amplifies\nI/O bottlenecks. Driven by these insights, we design and implement MLP-Offload\nto offload the optimizer states across multiple tiers in a cache-efficient and\nconcurrency-controlled fashion to mitigate I/O bottlenecks during the backward\nand update phases. Evaluations on models up to 280B parameters shows that\nMLP-Offload achieves 2.5$\\times$ faster iterations compared to the\nstate-of-the-art LLM training runtimes."}
{"id": "2509.02549", "categories": ["cs.DC", "cs.ET"], "pdf": "https://arxiv.org/pdf/2509.02549", "abs": "https://arxiv.org/abs/2509.02549", "authors": ["Keiwan Soltani", "Vishesh Kumar Tanwar", "Ashish Gupta", "Sajal K. Das"], "title": "Energy-Efficient Split Learning for Resource-Constrained Environments: A Smart Farming Solution", "comment": "Accepted at the 22nd IEEE International Conference on Mobile Ad-Hoc\n  and Smart Systems (MASS), 2025", "summary": "Smart farming systems encounter significant challenges, including limited\nresources, the need for data privacy, and poor connectivity in rural areas. To\naddress these issues, we present eEnergy-Split, an energy-efficient framework\nthat utilizes split learning (SL) to enable collaborative model training\nwithout direct data sharing or heavy computation on edge devices. By\ndistributing the model between edge devices and a central server, eEnergy-Split\nreduces on-device energy usage by up to 86 percent compared to federated\nlearning (FL) while safeguarding data privacy. Moreover, SL improves\nclassification accuracy by up to 6.2 percent over FL on ResNet-18 and by more\nmodest amounts on GoogleNet and MobileNetV2. We propose an optimal edge\ndeployment algorithm and a UAV trajectory planning strategy that solves the\nTraveling Salesman Problem (TSP) exactly to minimize flight cost and extend and\nmaximize communication rounds. Comprehensive evaluations on agricultural pest\ndatasets reveal that eEnergy-Split lowers UAV energy consumption compared to\nbaseline methods and boosts overall accuracy by up to 17 percent. Notably, the\nenergy efficiency of SL is shown to be model-dependent-yielding substantial\nsavings in lightweight models like MobileNet, while communication and memory\noverheads may reduce efficiency gains in deeper networks. These results\nhighlight the potential of combining SL with energy-aware design to deliver a\nscalable, privacy-preserving solution for resource-constrained smart farming\nenvironments."}
{"id": "2509.00599", "categories": ["cs.AR", "cs.DC"], "pdf": "https://arxiv.org/pdf/2509.00599", "abs": "https://arxiv.org/abs/2509.00599", "authors": ["Shubham Negi", "Manik Singhal", "Aayush Ankit", "Sudeep Bhoja", "Kaushik Roy"], "title": "COMET: A Framework for Modeling Compound Operation Dataflows with Explicit Collectives", "comment": null, "summary": "Modern machine learning accelerators are designed to efficiently execute deep\nneural networks (DNNs) by optimizing data movement, memory hierarchy, and\ncompute throughput. However, emerging DNN models such as large language models,\nstate space models increasingly rely on compound operations-structured\ncompositions of multiple basic operations-which introduce new challenges for\ndataflow optimization and minimizing off-chip memory traffic. Moreover, as\nmodel size continues to grow, deployment across spatially distributed compute\nclusters becomes essential, requiring frequent and complex collective\ncommunication. Existing dataflow optimization frameworks and performance models\neither focus on single operations or lack explicit modeling of collective\ncommunication cost, limiting their applicability to modern workloads.\n  To address these limitations, we propose, a framework for modeling and\noptimizing dataflow for compound operations on machine learning accelerators.\nCOMET introduces a novel representation that explicitly models collective\ncommunication across spatial clusters, along with latency and energy cost\nmodels that account for both GEMM and non-GEMM operation level dependencies\nwithin compound operations. We demonstrate COMET's capabilities to analyze and\noptimize dataflows for compound operations such as GEMM--Softmax,\nGEMM--LayerNorm, and self-attention, across both edge and cloud accelerator\nconfigurations. Our collective-aware modeling enables exploration of a broader\nmapping space, leading to improved performance and energy efficiency.\nSpecifically, our optimized dataflows achieve up to 1.42$\\times$ speedup for\nGEMM-Softmax, 3.46$\\times$ for GEMM-LayerNorm and 1.82$\\times$ for\nself-attention compared to unfused baselines."}
