{"id": "2509.08207", "categories": ["cs.DC", "cs.AR", "cs.CE", "cs.PF", "C.0; C.4; C.5.1; B.8.0; D.1.3"], "pdf": "https://arxiv.org/pdf/2509.08207", "abs": "https://arxiv.org/abs/2509.08207", "authors": ["Benjamin S. Allen", "James Anchell", "Victor Anisimov", "Thomas Applencourt", "Abhishek Bagusetty", "Ramesh Balakrishnan", "Riccardo Balin", "Solomon Bekele", "Colleen Bertoni", "Cyrus Blackworth", "Renzo Bustamante", "Kevin Canada", "John Carrier", "Christopher Chan-nui", "Lance C. Cheney", "Taylor Childers", "Paul Coffman", "Susan Coghlan", "Michael D'Mello", "Murali Emani", "Kyle G. Felker", "Sam Foreman", "Olivier Franza", "Longfei Gao", "Marta García", "María Garzarán", "Balazs Gerofi", "Yasaman Ghadar", "Neha Gupta", "Kevin Harms", "Väinö Hatanpää", "Brian Holland", "Carissa Holohan", "Brian Homerding", "Khalid Hossain", "Louise Huot", "Huda Ibeid", "Joseph A. Insley", "Sai Jayanthi", "Hong Jiang", "Wei Jiang", "Xiao-Yong Jin", "Jeongnim Kim", "Christopher Knight", "Kalyan Kumaran", "JaeHyuk Kwack", "Ti Leggett", "Ben Lenard", "Chris Lewis", "Nevin Liber", "Johann Lombardi", "Raymond M. Loy", "Ye Luo", "Bethany Lusch", "Nilakantan Mahadevan", "Victor A. Mateevitsi", "Gordon McPheeters", "Ryan Milner", "Vitali A. Morozov", "Servesh Muralidharan", "Tom Musta", "Mrigendra Nagar", "Vikram Narayana", "Marieme Ngom", "Anthony-Trung Nguyen", "Nathan Nichols", "Aditya Nishtala", "James C. Osborn", "Michael E. Papka", "Scott Parker", "Saumil S. Patel", "Adrian C. Pope", "Sucheta Raghunanda", "Esteban Rangel", "Paul M. Rich", "Silvio Rizzi", "Kris Rowe", "Varuni Sastry", "Adam Scovel", "Filippo Simini", "Haritha Siddabathuni Som", "Patrick Steinbrecher", "Rick Stevens", "Xinmin Tian", "Peter Upton", "Thomas Uram", "Archit K. Vasan", "Álvaro Vázquez-Mayagoitia", "Kaushik Velusamy", "Brice Videau", "Venkatram Vishwanath", "Brian Whitney", "Timothy J. Williams", "Michael Woodacre", "Sam Zeltner", "Gengbin Zheng", "Huihuo Zheng"], "title": "Aurora: Architecting Argonne's First Exascale Supercomputer for Accelerated Scientific Discovery", "comment": "40 pages, 10 figures. Submitted to J. Supercomputing", "summary": "Aurora is Argonne National Laboratory's pioneering Exascale supercomputer,\ndesigned to accelerate scientific discovery with cutting-edge architectural\ninnovations. Key new technologies include the Intel(TM) Xeon(TM) Data Center\nGPU Max Series (code-named Sapphire Rapids) with support for High Bandwidth\nMemory (HBM), alongside the Intel(TM) Data Center GPU Max Series (code-named\nPonte Vecchio) on each compute node. Aurora also integrates the Distributed\nAsynchronous Object Storage (DAOS), a novel exascale storage solution, and\nleverages Intel's oneAPI programming environment. This paper presents an\nin-depth exploration of Aurora's node architecture, the HPE Slingshot\ninterconnect, the supporting software ecosystem, and DAOS. We provide insights\ninto standard benchmark performance and applications readiness efforts via\nAurora's Early Science Program and the Exascale Computing Project."}
{"id": "2509.08215", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2509.08215", "abs": "https://arxiv.org/abs/2509.08215", "authors": ["Bingbing Zhang", "Ziyu Lin", "Yingxin Su"], "title": "Design and Implementation of Code Completion System Based on LLM and CodeBERT Hybrid Subsystem", "comment": null, "summary": "In the rapidly evolving industry of software development, coding efficiency\nand accuracy play significant roles in delivering high-quality software.\nVarious code suggestion and completion tools, such as CodeBERT from Microsoft\nand GPT-3.5 from OpenAI, have been developed using deep learning techniques and\nintegrated into IDEs to assist software engineers' development. Research has\nshown that CodeBERT has outstanding performance in code summarization and\ncapturing code semantics, while GPT-3.5 demonstrated its adept capability at\ncode generation. This study focuses on implementing a hybrid model that\nintegrates CodeBERT and GPT-3.5 models to accomplish code suggestion and\nautocomplete tasks, leveraging the context-aware effectiveness of CodeBERT and\ntaking advantage of advanced code generation abilities of GPT-3.5. Evaluated in\nthree main metrics: accuracy, quality of generated code and performance\nefficiency with various software and hardware, the hybrid model outperforms\nbenchmarks, demonstrating its feasibility and effectiveness. Robustness testing\nfurther confirms the reliability and stability of the hybrid model. This study\nnot only emphasizes the importance of deep learning in the software development\nindustry, but also reveals the potential of synthesizing complementary deep\nlearning models to fully exploit strengths of each model."}
{"id": "2509.08309", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2509.08309", "abs": "https://arxiv.org/abs/2509.08309", "authors": ["Zizhao Mo", "Jianxiong Liao", "Huanle Xu", "Zhi Zhou", "Chengzhong Xu"], "title": "Hetis: Serving LLMs in Heterogeneous GPU Clusters with Fine-grained and Dynamic Parallelism", "comment": null, "summary": "The significant resource demands in LLM serving prompts production clusters\nto fully utilize heterogeneous hardware by partitioning LLM models across a mix\nof high-end and low-end GPUs. However, existing parallelization approaches\noften struggle to scale efficiently in heterogeneous environments due to their\ncoarse-grained and static parallelization strategies.\n  In this paper, we introduce Hetis, a new LLM system tailored for\nheterogeneous GPU clusters. Hetis addresses two critical challenges: (1) memory\ninefficiency caused by the mismatch between memory capacity and computational\npower in heterogeneous devices, and (2) computational inefficiency arising from\nperformance gaps across different LLM modules. To tackle these issues, Hetis\nemploys a fine-grained and dynamic parallelism design. Specifically, it\nselectively parallelizes compute-intensive operations to reduce latency and\ndynamically distributes Attention computations to low-end GPUs at a head\ngranularity, leveraging the distinct characteristics of each module.\nAdditionally, Hetis features an online load dispatching policy that\ncontinuously optimizes serving performance by carefully balancing network\nlatency, computational load, and memory intensity. Evaluation results\ndemonstrate that Hetis can improve serving throughput by up to $2.25\\times$ and\nreduce latency by $1.49\\times$ compared to existing systems."}
{"id": "2509.08347", "categories": ["cs.DC", "B.m; C.4; J.0; K.0"], "pdf": "https://arxiv.org/pdf/2509.08347", "abs": "https://arxiv.org/abs/2509.08347", "authors": ["Andreas Herten", "Olga Pearce", "Filipe S. M. Guimarães"], "title": "An HPC Benchmark Survey and Taxonomy for Characterization", "comment": null, "summary": "The field of High-Performance Computing (HPC) is defined by providing\ncomputing devices with highest performance for a variety of demanding\nscientific users. The tight co-design relationship between HPC providers and\nusers propels the field forward, paired with technological improvements,\nachieving continuously higher performance and resource utilization. A key\ndevice for system architects, architecture researchers, and scientific users\nare benchmarks, allowing for well-defined assessment of hardware, software, and\nalgorithms. Many benchmarks exist in the community, from individual niche\nbenchmarks testing specific features, to large-scale benchmark suites for whole\nprocurements. We survey the available HPC benchmarks, summarizing them in table\nform with key details and concise categorization, also through an interactive\nwebsite. For categorization, we present a benchmark taxonomy for well-defined\ncharacterization of benchmarks."}
{"id": "2509.08182", "categories": ["cs.PL", "cs.AI", "cs.CL", "03B70, 06B23, 47H10, 68T27, 68T50", "I.2.7; I.2.8; F.4.1; F.4.3; H.5.2"], "pdf": "https://arxiv.org/pdf/2509.08182", "abs": "https://arxiv.org/abs/2509.08182", "authors": ["Faruk Alpay", "Taylan Alpay"], "title": "XML Prompting as Grammar-Constrained Interaction: Fixed-Point Semantics, Convergence Guarantees, and Human-AI Protocols", "comment": "7 pages, multiple XML prompts", "summary": "Structured prompting with XML tags has emerged as an effective way to steer\nlarge language models (LLMs) toward parseable, schema-adherent outputs in\nreal-world systems. We develop a logic-first treatment of XML prompting that\nunifies (i) grammar-constrained decoding, (ii) fixed-point semantics over\nlattices of hierarchical prompts, and (iii) convergent human-AI interaction\nloops. We formalize a complete lattice of XML trees under a refinement order\nand prove that monotone prompt-to-prompt operators admit least fixed points\n(Knaster-Tarski) that characterize steady-state protocols; under a task-aware\ncontraction metric on trees, we further prove Banach-style convergence of\niterative guidance. We instantiate these results with context-free grammars\n(CFGs) for XML schemas and show how constrained decoding guarantees\nwell-formedness while preserving task performance. A set of multi-layer\nhuman-AI interaction recipes demonstrates practical deployment patterns,\nincluding multi-pass \"plan $\\to$ verify $\\to$ revise\" routines and agentic tool\nuse. We provide mathematically complete proofs and tie our framework to recent\nadvances in grammar-aligned decoding, chain-of-verification, and programmatic\nprompting."}
{"id": "2509.08067", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2509.08067", "abs": "https://arxiv.org/abs/2509.08067", "authors": ["Rares Ifrim", "Decebal Popescu"], "title": "Analyzing the capabilities of HLS and RTL tools in the design of an FPGA Montgomery Multiplier", "comment": null, "summary": "We present the analysis of various FPGA design implementations of a\nMontgomery Modular Multiplier, compatible with the BLS12-381 elliptic curve,\nusing the Coarsely Integrated Operand Scanning approach of working with\ncomplete partial products on different digit sizes. The scope of the\nimplemented designs is to achieve a high-frequency, high-throughput solution\ncapable of computing millions of operations per second, which can provide a\nstrong foundation for different Elliptic Curve Cryptography operations such as\npoint addition and point multiplication. One important constraint for our\ndesigns was to only use FPGA DSP primitives for the arithmetic operations\nbetween digits employed in the CIOS algorithm as these primitives, when\npipelined properly, can operate at a high frequency while also relaxing the\nresource consumption of FPGA LUTs and FFs. The target of the analysis is to see\nhow different design choices and tool configurations influence the frequency,\nlatency and resource consumption when working with the latest AMD-Xilinx tools\nand Alveo FPGA boards in an RTL-HLS hybrid approach. We compare three\ncategories of designs: a Verilog naive approach where we rely on the Vivado\nsynthesizer to automatically choose when and where to use DSPs, a Verilog\noptimized approach by manually instantiating the DSP primitives ourselves and a\ncomplete High-Level Synthesis approach. We also compare the FPGA\nimplementations with an optimized software implementation of the same\nMontgomery multiplier written in Rust."}
{"id": "2509.08409", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2509.08409", "abs": "https://arxiv.org/abs/2509.08409", "authors": ["Shilong Wang", "Jianchun Liu", "Hongli Xu", "Chenxia Tang", "Qianpiao Ma", "Liusheng Huang"], "title": "Towards Communication-Efficient Decentralized Federated Graph Learning over Non-IID Data", "comment": null, "summary": "Decentralized Federated Graph Learning (DFGL) overcomes potential bottlenecks\nof the parameter server in FGL by establishing a peer-to-peer (P2P)\ncommunication network among workers. However, while extensive cross-worker\ncommunication of graph node embeddings is crucial for DFGL training, it\nintroduces substantial communication costs. Most existing works typically\nconstruct sparse network topologies or utilize graph neighbor sampling methods\nto alleviate the communication overhead in DFGL. Intuitively, integrating these\nmethods may offer promise for doubly improving communication efficiency in\nDFGL. However, our preliminary experiments indicate that directly combining\nthese methods leads to significant training performance degradation if they are\njointly optimized. To address this issue, we propose Duplex, a unified\nframework that jointly optimizes network topology and graph sampling by\naccounting for their coupled relationship, thereby significantly reducing\ncommunication cost while enhancing training performance in DFGL. To overcome\npractical DFGL challenges, eg, statistical heterogeneity and dynamic network\nenvironments, Duplex introduces a learning-driven algorithm to adaptively\ndetermine optimal network topologies and graph sampling ratios for workers.\nExperimental results demonstrate that Duplex reduces completion time by\n20.1%--48.8% and communication costs by 16.7%--37.6% to achieve target\naccuracy, while improving accuracy by 3.3%--7.9% under identical resource\nbudgets compared to baselines."}
{"id": "2509.08193", "categories": ["cs.AR", "cs.AI", "cs.ET"], "pdf": "https://arxiv.org/pdf/2509.08193", "abs": "https://arxiv.org/abs/2509.08193", "authors": ["Shvetank Prakash", "Andrew Cheng", "Olof Kindgren", "Ashiq Ahamed", "Graham Knight", "Jed Kufel", "Francisco Rodriguez", "Arya Tschand", "David Kong", "Mariam Elgamal", "Jerry Huang", "Emma Chen", "Gage Hills", "Richard Price", "Emre Ozer", "Vijay Janapa Reddi"], "title": "Lifetime-Aware Design of Item-Level Intelligence", "comment": null, "summary": "We present FlexiFlow, a lifetime-aware design framework for item-level\nintelligence (ILI) where computation is integrated directly into disposable\nproducts like food packaging and medical patches. Our framework leverages\nnatively flexible electronics which offer significantly lower costs than\nsilicon but are limited to kHz speeds and several thousands of gates. Our\ninsight is that unlike traditional computing with more uniform deployment\npatterns, ILI applications exhibit 1000X variation in operational lifetime,\nfundamentally changing optimal architectural design decisions when considering\ntrillion-item deployment scales. To enable holistic design and optimization, we\nmodel the trade-offs between embodied carbon footprint and operational carbon\nfootprint based on application-specific lifetimes. The framework includes: (1)\nFlexiBench, a workload suite targeting sustainability applications from\nspoilage detection to health monitoring; (2) FlexiBits, area-optimized RISC-V\ncores with 1/4/8-bit datapaths achieving 2.65X to 3.50X better energy\nefficiency per workload execution; and (3) a carbon-aware model that selects\noptimal architectures based on deployment characteristics. We show that\nlifetime-aware microarchitectural design can reduce carbon footprint by 1.62X,\nwhile algorithmic decisions can reduce carbon footprint by 14.5X. We validate\nour approach through the first tape-out using a PDK for flexible electronics\nwith fully open-source tools, achieving 30.9kHz operation. FlexiFlow enables\nexploration of computing at the Extreme Edge where conventional design\nmethodologies must be reevaluated to account for new constraints and\nconsiderations."}
{"id": "2509.08608", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2509.08608", "abs": "https://arxiv.org/abs/2509.08608", "authors": ["Yichao Zhang", "Marco Bertuletti", "Sergio Mazzola", "Samuel Riedel", "Luca Benini"], "title": "A 410GFLOP/s, 64 RISC-V Cores, 204.8GBps Shared-Memory Cluster in 12nm FinFET with Systolic Execution Support for Efficient B5G/6G AI-Enhanced O-RAN", "comment": null, "summary": "We present HeartStream, a 64-RV-core shared-L1-memory cluster (410 GFLOP/s\npeak performance and 204.8 GBps L1 bandwidth) for energy-efficient AI-enhanced\nO-RAN. The cores and cluster architecture are customized for baseband\nprocessing, supporting complex (16-bit real&imaginary) instructions:\nmultiply&accumulate, division&square-root, SIMD instructions, and\nhardware-managed systolic queues, improving up to 1.89x the energy efficiency\nof key baseband kernels. At 800MHz@0.8V, HeartStream delivers up to 243GFLOP/s\non complex-valued wireless workloads. Furthermore, the cores also support\nefficient AI processing on received data at up to 72 GOP/s. HeartStream is\nfully compatible with base station power and processing latency limits: it\nachieves leading-edge software-defined PUSCH efficiency (49.6GFLOP/s/W) and\nconsumes just 0.68W (645MHz@0.65V), within the 4 ms end-to-end constraint for\nB5G/6G uplink."}
{"id": "2509.08405", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2509.08405", "abs": "https://arxiv.org/abs/2509.08405", "authors": ["Chengzhen Meng", "Xiuzhuang Chen", "Hongjun Dai"], "title": "FASE: FPGA-Assisted Syscall Emulation for Rapid End-to-End Processor Performance Validation", "comment": "14 pages, 19 figures, to be submitted to IEEE TCAD", "summary": "The rapid advancement of AI workloads and domain-specific architectures has\nled to increasingly diverse processor microarchitectures, whose design\nexploration requires fast and accurate performance validation. However,\ntraditional workflows defer validation process until RTL design and SoC\nintegration are complete, significantly prolonging development and iteration\ncycle.\n  In this work, we present FASE framework, FPGA-Assisted Syscall Emulation, the\nfirst work for adapt syscall emulation on FPGA platforms, enabling complex\nmulti-thread benchmarks to directly run on the processor design without\nintegrating SoC or target OS for early-stage performance validation. FASE\nintroduces three key innovations to address three critical challenges for\nadapting FPGA-based syscall emulation: (1) only a minimal CPU interface is\nexposed, with other hardware components untouched, addressing the lack of a\nunified hardware interface in FPGA systems; (2) a Host-Target Protocol (HTP) is\nproposed to minimize cross-device data traffic, mitigating the low-bandwidth\nand high-latency communication between FPGA and host; and (3) a host-side\nruntime is proposed to remotely handle Linux-style system calls, addressing the\nchallenge of cross-device syscall delegation.\n  Experiments ware conducted on Xilinx FPGA with open-sourced RISC-V SMP\nprocessor Rocket. With single-thread CoreMark, FASE introduces less than 1%\nperformance error and achieves over 2000x higher efficiency compared to Proxy\nKernel due to FPGA acceleration. With complex OpenMP benchmarks, FASE\ndemonstrates over 96% performance validation accuracy for most single-thread\nworkloads and over 91.5% for most multi-thread workloads compared to full SoC\nvalidation, significantly reducing development complexity and time-to-feedback.\nAll components of FASE framework are released as open-source."}
{"id": "2509.08770", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2509.08770", "abs": "https://arxiv.org/abs/2509.08770", "authors": ["Muhammad Ali Jamshed", "Muhammad Ahmed Mohsin", "Hongliang Zhang", "Bushra Haq", "Aryan Kaushik", "Boya Di", "Weiwei Jiang"], "title": "Reconfigurable Holographic Surfaces and Near Field Communication for Non-Terrestrial Networks: Potential and Challenges", "comment": "SUBMITTED TO IEEE WIRELESS COMMUNICATION MAGAZINE", "summary": "To overcome the challenges of ultra-low latency, ubiquitous coverage, and\nsoaring data rates, this article presents a combined use of Near Field\nCommunication (NFC) and Reconfigurable Holographic Surfaces (RHS) for\nNon-Terrestrial Networks (NTN). A system architecture has been presented, which\nshows that the integration of RHS with NTN platforms such as satellites, High\nAltitute Platform Stations (HAPS), and Uncrewed Aerial Vehicles (UAV) can\nachieve precise beamforming and intelligent wavefront control in near-field\nregions, enhancing Energy Efficiency (EE), spectral utilization, and spatial\nresolution. Moreover, key applications, challenges, and future directions have\nbeen identified to fully adopt this integration. In addition, a use case\nanalysis has been presented to improve the EE of the system in a public safety\nuse case scenario, further strengthening the UAV-RHS fusion."}
{"id": "2509.08416", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2509.08416", "abs": "https://arxiv.org/abs/2509.08416", "authors": ["Yan Tan", "Xiangchen Meng", "Zijun Jiang", "Yangdi Lyu"], "title": "AutoVeriFix: Automatically Correcting Errors and Enhancing Functional Correctness in LLM-Generated Verilog Code", "comment": null, "summary": "Large language models (LLMs) have demonstrated impressive capabilities in\ngenerating software code for high-level programming languages such as Python\nand C++. However, their application to hardware description languages, such as\nVerilog, is challenging due to the scarcity of high-quality training data.\nCurrent approaches to Verilog code generation using LLMs often focus on\nsyntactic correctness, resulting in code with functional errors. To address\nthese challenges, we present AutoVeriFix, a novel Python-assisted two-stage\nframework designed to enhance the functional correctness of LLM-generated\nVerilog code. In the first stage, LLMs are employed to generate high-level\nPython reference models that define the intended circuit behavior. In the\nsecond stage, these Python models facilitate the creation of automated tests\nthat guide the generation of Verilog RTL implementations. Simulation\ndiscrepancies between the reference model and the Verilog code are iteratively\nused to identify and correct errors, thereby improving the functional accuracy\nand reliability of the LLM-generated Verilog code. Experimental results\ndemonstrate that our approach significantly outperforms existing\nstate-of-the-art methods in improving the functional correctness of generated\nVerilog code."}
{"id": "2509.08542", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2509.08542", "abs": "https://arxiv.org/abs/2509.08542", "authors": ["Wenlun Zhang", "Xinyu Li", "Shimpei Ando", "Kentaro Yoshioka"], "title": "BitROM: Weight Reload-Free CiROM Architecture Towards Billion-Parameter 1.58-bit LLM Inference", "comment": "Accepted to ASP-DAC 2026", "summary": "Compute-in-Read-Only-Memory (CiROM) accelerators offer outstanding energy\nefficiency for CNNs by eliminating runtime weight updates. However, their\nscalability to Large Language Models (LLMs) is fundamentally constrained by\ntheir vast parameter sizes. Notably, LLaMA-7B - the smallest model in LLaMA\nseries - demands more than 1,000 cm2 of silicon area even in advanced CMOS\nnodes. This paper presents BitROM, the first CiROM-based accelerator that\novercomes this limitation through co-design with BitNet's 1.58-bit quantization\nmodel, enabling practical and efficient LLM inference at the edge. BitROM\nintroduces three key innovations: 1) a novel Bidirectional ROM Array that\nstores two ternary weights per transistor; 2) a Tri-Mode Local Accumulator\noptimized for ternary-weight computations; and 3) an integrated Decode-Refresh\n(DR) eDRAM that supports on-die KV-cache management, significantly reducing\nexternal memory access during decoding. In addition, BitROM integrates\nLoRA-based adapters to enable efficient transfer learning across various\ndownstream tasks. Evaluated in 65nm CMOS, BitROM achieves 20.8 TOPS/W and a bit\ndensity of 4,967 kB/mm2 - offering a 10x improvement in area efficiency over\nprior digital CiROM designs. Moreover, the DR eDRAM contributes to a 43.6%\nreduction in external DRAM access, further enhancing deployment efficiency for\nLLMs in edge applications."}
{"id": "2509.08207", "categories": ["cs.DC", "cs.AR", "cs.CE", "cs.PF", "C.0; C.4; C.5.1; B.8.0; D.1.3"], "pdf": "https://arxiv.org/pdf/2509.08207", "abs": "https://arxiv.org/abs/2509.08207", "authors": ["Benjamin S. Allen", "James Anchell", "Victor Anisimov", "Thomas Applencourt", "Abhishek Bagusetty", "Ramesh Balakrishnan", "Riccardo Balin", "Solomon Bekele", "Colleen Bertoni", "Cyrus Blackworth", "Renzo Bustamante", "Kevin Canada", "John Carrier", "Christopher Chan-nui", "Lance C. Cheney", "Taylor Childers", "Paul Coffman", "Susan Coghlan", "Michael D'Mello", "Murali Emani", "Kyle G. Felker", "Sam Foreman", "Olivier Franza", "Longfei Gao", "Marta García", "María Garzarán", "Balazs Gerofi", "Yasaman Ghadar", "Neha Gupta", "Kevin Harms", "Väinö Hatanpää", "Brian Holland", "Carissa Holohan", "Brian Homerding", "Khalid Hossain", "Louise Huot", "Huda Ibeid", "Joseph A. Insley", "Sai Jayanthi", "Hong Jiang", "Wei Jiang", "Xiao-Yong Jin", "Jeongnim Kim", "Christopher Knight", "Kalyan Kumaran", "JaeHyuk Kwack", "Ti Leggett", "Ben Lenard", "Chris Lewis", "Nevin Liber", "Johann Lombardi", "Raymond M. Loy", "Ye Luo", "Bethany Lusch", "Nilakantan Mahadevan", "Victor A. Mateevitsi", "Gordon McPheeters", "Ryan Milner", "Vitali A. Morozov", "Servesh Muralidharan", "Tom Musta", "Mrigendra Nagar", "Vikram Narayana", "Marieme Ngom", "Anthony-Trung Nguyen", "Nathan Nichols", "Aditya Nishtala", "James C. Osborn", "Michael E. Papka", "Scott Parker", "Saumil S. Patel", "Adrian C. Pope", "Sucheta Raghunanda", "Esteban Rangel", "Paul M. Rich", "Silvio Rizzi", "Kris Rowe", "Varuni Sastry", "Adam Scovel", "Filippo Simini", "Haritha Siddabathuni Som", "Patrick Steinbrecher", "Rick Stevens", "Xinmin Tian", "Peter Upton", "Thomas Uram", "Archit K. Vasan", "Álvaro Vázquez-Mayagoitia", "Kaushik Velusamy", "Brice Videau", "Venkatram Vishwanath", "Brian Whitney", "Timothy J. Williams", "Michael Woodacre", "Sam Zeltner", "Gengbin Zheng", "Huihuo Zheng"], "title": "Aurora: Architecting Argonne's First Exascale Supercomputer for Accelerated Scientific Discovery", "comment": "40 pages, 10 figures. Submitted to J. Supercomputing", "summary": "Aurora is Argonne National Laboratory's pioneering Exascale supercomputer,\ndesigned to accelerate scientific discovery with cutting-edge architectural\ninnovations. Key new technologies include the Intel(TM) Xeon(TM) Data Center\nGPU Max Series (code-named Sapphire Rapids) with support for High Bandwidth\nMemory (HBM), alongside the Intel(TM) Data Center GPU Max Series (code-named\nPonte Vecchio) on each compute node. Aurora also integrates the Distributed\nAsynchronous Object Storage (DAOS), a novel exascale storage solution, and\nleverages Intel's oneAPI programming environment. This paper presents an\nin-depth exploration of Aurora's node architecture, the HPE Slingshot\ninterconnect, the supporting software ecosystem, and DAOS. We provide insights\ninto standard benchmark performance and applications readiness efforts via\nAurora's Early Science Program and the Exascale Computing Project."}
