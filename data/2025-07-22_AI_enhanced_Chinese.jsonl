{"id": "2507.14403", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2507.14403", "abs": "https://arxiv.org/abs/2507.14403", "authors": ["Sarunas Kalade", "Graham Schelle"], "title": "NPUEval: Optimizing NPU Kernels with LLMs and Open Source Compilers", "comment": null, "summary": "Neural processing units (NPUs) are gaining prominence in power-sensitive\ndevices like client devices, with AI PCs being defined by their inclusion of\nthese specialized processors. Running AI workloads efficiently on these devices\nrequires libraries of optimized kernels. Creating efficient kernels demands\nexpertise in domain-specific C++ with vector intrinsics and in-depth knowledge\nof the target architecture. Unlike GPU programming, which has had years to\nmature, NPU programming is new, with smaller and more fragmented developer\ncommunities across hardware platforms. This fragmentation poses a challenge\nwhen utilizing LLMs to assist in writing NPU kernels, as domain-specific\noptimized code examples are underrepresented in LLM pre-training data.\n  In this paper we introduce NPUEval -- a benchmark for writing and evaluating\nNPU kernels, consisting of 102 common operators for machine learning workloads.\nWe evaluate LLM generated code on actual hardware based on both functional\ncorrectness and vectorization efficiency using open source compiler tools\ntargeting the AMD NPU. We evaluate a range of state-of-the-art LLMs with a mix\nof proprietary and open-weight models. Latest reasoning models like DeepSeek\nR1, show promising results achieving out-of-the-box 50%+ vectorization on\nselect kernels. However, the average score across the entire dataset remains\nroughly 10% even with compiler feedback and vectorized kernel examples --\nshowing that this is a challenging dataset even for frontier models. The\ndataset and evaluation code will be released with a permissive open source\nlicense, providing an essential benchmark for advancing research in code\ngeneration and NPU kernel optimization.", "AI": {"tldr": "NPUEval\u662f\u4e00\u4e2a\u7528\u4e8e\u8bc4\u4f30NPU\u5185\u6838\u7f16\u5199\u7684\u57fa\u51c6\u6d4b\u8bd5\uff0c\u5305\u542b102\u4e2a\u5e38\u89c1\u673a\u5668\u5b66\u4e60\u7b97\u5b50\uff0c\u8bc4\u4f30LLM\u751f\u6210\u4ee3\u7801\u7684\u529f\u80fd\u6b63\u786e\u6027\u548c\u5411\u91cf\u5316\u6548\u7387\u3002", "motivation": "NPU\u7f16\u7a0b\u8f83\u65b0\u4e14\u793e\u533a\u5206\u6563\uff0cLLM\u9884\u8bad\u7ec3\u6570\u636e\u4e2d\u7f3a\u4e4f\u9886\u57df\u4f18\u5316\u4ee3\u7801\u793a\u4f8b\uff0c\u56e0\u6b64\u9700\u8981\u57fa\u51c6\u6d4b\u8bd5\u6765\u63a8\u52a8\u7814\u7a76\u3002", "method": "\u4f7f\u7528\u5f00\u6e90\u7f16\u8bd1\u5668\u5de5\u5177\u5728AMD NPU\u4e0a\u8bc4\u4f30LLM\u751f\u6210\u4ee3\u7801\u7684\u529f\u80fd\u548c\u5411\u91cf\u5316\u6548\u7387\uff0c\u6d4b\u8bd5\u591a\u79cd\u524d\u6cbfLLM\u6a21\u578b\u3002", "result": "\u524d\u6cbf\u6a21\u578b\u5982DeepSeek R1\u5728\u90e8\u5206\u5185\u6838\u4e0a\u5b9e\u73b050%+\u5411\u91cf\u5316\uff0c\u4f46\u6574\u4f53\u5e73\u5747\u5f97\u5206\u4ec5\u7ea610%\uff0c\u8868\u660e\u4efb\u52a1\u5177\u6709\u6311\u6218\u6027\u3002", "conclusion": "NPUEval\u4e3a\u4ee3\u7801\u751f\u6210\u548cNPU\u5185\u6838\u4f18\u5316\u7814\u7a76\u63d0\u4f9b\u4e86\u91cd\u8981\u57fa\u51c6\uff0c\u6570\u636e\u96c6\u548c\u8bc4\u4f30\u4ee3\u7801\u5c06\u5f00\u6e90\u3002"}}
{"id": "2507.14471", "categories": ["cs.PL", "cs.DC"], "pdf": "https://arxiv.org/pdf/2507.14471", "abs": "https://arxiv.org/abs/2507.14471", "authors": ["Logan Kenwright", "Partha Roop", "Nathan Allen", "C\u0103lin Ca\u015fcaval", "Avinash Malik"], "title": "Timetide: A programming model for logically synchronous distributed systems", "comment": "25 Pages, 21 Figures", "summary": "Massive strides in deterministic models have been made using synchronous\nlanguages. They are mainly focused on centralised applications, as the\ntraditional approach is to compile away the concurrency. Time triggered\nlanguages such as Giotto and Lingua Franca are suitable for distribution albeit\nthat they rely on expensive physical clock synchronisation, which is both\nexpensive and may suffer from scalability. Hence, deterministic programming of\ndistributed systems remains challenging. We address the challenges of\ndeterministic distribution by developing a novel multiclock semantics of\nsynchronous programs. The developed semantics is amenable to seamless\ndistribution. Moreover, our programming model, Timetide, alleviates the need\nfor physical clock synchronisation by building on the recently proposed logical\nsynchrony model for distributed systems. We discuss the important aspects of\ndistributing computation, such as network communication delays, and explore the\nformal verification of Timetide programs. To the best of our knowledge,\nTimetide is the first multiclock synchronous language that is both amenable to\ndistribution and formal verification without the need for physical clock\nsynchronisation or clock gating.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u540d\u4e3aTimetide\u7684\u591a\u65f6\u949f\u540c\u6b65\u8bed\u8a00\uff0c\u89e3\u51b3\u4e86\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u786e\u5b9a\u6027\u7f16\u7a0b\u7684\u6311\u6218\uff0c\u65e0\u9700\u7269\u7406\u65f6\u949f\u540c\u6b65\u3002", "motivation": "\u4f20\u7edf\u540c\u6b65\u8bed\u8a00\u4f9d\u8d56\u6602\u8d35\u7684\u7269\u7406\u65f6\u949f\u540c\u6b65\uff0c\u96be\u4ee5\u6269\u5c55\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u786e\u5b9a\u6027\u7f16\u7a0b\u4ecd\u5177\u6311\u6218\u6027\u3002", "method": "\u5f00\u53d1\u4e86\u4e00\u79cd\u591a\u65f6\u949f\u8bed\u4e49\u7684\u540c\u6b65\u7a0b\u5e8f\u6a21\u578b\uff0c\u57fa\u4e8e\u903b\u8f91\u540c\u6b65\u6a21\u578b\uff0c\u907f\u514d\u4e86\u7269\u7406\u65f6\u949f\u540c\u6b65\u9700\u6c42\u3002", "result": "Timetide\u662f\u9996\u4e2a\u65e2\u9002\u5408\u5206\u5e03\u5f0f\u53c8\u652f\u6301\u5f62\u5f0f\u5316\u9a8c\u8bc1\u7684\u591a\u65f6\u949f\u540c\u6b65\u8bed\u8a00\u3002", "conclusion": "Timetide\u4e3a\u5206\u5e03\u5f0f\u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e00\u79cd\u65e0\u9700\u7269\u7406\u65f6\u949f\u540c\u6b65\u7684\u786e\u5b9a\u6027\u7f16\u7a0b\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2507.15007", "categories": ["cs.PL", "cs.CL"], "pdf": "https://arxiv.org/pdf/2507.15007", "abs": "https://arxiv.org/abs/2507.15007", "authors": ["Sayed Mahbub Hasan Amiri", "Md. Mainul Islam", "Mohammad Shakhawat Hossen", "Sayed Majhab Hasan Amiri", "Mohammad Shawkat Ali Mamun", "Sk. Humaun Kabir", "Naznin Akter"], "title": "Hear Your Code Fail, Voice-Assisted Debugging for Python", "comment": "35 pages, 20 figures", "summary": "This research introduces an innovative voice-assisted debugging plugin for\nPython that transforms silent runtime errors into actionable audible\ndiagnostics. By implementing a global exception hook architecture with pyttsx3\ntext-to-speech conversion and Tkinter-based GUI visualization, the solution\ndelivers multimodal error feedback through parallel auditory and visual\nchannels. Empirical evaluation demonstrates 37% reduced cognitive load (p<0.01,\nn=50) compared to traditional stack-trace debugging, while enabling 78% faster\nerror identification through vocalized exception classification and\ncontextualization. The system achieves sub-1.2 second voice latency with under\n18% CPU overhead during exception handling, vocalizing error types and\nconsequences while displaying interactive tracebacks with documentation deep\nlinks. Criteria validate compatibility across Python 3.7+ environments on\nWindows, macOS, and Linux platforms. Needing only two lines of integration\ncode, the plugin significantly boosts availability for aesthetically impaired\ndesigners and supports multitasking workflows through hands-free error medical\ndiagnosis. Educational applications show particular promise, with pilot studies\nindicating 45% faster debugging skill acquisition among novice programmers.\nFuture development will incorporate GPT-based repair suggestions and real-time\nmultilingual translation to further advance auditory debugging paradigms. The\nsolution represents a fundamental shift toward human-centric error diagnostics,\nbridging critical gaps in programming accessibility while establishing new\nstandards for cognitive efficiency in software development workflows.", "AI": {"tldr": "\u8be5\u7814\u7a76\u63d0\u51fa\u4e86\u4e00\u79cd\u521b\u65b0\u7684Python\u8bed\u97f3\u8f85\u52a9\u8c03\u8bd5\u63d2\u4ef6\uff0c\u901a\u8fc7\u542c\u89c9\u548c\u89c6\u89c9\u591a\u6a21\u6001\u53cd\u9988\u663e\u8457\u964d\u4f4e\u8ba4\u77e5\u8d1f\u8377\u5e76\u52a0\u5feb\u9519\u8bef\u8bc6\u522b\u3002", "motivation": "\u65e8\u5728\u89e3\u51b3\u4f20\u7edf\u8c03\u8bd5\u65b9\u6cd5\u5bf9\u89c6\u89c9\u7684\u4f9d\u8d56\uff0c\u63d0\u5347\u7f16\u7a0b\u53ef\u8bbf\u95ee\u6027\uff0c\u7279\u522b\u662f\u5bf9\u89c6\u89c9\u969c\u788d\u8005\u548c\u65b0\u624b\u7a0b\u5e8f\u5458\u3002", "method": "\u91c7\u7528\u5168\u5c40\u5f02\u5e38\u94a9\u5b50\u67b6\u6784\uff0c\u7ed3\u5408pyttsx3\u6587\u672c\u8f6c\u8bed\u97f3\u548cTkinter GUI\u53ef\u89c6\u5316\uff0c\u63d0\u4f9b\u5e76\u884c\u542c\u89c9\u548c\u89c6\u89c9\u9519\u8bef\u53cd\u9988\u3002", "result": "\u5b9e\u9a8c\u663e\u793a\u8ba4\u77e5\u8d1f\u8377\u964d\u4f4e37%\uff0c\u9519\u8bef\u8bc6\u522b\u901f\u5ea6\u63d0\u534778%\uff0c\u7cfb\u7edf\u5ef6\u8fdf\u4f4e\u4e8e1.2\u79d2\uff0cCPU\u5f00\u9500\u5c0f\u4e8e18%\u3002", "conclusion": "\u8be5\u63d2\u4ef6\u663e\u8457\u63d0\u5347\u4e86\u8c03\u8bd5\u6548\u7387\u548c\u53ef\u8bbf\u95ee\u6027\uff0c\u672a\u6765\u5c06\u6574\u5408GPT\u4fee\u590d\u5efa\u8bae\u548c\u591a\u8bed\u8a00\u7ffb\u8bd1\uff0c\u63a8\u52a8\u542c\u89c9\u8c03\u8bd5\u8303\u5f0f\u53d1\u5c55\u3002"}}
{"id": "2507.15017", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2507.15017", "abs": "https://arxiv.org/abs/2507.15017", "authors": ["Xuran Cai", "Liqian Chen", "Hongfei Fu"], "title": "Invariant Generation for Floating-Point Programs via Constraint Solving", "comment": null, "summary": "In numeric-intensive computations, it is well known that the execution of\nfloating-point programs is imprecise as floating point arithmetics (e.g.,\naddition, subtraction, multiplication, division, etc.) incurs rounding errors.\nAlbeit the rounding error is small for every single floating-point operation,\nthe aggregation of such error in multiple operations may be dramatic and cause\ncatastrophic program failures. Therefore, to ensure the correctness of\nfloating-point programs, the effect of floating point error needs to be\ncarefully taken into account. In this work, we consider the invariant\ngeneration for floating point programs, whose aim is to generate tight\ninvariants under the perturbation of floating point errors. Our main\ncontribution is a theoretical framework on how to apply constraint solving\nmethods to address the invariant generation problem. In our framework, we\npropose a novel combination between the first-order differential\ncharacterization by FPTaylor (TOPLAS 2018) and constraint solving methods,\naiming to reduce the computational burden of constraint solving. Moreover, we\ndevise two polynomial invariant generation algorithms to instantiate the\nframework. The first algorithm is applicable to a wide range of floating-point\noperations but requires an initial (coarse) invariant as external input, while\nthe second does not require an initial invariant but is limited to polynomial\nprograms. Furthermore, we show how conditional branches, a difficult issue in\nfloating-point analysis, can be handled in our framework. Experimental results\nshow that our algorithms outperform SOTA approaches in both the time efficiency\nand the precision of the generated invariants over a variety of benchmarks.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u7406\u8bba\u6846\u67b6\uff0c\u7ed3\u5408\u7ea6\u675f\u6c42\u89e3\u65b9\u6cd5\u548c\u5fae\u5206\u7279\u6027\uff0c\u7528\u4e8e\u751f\u6210\u6d6e\u70b9\u7a0b\u5e8f\u7684\u7d27\u81f4\u4e0d\u53d8\u91cf\uff0c\u5e76\u8bbe\u8ba1\u4e86\u4e24\u79cd\u591a\u9879\u5f0f\u4e0d\u53d8\u91cf\u751f\u6210\u7b97\u6cd5\u3002\u5b9e\u9a8c\u8868\u660e\uff0c\u8be5\u65b9\u6cd5\u5728\u65f6\u95f4\u548c\u7cbe\u5ea6\u4e0a\u4f18\u4e8e\u73b0\u6709\u6280\u672f\u3002", "motivation": "\u6d6e\u70b9\u8fd0\u7b97\u4e2d\u7684\u820d\u5165\u8bef\u5dee\u7d2f\u79ef\u53ef\u80fd\u5bfc\u81f4\u7a0b\u5e8f\u5931\u8d25\uff0c\u56e0\u6b64\u9700\u8981\u751f\u6210\u8003\u8651\u6d6e\u70b9\u8bef\u5dee\u7684\u7d27\u81f4\u4e0d\u53d8\u91cf\u4ee5\u786e\u4fdd\u7a0b\u5e8f\u6b63\u786e\u6027\u3002", "method": "\u7ed3\u5408FPTaylor\u7684\u4e00\u9636\u5fae\u5206\u7279\u6027\u548c\u7ea6\u675f\u6c42\u89e3\u65b9\u6cd5\uff0c\u63d0\u51fa\u4e24\u79cd\u591a\u9879\u5f0f\u4e0d\u53d8\u91cf\u751f\u6210\u7b97\u6cd5\uff1a\u4e00\u79cd\u9700\u8981\u521d\u59cb\u4e0d\u53d8\u91cf\u8f93\u5165\uff0c\u53e6\u4e00\u79cd\u9002\u7528\u4e8e\u591a\u9879\u5f0f\u7a0b\u5e8f\u3002", "result": "\u5b9e\u9a8c\u7ed3\u679c\u663e\u793a\uff0c\u8be5\u65b9\u6cd5\u5728\u591a\u79cd\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0c\u751f\u6210\u7684\u4e0d\u53d8\u91cf\u5728\u65f6\u95f4\u548c\u7cbe\u5ea6\u4e0a\u4f18\u4e8e\u73b0\u6709\u6280\u672f\u3002", "conclusion": "\u63d0\u51fa\u7684\u6846\u67b6\u548c\u7b97\u6cd5\u6709\u6548\u89e3\u51b3\u4e86\u6d6e\u70b9\u7a0b\u5e8f\u4e0d\u53d8\u91cf\u751f\u6210\u95ee\u9898\uff0c\u5c24\u5176\u5728\u5904\u7406\u6761\u4ef6\u5206\u652f\u65f6\u8868\u73b0\u4f18\u5f02\u3002"}}
{"id": "2507.14392", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2507.14392", "abs": "https://arxiv.org/abs/2507.14392", "authors": ["Lang Xu", "Kaushik Kandadi Suresh", "Quentin Anthony", "Nawras Alnaasan", "Dhabaleswar K. Panda"], "title": "Characterizing Communication Patterns in Distributed Large Language Model Inference", "comment": "To be presented at Hot Interconnects 2025", "summary": "Large Language Models (LLMs) built on transformer architectures have\ntransformed natural language processing, achieving remarkable performance\nacross diverse applications. While distributed inference frameworks enable\npractical deployment of these models, inter-GPU communication creates\nsignificant performance constraints that limit service quality in real-world\nsystems. This paper investigates communication dynamics in distributed LLM\nserving-analyzing how various parallelization approaches coordinate data\nexchange between GPU workers during inference. We study dense transformer-based\nmodels as representative examples of contemporary architectures widely used in\noperational deployments. Our work combines detailed profiling measurements with\npredictive analytical models to characterize communication behavior across\ndifferent parallelization configurations. Results show that tensor parallelism\nincurs substantial network overhead but delivers superior response times for\nbrief sequences, pipeline parallelism minimizes data transfer requirements\nwhile increasing total latency, and combined approaches demand careful tuning\nto achieve balanced performance. These insights offer practical recommendations\nfor selecting appropriate parallelization schemes in production LLM services\nand identify key opportunities for optimizing inference frameworks and\ncommunication infrastructure.", "AI": {"tldr": "\u8bba\u6587\u7814\u7a76\u4e86\u5206\u5e03\u5f0fLLM\u63a8\u7406\u4e2d\u7684\u901a\u4fe1\u52a8\u6001\uff0c\u5206\u6790\u4e86\u4e0d\u540c\u5e76\u884c\u5316\u65b9\u6cd5\u5728GPU\u95f4\u7684\u6570\u636e\u4ea4\u6362\uff0c\u63d0\u51fa\u4e86\u4f18\u5316\u5efa\u8bae\u3002", "motivation": "\u5206\u5e03\u5f0fLLM\u63a8\u7406\u4e2d\uff0cGPU\u95f4\u901a\u4fe1\u6210\u4e3a\u6027\u80fd\u74f6\u9888\uff0c\u5f71\u54cd\u5b9e\u9645\u670d\u52a1\u8d28\u91cf\u3002", "method": "\u7ed3\u5408\u8be6\u7ec6\u7684\u5206\u6790\u6d4b\u91cf\u548c\u9884\u6d4b\u6a21\u578b\uff0c\u7814\u7a76\u4e0d\u540c\u5e76\u884c\u5316\u914d\u7f6e\u4e0b\u7684\u901a\u4fe1\u884c\u4e3a\u3002", "result": "\u5f20\u91cf\u5e76\u884c\u5e26\u6765\u9ad8\u7f51\u7edc\u5f00\u9500\u4f46\u54cd\u5e94\u65f6\u95f4\u77ed\uff0c\u6d41\u6c34\u7ebf\u5e76\u884c\u51cf\u5c11\u6570\u636e\u4f20\u8f93\u4f46\u589e\u52a0\u5ef6\u8fdf\uff0c\u7ec4\u5408\u65b9\u6cd5\u9700\u7cbe\u7ec6\u8c03\u4f18\u3002", "conclusion": "\u7814\u7a76\u4e3a\u751f\u4ea7\u73af\u5883\u4e2d\u7684\u5e76\u884c\u5316\u65b9\u6848\u9009\u62e9\u63d0\u4f9b\u4e86\u5b9e\u7528\u5efa\u8bae\uff0c\u5e76\u6307\u51fa\u4e86\u4f18\u5316\u65b9\u5411\u3002"}}
{"id": "2507.14139", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2507.14139", "abs": "https://arxiv.org/abs/2507.14139", "authors": ["Peipei Wang", "Wu Guan", "Liping Liang", "Zhijun Wang", "Hanqing Luo", "Zhibin Zhang"], "title": "SpeedLLM: An FPGA Co-design of Large Language Model Inference Accelerator", "comment": null, "summary": "This paper introduces SpeedLLM, a neural network accelerator designed on the\nXilinx Alevo U280 platform and optimized for the Tinyllama framework to enhance\nedge computing performance. Key innovations include data stream parallelism, a\nmemory reuse strategy, and Llama2 operator fusion, which collectively reduce\nlatency and energy consumption. SpeedLLM's data pipeline architecture optimizes\nthe read-compute-write cycle, while the memory strategy minimizes FPGA resource\ndemands. The operator fusion boosts computational density and throughput.\nResults show SpeedLLM outperforms traditional Tinyllama implementations,\nachieving up to 4.8* faster performance and 1.18* lower energy consumption,\noffering improvements in edge devices.", "AI": {"tldr": "SpeedLLM\u662f\u4e00\u79cd\u57fa\u4e8eXilinx Alevo U280\u5e73\u53f0\u7684\u795e\u7ecf\u7f51\u7edc\u52a0\u901f\u5668\uff0c\u4e13\u4e3aTinyllama\u6846\u67b6\u4f18\u5316\uff0c\u63d0\u5347\u8fb9\u7f18\u8ba1\u7b97\u6027\u80fd\u3002", "motivation": "\u901a\u8fc7\u4f18\u5316\u8fb9\u7f18\u8ba1\u7b97\u6027\u80fd\uff0c\u89e3\u51b3\u4f20\u7edfTinyllama\u5b9e\u73b0\u4e2d\u7684\u5ef6\u8fdf\u548c\u80fd\u8017\u95ee\u9898\u3002", "method": "\u91c7\u7528\u6570\u636e\u6d41\u5e76\u884c\u3001\u5185\u5b58\u91cd\u7528\u7b56\u7565\u548cLlama2\u7b97\u5b50\u878d\u5408\uff0c\u4f18\u5316\u6570\u636e\u7ba1\u9053\u67b6\u6784\u548c\u5185\u5b58\u7b56\u7565\u3002", "result": "SpeedLLM\u6bd4\u4f20\u7edfTinyllama\u5b9e\u73b0\u5feb4.8\u500d\uff0c\u80fd\u8017\u964d\u4f4e1.18\u500d\u3002", "conclusion": "SpeedLLM\u663e\u8457\u63d0\u5347\u4e86\u8fb9\u7f18\u8bbe\u5907\u7684\u6027\u80fd\u548c\u80fd\u6548\u3002"}}
{"id": "2507.15277", "categories": ["cs.PL", "D.3.4"], "pdf": "https://arxiv.org/pdf/2507.15277", "abs": "https://arxiv.org/abs/2507.15277", "authors": ["Robert Hochgraf", "Sreepathi Pai"], "title": "A Few Fit Most: Improving Performance Portability of SGEMM on GPUs using Multi-Versioning", "comment": "13 pages, 8 figures", "summary": "Hand-optimizing linear algebra kernels for different GPU devices and\napplications is complex and labor-intensive. Instead, many developers use\nautomatic performance tuning (autotuning) to achieve high performance on a\nvariety of devices. However, autotuning \"overfits\", and must be redone if any\npart of the environment changes, such as if the device or input characteristics\nchange.\n  In most non-trivial cases, a single compute kernel cannot maintain\nnear-optimal performance across all environments. Changing the kernel to\nspecialize it to the current execution environment is possible, but on GPUs,\nruntime tuning and compilation can be expensive.\n  In this work, we use multi-versioning -- producing several variants of the\nsame code -- as a way to generate performance portable code. We describe a\nframework called portability tuning that can automatically generate\nmulti-versioned code whose performance is portable, requiring no retuning.\n  We evaluate our framework on a dataset of execution times for GEMM kernels\nfrom the CLBlast linear algebra library. We find our portability tuning\ntechniques outperform CLBlast's default kernels -- often approaching within 10%\nof the theoretical maximum performance -- despite CLBlast using autotuning\ntechniques. Further, we find that our generated programs generalize well to new\nand unseen devices, matching the performance of autotuning without ever\nportability tuning for those devices.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u591a\u7248\u672c\u5316\u6846\u67b6\uff08portability tuning\uff09\uff0c\u7528\u4e8e\u751f\u6210\u6027\u80fd\u53ef\u79fb\u690d\u7684\u4ee3\u7801\uff0c\u907f\u514d\u4e86\u4f20\u7edf\u81ea\u52a8\u8c03\u4f18\uff08autotuning\uff09\u56e0\u73af\u5883\u53d8\u5316\u800c\u9700\u8981\u91cd\u65b0\u8c03\u4f18\u7684\u95ee\u9898\u3002", "motivation": "\u624b\u52a8\u4f18\u5316\u7ebf\u6027\u4ee3\u6570\u6838\u5728\u4e0d\u540cGPU\u8bbe\u5907\u548c\u5e94\u7528\u4e0a\u590d\u6742\u4e14\u8017\u65f6\uff0c\u800c\u81ea\u52a8\u8c03\u4f18\u5bb9\u6613\u8fc7\u62df\u5408\u4e14\u9700\u91cd\u590d\u8c03\u4f18\u3002", "method": "\u91c7\u7528\u591a\u7248\u672c\u5316\u6280\u672f\uff0c\u751f\u6210\u591a\u4e2a\u4ee3\u7801\u53d8\u4f53\uff0c\u5e76\u901a\u8fc7\u6846\u67b6\u81ea\u52a8\u9009\u62e9\u6700\u4f18\u7248\u672c\uff0c\u5b9e\u73b0\u6027\u80fd\u53ef\u79fb\u690d\u3002", "result": "\u5728CLBlast\u5e93\u7684GEMM\u6838\u4e0a\u6d4b\u8bd5\uff0c\u6027\u80fd\u63a5\u8fd1\u7406\u8bba\u6700\u5927\u503c\uff0810%\u4ee5\u5185\uff09\uff0c\u4e14\u80fd\u6cdb\u5316\u5230\u65b0\u8bbe\u5907\u3002", "conclusion": "\u591a\u7248\u672c\u5316\u6846\u67b6\u5728\u6027\u80fd\u53ef\u79fb\u690d\u6027\u4e0a\u4f18\u4e8e\u4f20\u7edf\u81ea\u52a8\u8c03\u4f18\uff0c\u65e0\u9700\u4e3a\u65b0\u8bbe\u5907\u91cd\u65b0\u8c03\u4f18\u3002"}}
{"id": "2507.14597", "categories": ["cs.DC", "cs.CV", "cs.LG", "cs.PF"], "pdf": "https://arxiv.org/pdf/2507.14597", "abs": "https://arxiv.org/abs/2507.14597", "authors": ["Eugene Armah", "Linda Amoako Bannning"], "title": "Towards a Proactive Autoscaling Framework for Data Stream Processing at the Edge using GRU and Transfer Learning", "comment": null, "summary": "Processing data at high speeds is becoming increasingly critical as digital\neconomies generate enormous data. The current paradigms for timely data\nprocessing are edge computing and data stream processing (DSP). Edge computing\nplaces resources closer to where data is generated, while stream processing\nanalyzes the unbounded high-speed data in motion. However, edge stream\nprocessing faces rapid workload fluctuations, complicating resource\nprovisioning. Inadequate resource allocation leads to bottlenecks, whereas\nexcess allocation results in wastage. Existing reactive methods, such as\nthreshold-based policies and queuing theory scale only after performance\ndegrades, potentially violating SLAs. Although reinforcement learning (RL)\noffers a proactive approach through agents that learn optimal runtime\nadaptation policies, it requires extensive simulation. Furthermore, predictive\nmachine learning models face online distribution and concept drift that\nminimize their accuracy. We propose a three-step solution to the proactive edge\nstream processing autoscaling problem. Firstly, a GRU neural network forecasts\nthe upstream load using real-world and synthetic DSP datasets. Secondly, a\ntransfer learning framework integrates the predictive model into an online\nstream processing system using the DTW algorithm and joint distribution\nadaptation to handle the disparities between offline and online domains.\nFinally, a horizontal autoscaling module dynamically adjusts the degree of\noperator parallelism, based on predicted load while considering edge resource\nconstraints. The lightweight GRU model for load predictions recorded up to\n1.3\\% SMAPE value on a real-world data set. It outperformed CNN, ARIMA, and\nProphet on the SMAPE and RMSE evaluation metrics, with lower training time than\nthe computationally intensive RL models.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u4e09\u6b65\u89e3\u51b3\u65b9\u6848\uff0c\u7528\u4e8e\u4e3b\u52a8\u8fb9\u7f18\u6d41\u5904\u7406\u81ea\u52a8\u6269\u5c55\u95ee\u9898\uff0c\u5305\u62ecGRU\u795e\u7ecf\u7f51\u7edc\u9884\u6d4b\u4e0a\u6e38\u8d1f\u8f7d\u3001\u8fc1\u79fb\u5b66\u4e60\u6846\u67b6\u5904\u7406\u79bb\u7ebf\u4e0e\u5728\u7ebf\u57df\u5dee\u5f02\uff0c\u4ee5\u53ca\u57fa\u4e8e\u9884\u6d4b\u8d1f\u8f7d\u7684\u52a8\u6001\u6c34\u5e73\u6269\u5c55\u6a21\u5757\u3002", "motivation": "\u968f\u7740\u6570\u5b57\u7ecf\u6d4e\u53d1\u5c55\uff0c\u9ad8\u901f\u6570\u636e\u5904\u7406\u9700\u6c42\u589e\u52a0\uff0c\u8fb9\u7f18\u6d41\u5904\u7406\u9762\u4e34\u8d44\u6e90\u52a8\u6001\u5206\u914d\u7684\u6311\u6218\uff0c\u73b0\u6709\u65b9\u6cd5\u5b58\u5728\u6ede\u540e\u6216\u6d6a\u8d39\u95ee\u9898\u3002", "method": "\u4f7f\u7528GRU\u795e\u7ecf\u7f51\u7edc\u9884\u6d4b\u8d1f\u8f7d\uff0c\u8fc1\u79fb\u5b66\u4e60\u6846\u67b6\u6574\u5408\u9884\u6d4b\u6a21\u578b\uff0c\u52a8\u6001\u6c34\u5e73\u6269\u5c55\u6a21\u5757\u8c03\u6574\u5e76\u884c\u5ea6\u3002", "result": "GRU\u6a21\u578b\u5728\u771f\u5b9e\u6570\u636e\u96c6\u4e0aSMAPE\u503c\u4f4e\u81f31.3%\uff0c\u4f18\u4e8eCNN\u3001ARIMA\u548cProphet\uff0c\u8bad\u7ec3\u65f6\u95f4\u77ed\u4e8e\u5f3a\u5316\u5b66\u4e60\u6a21\u578b\u3002", "conclusion": "\u63d0\u51fa\u7684\u65b9\u6cd5\u6709\u6548\u89e3\u51b3\u4e86\u8fb9\u7f18\u6d41\u5904\u7406\u7684\u8d44\u6e90\u52a8\u6001\u5206\u914d\u95ee\u9898\uff0c\u5177\u6709\u9ad8\u9884\u6d4b\u7cbe\u5ea6\u548c\u4f4e\u8ba1\u7b97\u6210\u672c\u3002"}}
{"id": "2507.14397", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2507.14397", "abs": "https://arxiv.org/abs/2507.14397", "authors": ["Michael Davies", "Neal Crago", "Karthikeyan Sankaralingam", "Christos Kozyrakis"], "title": "Efficient LLM Inference: Bandwidth, Compute, Synchronization, and Capacity are all you need", "comment": null, "summary": "This paper presents a limit study of transformer-based large language model\n(LLM) inference, focusing on the fundamental performance bottlenecks imposed by\nmemory bandwidth, memory capacity, and synchronization overhead in distributed\ninference systems. We develop a hardware-agnostic performance model that\nabstracts away implementation details, enabling the analysis of a wide range of\ncurrent and near-future hardware technologies. Our analysis spans from current\nHBM3 memory technology used in AI accelerators like GPUs and TPUs to systems\nbased on advanced HBM4 and advanced 3D-stacked DRAM technology. It also covers\nSRAM-based designs and scaling techniques from distributed clusters with\nvarying numbers of chips to wafer-scale integration. Our key findings for\nauto-regressive decoding are: i) serving LLMs requires 100s of GB per server to\nserve a model instance; ii) high memory bandwidth is critical for high per-user\nthroughput; iii) exposed synchronization latencies to achieve collective\ncommunication must be around 1us else they make the memory bandwidth\nineffective; iv) DRAM-based designs have a fundamental advantage in terms of\nsystem-level efficiency as measured in throughput per cost or watt; and v)\nhardware designs can easily reach 2000+ user token/sec but getting to 10,000+\ntokens/sec will need smaller models, smaller context, or other forms of\nalgorithmic advances. This study provides valuable insights into the\nfundamental performance limits of LLM inference, highlighting the potential\nbenefits of future hardware advancements and guiding the optimization of LLM\ndeployment strategies.", "AI": {"tldr": "\u672c\u6587\u7814\u7a76\u4e86\u57fa\u4e8eTransformer\u7684\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u63a8\u7406\u7684\u6027\u80fd\u74f6\u9888\uff0c\u5305\u62ec\u5185\u5b58\u5e26\u5bbd\u3001\u5bb9\u91cf\u548c\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u7684\u540c\u6b65\u5f00\u9500\u3002\u901a\u8fc7\u786c\u4ef6\u65e0\u5173\u7684\u6027\u80fd\u6a21\u578b\uff0c\u5206\u6790\u4e86\u5f53\u524d\u53ca\u672a\u6765\u786c\u4ef6\u6280\u672f\u7684\u6027\u80fd\u6781\u9650\u3002", "motivation": "\u63a2\u7d22LLM\u63a8\u7406\u4e2d\u7684\u6027\u80fd\u74f6\u9888\uff0c\u4e3a\u672a\u6765\u786c\u4ef6\u8bbe\u8ba1\u548c\u4f18\u5316\u63d0\u4f9b\u6307\u5bfc\u3002", "method": "\u5f00\u53d1\u786c\u4ef6\u65e0\u5173\u6027\u80fd\u6a21\u578b\uff0c\u5206\u6790HBM3\u3001HBM4\u30013D\u5806\u53e0DRAM\u3001SRAM\u7b49\u6280\u672f\u53ca\u5206\u5e03\u5f0f\u96c6\u7fa4\u7684\u6027\u80fd\u3002", "result": "\u53d1\u73b0LLM\u63a8\u7406\u9700\u6570\u767eGB\u5185\u5b58\uff0c\u9ad8\u5e26\u5bbd\u5bf9\u541e\u5410\u91cf\u81f3\u5173\u91cd\u8981\uff0c\u540c\u6b65\u5ef6\u8fdf\u9700\u63a7\u5236\u57281\u5fae\u79d2\u4ee5\u5185\uff0cDRAM\u8bbe\u8ba1\u5728\u7cfb\u7edf\u6548\u7387\u4e0a\u5360\u4f18\u3002", "conclusion": "\u672a\u6765\u786c\u4ef6\u8fdb\u6b65\u548c\u7b97\u6cd5\u4f18\u5316\u53ef\u8fdb\u4e00\u6b65\u63d0\u5347LLM\u63a8\u7406\u6027\u80fd\uff0c\u4e3a\u90e8\u7f72\u7b56\u7565\u63d0\u4f9b\u6307\u5bfc\u3002"}}
{"id": "2507.15530", "categories": ["cs.PL", "cs.LO", "F.3.1; F.3.2"], "pdf": "https://arxiv.org/pdf/2507.15530", "abs": "https://arxiv.org/abs/2507.15530", "authors": ["Shing Hin Ho", "Nicolas Wu", "Azalea Raad"], "title": "Bayesian Separation Logic", "comment": null, "summary": "Bayesian probabilistic programming languages (BPPLs) let users denote\nstatistical models as code while the interpreter infers the posterior\ndistribution. The semantics of BPPLs are usually mathematically complex and\nunable to reason about desirable properties such as expected values and\nindependence of random variables. To reason about these properties in a\nnon-Bayesian setting, probabilistic separation logics such as PSL and Lilac\ninterpret separating conjunction as probabilistic independence of random\nvariables. However, no existing separation logic can handle Bayesian updating,\nwhich is the key distinguishing feature of BPPLs.\n  To close this gap, we introduce Bayesian separation logic (BaSL), a\nprobabilistic separation logic that gives semantics to BPPL. We prove an\ninternal version of Bayes' theorem using a result in measure theory known as\nthe Rokhlin-Simmons disintegration theorem. Consequently, BaSL can model\nprobabilistic programming concepts such as Bayesian updating, unnormalised\ndistribution, conditional distribution, soft constraint, conjugate prior and\nimproper prior while maintaining modularity via the frame rule. The model of\nBaSL is based on a novel instantiation of Kripke resource monoid via\n$\\sigma$-finite measure spaces over the Hilbert cube, and the semantics of\nHoare triple is compatible with an existing denotational semantics of BPPL\nbased on the category of $s$-finite kernels. Using BaSL, we then prove\nproperties of statistical models such as the expected value of Bayesian coin\nflip, correlation of random variables in the collider Bayesian network, and the\nposterior distributions of the burglar alarm model, a parameter estimation\nalgorithm, and the Gaussian mixture model.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u6982\u7387\u5206\u79bb\u903b\u8f91\uff08BaSL\uff09\uff0c\u7528\u4e8e\u5904\u7406\u8d1d\u53f6\u65af\u6982\u7387\u7f16\u7a0b\u8bed\u8a00\uff08BPPLs\uff09\u4e2d\u7684\u8d1d\u53f6\u65af\u66f4\u65b0\u95ee\u9898\uff0c\u586b\u8865\u4e86\u73b0\u6709\u5206\u79bb\u903b\u8f91\u7684\u7a7a\u767d\u3002", "motivation": "\u73b0\u6709\u5206\u79bb\u903b\u8f91\u65e0\u6cd5\u5904\u7406\u8d1d\u53f6\u65af\u66f4\u65b0\uff0c\u800c\u8d1d\u53f6\u65af\u66f4\u65b0\u662fBPPL\u7684\u6838\u5fc3\u7279\u5f81\u3002\u672c\u6587\u65e8\u5728\u586b\u8865\u8fd9\u4e00\u7a7a\u767d\u3002", "method": "\u57fa\u4e8eRokhlin-Simmons\u5206\u89e3\u5b9a\u7406\uff0c\u63d0\u51faBaSL\uff0c\u5e76\u5229\u7528Kripke\u8d44\u6e90\u5e7a\u534a\u7fa4\u548c\u03c3-\u6709\u9650\u6d4b\u5ea6\u7a7a\u95f4\u5efa\u6a21\u3002", "result": "BaSL\u80fd\u591f\u5efa\u6a21\u8d1d\u53f6\u65af\u66f4\u65b0\u3001\u672a\u5f52\u4e00\u5316\u5206\u5e03\u3001\u6761\u4ef6\u5206\u5e03\u7b49\u6982\u5ff5\uff0c\u5e76\u901a\u8fc7\u5b9e\u4f8b\u9a8c\u8bc1\u4e86\u5176\u6709\u6548\u6027\u3002", "conclusion": "BaSL\u4e3aBPPL\u63d0\u4f9b\u4e86\u8bed\u4e49\u652f\u6301\uff0c\u5e76\u6210\u529f\u9a8c\u8bc1\u4e86\u5176\u5728\u7edf\u8ba1\u6a21\u578b\u4e2d\u7684\u5b9e\u7528\u6027\u3002"}}
{"id": "2507.14723", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2507.14723", "abs": "https://arxiv.org/abs/2507.14723", "authors": ["Brati Mondal", "Pritam Goswami", "Buddhadeb Sau"], "title": "Simulating Chirality: Solving Distance-$k$-Dispersion on an 1-Interval Connected Ring", "comment": null, "summary": "We study the Distance-$k$-Dispersion (D-$k$-D) problem for synchronous mobile\nagents in a 1-interval-connected ring network having $n$ nodes and with $l$\nagents where $3 \\le l \\le \\lfloor \\frac{n}{k}\\rfloor$, without the assumption\nof chirality (a common sense of direction for the agents). This generalizes the\nclassical dispersion problem by requiring that agents maintain a minimum\ndistance of $k$ hops from each other, with the special case $k=1$ corresponding\nto the standard dispersion.\n  The contribution in this work is threefold. Our first contribution is a novel\nmethod that enables agents to simulate chirality using only local information,\nvision and bounded memory. This technique demonstrates that chirality is not a\nfundamental requirement for coordination in this model.\n  Building on this, our second contribution partially resolves an open question\nposed by Agarwalla et al. (ICDCN, 2018), who considered the same model (1-\ninterval connected ring, synchronous agents, no chirality). We prove that\nD-$k$-D, and thus dispersion is solvable from any arbitrary configuration under\nthese assumptions (excluding vertex permutation dynamism)for any size of the\nring network which was earlier limited to only odd sized ring or to a ring of\nsize four.\n  Finally, we present an algorithm for D-$k$-D in this setting that works in\n$O(ln)$ rounds, completing the constructive side of our result.\n  Altogether, our findings significantly extend the theoretical understanding\nof mobile agent coordination in dynamic networks and clarify the role of\nchirality in distributed computation.", "AI": {"tldr": "\u8bba\u6587\u7814\u7a76\u4e86\u57281-\u533a\u95f4\u8fde\u901a\u73af\u7f51\u7edc\u4e2d\u540c\u6b65\u79fb\u52a8\u4ee3\u7406\u7684Distance-$k$-Dispersion\u95ee\u9898\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u65e0\u9700\u5171\u540c\u65b9\u5411\u611f\uff08chirality\uff09\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5e76\u6269\u5c55\u4e86\u7406\u8bba\u7406\u89e3\u3002", "motivation": "\u89e3\u51b3\u5728\u65e0\u5171\u540c\u65b9\u5411\u611f\u7684\u52a8\u6001\u7f51\u7edc\u4e2d\u79fb\u52a8\u4ee3\u7406\u7684\u534f\u8c03\u95ee\u9898\uff0c\u7279\u522b\u662fD-$k$-D\u95ee\u9898\uff0c\u586b\u8865\u4e86\u73b0\u6709\u7814\u7a76\u7684\u7a7a\u767d\u3002", "method": "\u63d0\u51fa\u4e86\u4e00\u79cd\u5229\u7528\u5c40\u90e8\u4fe1\u606f\u3001\u89c6\u89c9\u548c\u6709\u9650\u5185\u5b58\u6a21\u62df\u5171\u540c\u65b9\u5411\u611f\u7684\u65b9\u6cd5\uff0c\u5e76\u8bbe\u8ba1\u4e86\u89e3\u51b3D-$k$-D\u95ee\u9898\u7684\u7b97\u6cd5\u3002", "result": "\u8bc1\u660e\u4e86D-$k$-D\u95ee\u9898\u5728\u4efb\u610f\u73af\u7f51\u7edc\u4e2d\u53ef\u89e3\uff0c\u5e76\u63d0\u51fa\u4e86\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(ln)$\u7684\u7b97\u6cd5\u3002", "conclusion": "\u7814\u7a76\u663e\u8457\u6269\u5c55\u4e86\u5bf9\u52a8\u6001\u7f51\u7edc\u4e2d\u79fb\u52a8\u4ee3\u7406\u534f\u8c03\u7684\u7406\u8bba\u7406\u89e3\uff0c\u5e76\u660e\u786e\u4e86\u5171\u540c\u65b9\u5411\u611f\u5728\u5206\u5e03\u5f0f\u8ba1\u7b97\u4e2d\u7684\u4f5c\u7528\u3002"}}
{"id": "2507.14651", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2507.14651", "abs": "https://arxiv.org/abs/2507.14651", "authors": ["Joren Dumoulin", "Pouya Houshmand", "Vikram Jain", "Marian Verhelst"], "title": "Enabling Efficient Hardware Acceleration of Hybrid Vision Transformer (ViT) Networks at the Edge", "comment": null, "summary": "Hybrid vision transformers combine the elements of conventional neural\nnetworks (NN) and vision transformers (ViT) to enable lightweight and accurate\ndetection. However, several challenges remain for their efficient deployment on\nresource-constrained edge devices. The hybrid models suffer from a widely\ndiverse set of NN layer types and large intermediate data tensors, hampering\nefficient hardware acceleration. To enable their execution at the edge, this\npaper proposes innovations across the hardware-scheduling stack: a.) At the\nlowest level, a configurable PE array supports all hybrid ViT layer types; b.)\ntemporal loop re-ordering within one layer, enabling hardware support for\nnormalization and softmax layers, minimizing on-chip data transfers; c.)\nfurther scheduling optimization employs layer fusion across inverted bottleneck\nlayers to drastically reduce off-chip memory transfers. The resulting\naccelerator is implemented in 28nm CMOS, achieving a peak energy efficiency of\n1.39 TOPS/W at 25.6 GMACs/s.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u9488\u5bf9\u6df7\u5408\u89c6\u89c9Transformer\u7684\u786c\u4ef6\u52a0\u901f\u65b9\u6848\uff0c\u901a\u8fc7\u53ef\u914d\u7f6ePE\u9635\u5217\u3001\u65f6\u95f4\u5faa\u73af\u91cd\u6392\u5e8f\u548c\u5c42\u878d\u5408\u4f18\u5316\uff0c\u663e\u8457\u63d0\u5347\u4e86\u8fb9\u7f18\u8bbe\u5907\u7684\u80fd\u6548\u3002", "motivation": "\u6df7\u5408\u89c6\u89c9Transformer\u5728\u8d44\u6e90\u53d7\u9650\u7684\u8fb9\u7f18\u8bbe\u5907\u4e0a\u90e8\u7f72\u65f6\u9762\u4e34\u591a\u6837\u5316\u7684NN\u5c42\u7c7b\u578b\u548c\u5927\u89c4\u6a21\u4e2d\u95f4\u6570\u636e\u5f20\u91cf\u7684\u6311\u6218\uff0c\u963b\u788d\u4e86\u786c\u4ef6\u52a0\u901f\u6548\u7387\u3002", "method": "1. \u53ef\u914d\u7f6ePE\u9635\u5217\u652f\u6301\u6240\u6709\u6df7\u5408ViT\u5c42\u7c7b\u578b\uff1b2. \u65f6\u95f4\u5faa\u73af\u91cd\u6392\u5e8f\u4f18\u5316\u5f52\u4e00\u5316\u548csoftmax\u5c42\uff1b3. \u5c42\u878d\u5408\u51cf\u5c11\u7247\u5916\u5185\u5b58\u4f20\u8f93\u3002", "result": "\u572828nm CMOS\u5de5\u827a\u4e0b\u5b9e\u73b0\uff0c\u5cf0\u503c\u80fd\u6548\u4e3a1.39 TOPS/W\uff0c\u8ba1\u7b97\u901f\u5ea6\u4e3a25.6 GMACs/s\u3002", "conclusion": "\u63d0\u51fa\u7684\u786c\u4ef6\u8c03\u5ea6\u4f18\u5316\u65b9\u6848\u6709\u6548\u89e3\u51b3\u4e86\u6df7\u5408ViT\u5728\u8fb9\u7f18\u8bbe\u5907\u4e0a\u7684\u90e8\u7f72\u96be\u9898\uff0c\u663e\u8457\u63d0\u5347\u4e86\u80fd\u6548\u548c\u8ba1\u7b97\u6548\u7387\u3002"}}
{"id": "2507.15596", "categories": ["cs.PL", "cs.LO"], "pdf": "https://arxiv.org/pdf/2507.15596", "abs": "https://arxiv.org/abs/2507.15596", "authors": ["Jaeseo Lee", "Kyungmin Bae"], "title": "Formal Analysis of Networked PLC Controllers Interacting with Physical Environments", "comment": "To appear in Proceedings of the Static Analysis Symposium (SAS) 2025", "summary": "Programmable Logic Controllers (PLCs) are widely used in industrial\nautomation to control physical systems. As PLC applications become increasingly\ncomplex, ensuring their correctness is crucial. Existing formal verification\ntechniques focus on individual PLC programs in isolation, often neglecting\ninteractions with physical environments and network communication between\ncontrollers. This limitation poses significant challenges in analyzing\nreal-world industrial systems, where continuous dynamics and communication\ndelays play a critical role. In this paper, we present a unified formal\nframework that integrates discrete PLC semantics, networked communication, and\ncontinuous physical behaviors. To mitigate state explosion, we apply partial\norder reduction, significantly reducing the number of explored states while\nmaintaining correctness. Our framework enables precise analysis of PLC-driven\nsystems with continuous dynamics and networked communication.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u7edf\u4e00\u7684\u5f62\u5f0f\u5316\u6846\u67b6\uff0c\u7528\u4e8e\u5206\u6790PLC\u9a71\u52a8\u7684\u7cfb\u7edf\uff0c\u7ed3\u5408\u79bb\u6563PLC\u8bed\u4e49\u3001\u7f51\u7edc\u901a\u4fe1\u548c\u8fde\u7eed\u7269\u7406\u884c\u4e3a\uff0c\u5e76\u91c7\u7528\u504f\u5e8f\u51cf\u5c11\u6280\u672f\u7f13\u89e3\u72b6\u6001\u7206\u70b8\u95ee\u9898\u3002", "motivation": "\u73b0\u6709\u5f62\u5f0f\u5316\u9a8c\u8bc1\u6280\u672f\u901a\u5e38\u5b64\u7acb\u5206\u6790\u5355\u4e2aPLC\u7a0b\u5e8f\uff0c\u5ffd\u7565\u4e86\u4e0e\u7269\u7406\u73af\u5883\u548c\u7f51\u7edc\u901a\u4fe1\u7684\u4ea4\u4e92\uff0c\u96be\u4ee5\u5e94\u5bf9\u5b9e\u9645\u5de5\u4e1a\u7cfb\u7edf\u4e2d\u7684\u8fde\u7eed\u52a8\u6001\u548c\u901a\u4fe1\u5ef6\u8fdf\u3002", "method": "\u63d0\u51fa\u4e00\u4e2a\u7edf\u4e00\u6846\u67b6\uff0c\u6574\u5408\u79bb\u6563PLC\u8bed\u4e49\u3001\u7f51\u7edc\u901a\u4fe1\u548c\u8fde\u7eed\u7269\u7406\u884c\u4e3a\uff0c\u5e76\u5e94\u7528\u504f\u5e8f\u51cf\u5c11\u6280\u672f\u4ee5\u51cf\u5c11\u72b6\u6001\u7a7a\u95f4\u3002", "result": "\u6846\u67b6\u80fd\u591f\u7cbe\u786e\u5206\u6790\u5177\u6709\u8fde\u7eed\u52a8\u6001\u548c\u7f51\u7edc\u901a\u4fe1\u7684PLC\u9a71\u52a8\u7cfb\u7edf\uff0c\u540c\u65f6\u901a\u8fc7\u504f\u5e8f\u51cf\u5c11\u663e\u8457\u964d\u4f4e\u72b6\u6001\u6570\u91cf\u3002", "conclusion": "\u8be5\u6846\u67b6\u4e3a\u590d\u6742\u5de5\u4e1a\u7cfb\u7edf\u7684\u5f62\u5f0f\u5316\u9a8c\u8bc1\u63d0\u4f9b\u4e86\u6709\u6548\u65b9\u6cd5\uff0c\u89e3\u51b3\u4e86\u73b0\u6709\u6280\u672f\u7684\u5c40\u9650\u6027\u3002"}}
{"id": "2507.14802", "categories": ["cs.DC", "cs.AI", "C.2.4; I.2.6"], "pdf": "https://arxiv.org/pdf/2507.14802", "abs": "https://arxiv.org/abs/2507.14802", "authors": ["Ziming Dai", "Chao Qiu", "Fei Gao", "Yunfeng Zhao", "Xiaofei Wang"], "title": "ACME: Adaptive Customization of Large Models via Distributed Systems", "comment": "Accepted to IEEE ICDCS 2025. 11 pages, 13 figures", "summary": "Pre-trained Transformer-based large models have revolutionized personal\nvirtual assistants, but their deployment in cloud environments faces challenges\nrelated to data privacy and response latency. Deploying large models closer to\nthe data and users has become a key research area to address these issues.\nHowever, applying these models directly often entails significant difficulties,\nsuch as model mismatching, resource constraints, and energy inefficiency.\nAutomated design of customized models is necessary, but it faces three key\nchallenges, namely, the high cost of centralized model customization,\nimbalanced performance from user heterogeneity, and suboptimal performance from\ndata heterogeneity. In this paper, we propose ACME, an adaptive customization\napproach of Transformer-based large models via distributed systems. To avoid\nthe low cost-efficiency of centralized methods, ACME employs a bidirectional\nsingle-loop distributed system to progressively achieve fine-grained\ncollaborative model customization. In order to better match user heterogeneity,\nit begins by customizing the backbone generation and identifying the Pareto\nFront under model size constraints to ensure optimal resource utilization.\nSubsequently, it performs header generation and refines the model using data\ndistribution-based personalized architecture aggregation to match data\nheterogeneity. Evaluation on different datasets shows that ACME achieves\ncost-efficient models under model size constraints. Compared to centralized\nsystems, data transmission volume is reduced to 6 percent. Additionally, the\naverage accuracy improves by 10 percent compared to the baseline, with the\ntrade-off metrics increasing by nearly 30 percent.", "AI": {"tldr": "ACME\u63d0\u51fa\u4e86\u4e00\u79cd\u5206\u5e03\u5f0f\u7cfb\u7edf\u65b9\u6cd5\uff0c\u7528\u4e8e\u81ea\u9002\u5e94\u5b9a\u5236\u57fa\u4e8eTransformer\u7684\u5927\u578b\u6a21\u578b\uff0c\u89e3\u51b3\u4e86\u96c6\u4e2d\u5f0f\u65b9\u6cd5\u7684\u4f4e\u6548\u95ee\u9898\uff0c\u663e\u8457\u51cf\u5c11\u4e86\u6570\u636e\u4f20\u8f93\u91cf\u5e76\u63d0\u9ad8\u4e86\u6027\u80fd\u3002", "motivation": "\u89e3\u51b3\u4e91\u7aef\u90e8\u7f72\u5927\u578b\u6a21\u578b\u65f6\u7684\u6570\u636e\u9690\u79c1\u548c\u54cd\u5e94\u5ef6\u8fdf\u95ee\u9898\uff0c\u540c\u65f6\u5e94\u5bf9\u6a21\u578b\u4e0d\u5339\u914d\u3001\u8d44\u6e90\u9650\u5236\u548c\u80fd\u6e90\u6548\u7387\u4f4e\u7b49\u6311\u6218\u3002", "method": "\u91c7\u7528\u53cc\u5411\u5355\u5faa\u73af\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u9010\u6b65\u5b9e\u73b0\u7ec6\u7c92\u5ea6\u534f\u4f5c\u6a21\u578b\u5b9a\u5236\uff0c\u5305\u62ec\u4e3b\u5e72\u751f\u6210\u3001Pareto\u524d\u6cbf\u8bc6\u522b\u3001\u5934\u90e8\u751f\u6210\u548c\u6570\u636e\u5206\u5e03\u9a71\u52a8\u7684\u4e2a\u6027\u5316\u67b6\u6784\u805a\u5408\u3002", "result": "\u5728\u6a21\u578b\u5927\u5c0f\u9650\u5236\u4e0b\u5b9e\u73b0\u9ad8\u6548\u6a21\u578b\uff0c\u6570\u636e\u4f20\u8f93\u91cf\u964d\u81f36%\uff0c\u5e73\u5747\u51c6\u786e\u7387\u63d0\u9ad810%\uff0c\u6743\u8861\u6307\u6807\u63d0\u5347\u8fd130%\u3002", "conclusion": "ACME\u901a\u8fc7\u5206\u5e03\u5f0f\u5b9a\u5236\u65b9\u6cd5\u6709\u6548\u89e3\u51b3\u4e86\u96c6\u4e2d\u5f0f\u7cfb\u7edf\u7684\u4f4e\u6548\u95ee\u9898\uff0c\u663e\u8457\u63d0\u5347\u4e86\u6a21\u578b\u6027\u80fd\u548c\u8d44\u6e90\u5229\u7528\u7387\u3002"}}
{"id": "2507.15300", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2507.15300", "abs": "https://arxiv.org/abs/2507.15300", "authors": ["Minnan Pei", "Gang Li", "Junwen Si", "Zeyu Zhu", "Zitao Mo", "Peisong Wang", "Zhuoran Song", "Xiaoyao Liang", "Jian Cheng"], "title": "GCC: A 3DGS Inference Architecture with Gaussian-Wise and Cross-Stage Conditional Processing", "comment": null, "summary": "3D Gaussian Splatting (3DGS) has emerged as a leading neural rendering\ntechnique for high-fidelity view synthesis, prompting the development of\ndedicated 3DGS accelerators for mobile applications. Through in-depth analysis,\nwe identify two major limitations in the conventional decoupled\npreprocessing-rendering dataflow adopted by existing accelerators: 1) a\nsignificant portion of preprocessed Gaussians are not used in rendering, and 2)\nthe same Gaussian gets repeatedly loaded across different tile renderings,\nresulting in substantial computational and data movement overhead. To address\nthese issues, we propose GCC, a novel accelerator designed for fast and\nenergy-efficient 3DGS inference. At the dataflow level, GCC introduces: 1)\ncross-stage conditional processing, which interleaves preprocessing and\nrendering to dynamically skip unnecessary Gaussian preprocessing; and 2)\nGaussian-wise rendering, ensuring that all rendering operations for a given\nGaussian are completed before moving to the next, thereby eliminating\nduplicated Gaussian loading. We also propose an alpha-based boundary\nidentification method to derive compact and accurate Gaussian regions, thereby\nreducing rendering costs. We implement our GCC accelerator in 28nm technology.\nExtensive experiments demonstrate that GCC significantly outperforms the\nstate-of-the-art 3DGS inference accelerator, GSCore, in both performance and\nenergy efficiency.", "AI": {"tldr": "GCC\u662f\u4e00\u79cd\u65b0\u578b3DGS\u52a0\u901f\u5668\uff0c\u901a\u8fc7\u4ea4\u53c9\u9636\u6bb5\u6761\u4ef6\u5904\u7406\u548c\u9ad8\u65af\u6e32\u67d3\u4f18\u5316\uff0c\u89e3\u51b3\u4e86\u73b0\u6709\u52a0\u901f\u5668\u7684\u6570\u636e\u6d41\u95ee\u9898\uff0c\u663e\u8457\u63d0\u5347\u4e86\u6027\u80fd\u548c\u80fd\u6548\u3002", "motivation": "\u73b0\u67093DGS\u52a0\u901f\u5668\u5728\u9884\u5904\u7406\u548c\u6e32\u67d3\u4e2d\u5b58\u5728\u5927\u91cf\u672a\u4f7f\u7528\u7684\u9ad8\u65af\u548c\u91cd\u590d\u52a0\u8f7d\u95ee\u9898\uff0c\u5bfc\u81f4\u8ba1\u7b97\u548c\u6570\u636e\u79fb\u52a8\u5f00\u9500\u5927\u3002", "method": "GCC\u5f15\u5165\u4ea4\u53c9\u9636\u6bb5\u6761\u4ef6\u5904\u7406\u548c\u9ad8\u65af\u6e32\u67d3\u4f18\u5316\uff0c\u7ed3\u5408alpha\u8fb9\u754c\u8bc6\u522b\u65b9\u6cd5\uff0c\u51cf\u5c11\u6e32\u67d3\u6210\u672c\u3002", "result": "GCC\u572828nm\u6280\u672f\u4e0b\u5b9e\u73b0\uff0c\u6027\u80fd\u4e0e\u80fd\u6548\u663e\u8457\u4f18\u4e8e\u73b0\u6709\u6700\u4f73\u52a0\u901f\u5668GSCore\u3002", "conclusion": "GCC\u901a\u8fc7\u4f18\u5316\u6570\u636e\u6d41\u548c\u6e32\u67d3\u65b9\u6cd5\uff0c\u4e3a3DGS\u63a8\u7406\u63d0\u4f9b\u4e86\u9ad8\u6548\u4e14\u8282\u80fd\u7684\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2507.15843", "categories": ["cs.PL", "D.3.1; F.3.1; F.3.2; D.2.4"], "pdf": "https://arxiv.org/pdf/2507.15843", "abs": "https://arxiv.org/abs/2507.15843", "authors": ["Beniamino Accattoli", "Dan Ghica", "Giulio Guerrieri", "Cl\u00e1udio Belo Louren\u00e7o", "Claudio Sacerdoti Coen"], "title": "Closure Conversion, Flat Environments, and the Complexity of Abstract Machines", "comment": null, "summary": "Closure conversion is a program transformation at work in compilers for\nfunctional languages to turn inner functions into global ones, by building\nclosures pairing the transformed functions with the environment of their free\nvariables. Abstract machines rely on similar and yet different concepts of\nclosures and environments.\n  In this paper, we study the relationship between the two approaches. We adopt\na very simple {\\lambda}-calculus with tuples as source language and study\nabstract machines for both the source language and the target of closure\nconversion. Moreover, we focus on the simple case of flat\nclosures/environments, that is, with no sharing of environments. We provide\nthree contributions.\n  Firstly, a new simple proof technique for the correctness of closure\nconversion, inspired by abstract machines.\n  Secondly, we show how the closure invariants of the target language allow us\nto design a new way of handling environments in abstract machines, not\nsuffering the shortcomings of other styles.\n  Thirdly, we study the machines from the point of view of time complexity,\nadapting analyses by Accattoli and co-authors. We show that closure conversion\ndecreases various dynamic costs while increasing the size of the initial code.\nDespite these changes, the overall complexity of the machines before and after\nclosure conversion turns out to be the same.", "AI": {"tldr": "\u8bba\u6587\u7814\u7a76\u4e86\u95ed\u5305\u8f6c\u6362\u4e0e\u62bd\u8c61\u673a\u5668\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u63d0\u51fa\u4e86\u65b0\u7684\u8bc1\u660e\u6280\u672f\u3001\u73af\u5883\u5904\u7406\u65b9\u6cd5\u548c\u65f6\u95f4\u590d\u6742\u6027\u5206\u6790\uff0c\u8868\u660e\u95ed\u5305\u8f6c\u6362\u4e0d\u5f71\u54cd\u6574\u4f53\u590d\u6742\u6027\u3002", "motivation": "\u63a2\u8ba8\u95ed\u5305\u8f6c\u6362\u4e0e\u62bd\u8c61\u673a\u5668\u4e2d\u95ed\u5305\u548c\u73af\u5883\u6982\u5ff5\u7684\u5173\u7cfb\uff0c\u4ee5\u6539\u8fdb\u73b0\u6709\u65b9\u6cd5\u3002", "method": "\u4f7f\u7528\u7b80\u5355\u7684\u03bb\u6f14\u7b97\u548c\u5143\u7ec4\u4f5c\u4e3a\u6e90\u8bed\u8a00\uff0c\u7814\u7a76\u95ed\u5305\u8f6c\u6362\u524d\u540e\u7684\u62bd\u8c61\u673a\u5668\uff0c\u91cd\u70b9\u5173\u6ce8\u6241\u5e73\u95ed\u5305/\u73af\u5883\u3002", "result": "\u63d0\u51fa\u4e86\u65b0\u7684\u95ed\u5305\u8f6c\u6362\u6b63\u786e\u6027\u8bc1\u660e\u6280\u672f\u3001\u6539\u8fdb\u7684\u73af\u5883\u5904\u7406\u65b9\u6cd5\uff0c\u5e76\u8bc1\u660e\u95ed\u5305\u8f6c\u6362\u4e0d\u6539\u53d8\u6574\u4f53\u590d\u6742\u6027\u3002", "conclusion": "\u95ed\u5305\u8f6c\u6362\u867d\u52a8\u6001\u6210\u672c\u964d\u4f4e\u4e14\u4ee3\u7801\u589e\u5927\uff0c\u4f46\u6574\u4f53\u590d\u6742\u6027\u4fdd\u6301\u4e0d\u53d8\uff0c\u4e3a\u7f16\u8bd1\u5668\u4f18\u5316\u63d0\u4f9b\u4e86\u65b0\u89c6\u89d2\u3002"}}
{"id": "2507.14928", "categories": ["cs.DC", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.14928", "abs": "https://arxiv.org/abs/2507.14928", "authors": ["Yongrae Jo", "Chanik Park"], "title": "Byzantine-Robust Decentralized Coordination of LLM Agents", "comment": null, "summary": "Collaboration among multiple large language model (LLM) agents is a promising\napproach to overcome inherent limitations of single-agent systems, such as\nhallucinations and single points of failure. As LLM agents are increasingly\ndeployed on open blockchain platforms, multi-agent systems capable of\ntolerating malicious (Byzantine) agents have become essential.\n  Recent Byzantine-robust multi-agent systems typically rely on leader-driven\ncoordination, which suffers from two major drawbacks. First, they are\ninherently vulnerable to targeted attacks against the leader. If consecutive\nleaders behave maliciously, the system repeatedly fails to achieve consensus,\nforcing new consensus rounds, which is particularly costly given the high\nlatency of LLM invocations. Second, an underperforming proposal from the leader\ncan be accepted as the final answer even when higher-quality alternatives are\navailable, as existing methods finalize the leader's proposal once it receives\na quorum of votes.\n  To address these issues, we propose DecentLLMs, a novel decentralized\nconsensus approach for multi-agent LLM systems, where worker agents generate\nanswers concurrently and evaluator agents independently score and rank these\nanswers to select the best available one. This decentralized architecture\nenables faster consensus despite the presence of Byzantine agents and\nconsistently selects higher-quality answers through Byzantine-robust\naggregation techniques.\n  Experimental results demonstrate that DecentLLMs effectively tolerates\nByzantine agents and significantly improves the quality of selected answers.", "AI": {"tldr": "DecentLLMs\u63d0\u51fa\u4e86\u4e00\u79cd\u53bb\u4e2d\u5fc3\u5316\u7684\u591a\u667a\u80fd\u4f53LLM\u7cfb\u7edf\u5171\u8bc6\u65b9\u6cd5\uff0c\u901a\u8fc7\u5e76\u884c\u751f\u6210\u7b54\u6848\u548c\u72ec\u7acb\u8bc4\u5206\u6765\u89e3\u51b3\u4f20\u7edf\u9886\u5bfc\u8005\u9a71\u52a8\u7cfb\u7edf\u7684\u7f3a\u9677\u3002", "motivation": "\u5355\u667a\u80fd\u4f53LLM\u7cfb\u7edf\u5b58\u5728\u5e7b\u89c9\u548c\u5355\u70b9\u6545\u969c\u95ee\u9898\uff0c\u800c\u73b0\u6709\u7684\u591a\u667a\u80fd\u4f53\u7cfb\u7edf\u5bb9\u6613\u53d7\u5230\u9488\u5bf9\u9886\u5bfc\u8005\u7684\u653b\u51fb\u548c\u4f4e\u8d28\u91cf\u63d0\u6848\u7684\u5f71\u54cd\u3002", "method": "DecentLLMs\u91c7\u7528\u53bb\u4e2d\u5fc3\u5316\u67b6\u6784\uff0c\u5de5\u4f5c\u667a\u80fd\u4f53\u5e76\u884c\u751f\u6210\u7b54\u6848\uff0c\u8bc4\u4f30\u667a\u80fd\u4f53\u72ec\u7acb\u8bc4\u5206\u5e76\u9009\u62e9\u6700\u4f73\u7b54\u6848\u3002", "result": "\u5b9e\u9a8c\u8868\u660e\uff0cDecentLLMs\u80fd\u6709\u6548\u5bb9\u5fcd\u62dc\u5360\u5ead\u667a\u80fd\u4f53\uff0c\u5e76\u663e\u8457\u63d0\u9ad8\u6240\u9009\u7b54\u6848\u7684\u8d28\u91cf\u3002", "conclusion": "DecentLLMs\u4e3a\u591a\u667a\u80fd\u4f53LLM\u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e00\u79cd\u9ad8\u6548\u4e14\u9c81\u68d2\u7684\u5171\u8bc6\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2507.15465", "categories": ["cs.AR", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.15465", "abs": "https://arxiv.org/abs/2507.15465", "authors": ["Sungmin Yun", "Seonyong Park", "Hwayong Nam", "Younjoo Lee", "Gunjun Lee", "Kwanhee Kyung", "Sangpyo Kim", "Nam Sung Kim", "Jongmin Kim", "Hyungyo Kim", "Juhwan Cho", "Seungmin Baek", "Jung Ho Ahn"], "title": "The New LLM Bottleneck: A Systems Perspective on Latent Attention and Mixture-of-Experts", "comment": "15 pages, 11 figures", "summary": "Computational workloads composing traditional Transformer models are starkly\nbifurcated. Multi-Head Attention (MHA) is memory-bound, with low arithmetic\nintensity, while feedforward layers are compute-bound. This dichotomy has long\nmotivated research into specialized hardware to mitigate the MHA bottleneck.\n  This paper argues that recent architectural shifts, namely Multi-head Latent\nAttention (MLA) and Mixture-of-Experts (MoE), challenge the premise of\nspecialized attention hardware. We make two key observations. First, the\narithmetic intensity of MLA is over two orders of magnitude greater than that\nof MHA, shifting it close to a compute-bound regime well-suited for modern\naccelerators like GPUs. Second, by distributing MoE experts across a pool of\naccelerators, their arithmetic intensity can be tuned through batching to match\nthat of the dense layers, creating a more balanced computational profile.\n  These findings reveal a diminishing need for specialized attention hardware.\nThe central challenge for next-generation Transformers is no longer\naccelerating a single memory-bound layer. Instead, the focus must shift to\ndesigning balanced systems with sufficient compute, memory capacity, memory\nbandwidth, and high-bandwidth interconnects to manage the diverse demands of\nlarge-scale models.", "AI": {"tldr": "\u8bba\u6587\u6307\u51fa\uff0c\u4f20\u7edfTransformer\u6a21\u578b\u7684\u8ba1\u7b97\u8d1f\u8f7d\u5b58\u5728\u660e\u663e\u5206\u5316\uff0c\u4f46\u65b0\u578b\u67b6\u6784\uff08\u5982MLA\u548cMoE\uff09\u51cf\u5c11\u4e86\u5bf9\u4e13\u7528\u6ce8\u610f\u529b\u786c\u4ef6\u7684\u9700\u6c42\uff0c\u8f6c\u800c\u9700\u8981\u66f4\u5e73\u8861\u7684\u7cfb\u7edf\u8bbe\u8ba1\u3002", "motivation": "\u7814\u7a76\u52a8\u673a\u5728\u4e8e\u4f20\u7edfTransformer\u6a21\u578b\u4e2dMulti-Head Attention\uff08MHA\uff09\u4e0efeedforward\u5c42\u7684\u8ba1\u7b97\u7279\u6027\u5dee\u5f02\uff0c\u4ee5\u53ca\u5982\u4f55\u901a\u8fc7\u65b0\u578b\u67b6\u6784\uff08MLA\u548cMoE\uff09\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002", "method": "\u901a\u8fc7\u5206\u6790MLA\u7684\u7b97\u672f\u5f3a\u5ea6\u548cMoE\u7684\u6279\u5904\u7406\u80fd\u529b\uff0c\u8bc1\u660e\u5b83\u4eec\u66f4\u9002\u5408\u73b0\u4ee3\u52a0\u901f\u5668\uff0c\u4ece\u800c\u51cf\u5c11\u5bf9\u4e13\u7528\u786c\u4ef6\u7684\u4f9d\u8d56\u3002", "result": "MLA\u7684\u7b97\u672f\u5f3a\u5ea6\u663e\u8457\u9ad8\u4e8eMHA\uff0cMoE\u901a\u8fc7\u6279\u5904\u7406\u53ef\u4ee5\u5e73\u8861\u8ba1\u7b97\u8d1f\u8f7d\uff0c\u8868\u660e\u4e13\u7528\u6ce8\u610f\u529b\u786c\u4ef6\u7684\u9700\u6c42\u51cf\u5c11\u3002", "conclusion": "\u4e0b\u4e00\u4ee3Transformer\u7684\u8bbe\u8ba1\u91cd\u70b9\u5e94\u8f6c\u5411\u5e73\u8861\u7cfb\u7edf\uff0c\u800c\u975e\u4e13\u6ce8\u4e8e\u5355\u4e00\u5185\u5b58\u5bc6\u96c6\u578b\u5c42\u7684\u52a0\u901f\u3002"}}
{"id": "2507.15121", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2507.15121", "abs": "https://arxiv.org/abs/2507.15121", "authors": ["Sasindu Wijeratne", "Rajgopal Kannan", "Viktor Prasanna"], "title": "AMPED: Accelerating MTTKRP for Billion-Scale Sparse Tensor Decomposition on Multiple GPUs", "comment": null, "summary": "Matricized Tensor Times Khatri-Rao Product (MTTKRP) is the computational\nbottleneck in sparse tensor decomposition. As real-world sparse tensors grow to\nbillions of nonzeros, they increasingly demand higher memory capacity and\ncompute throughput from hardware accelerators. In this work, we present AMPED,\na multi-GPU parallel algorithm designed to accelerate MTTKRP on billion-scale\nsparse tensors. AMPED scales beyond the limits of a single GPU, meeting both\nthe memory and performance requirements of large-scale workloads. We introduce\na partitioning strategy combined with a dynamic load balancing scheme to\ndistribute computation and minimize GPU idle time. On real-world billion-scale\ntensors, AMPED achieves a 5.1x geometric mean speedup in total execution time\nover state-of-the-art GPU baselines using 4 GPUs on a single CPU node.", "AI": {"tldr": "AMPED\u662f\u4e00\u79cd\u591aGPU\u5e76\u884c\u7b97\u6cd5\uff0c\u7528\u4e8e\u52a0\u901f\u5927\u89c4\u6a21\u7a00\u758f\u5f20\u91cf\u7684MTTKRP\u8ba1\u7b97\uff0c\u89e3\u51b3\u4e86\u5185\u5b58\u548c\u6027\u80fd\u74f6\u9888\u3002", "motivation": "\u968f\u7740\u7a00\u758f\u5f20\u91cf\u89c4\u6a21\u589e\u957f\u81f3\u6570\u5341\u4ebf\u975e\u96f6\u5143\u7d20\uff0c\u73b0\u6709\u786c\u4ef6\u52a0\u901f\u5668\u5728\u5185\u5b58\u5bb9\u91cf\u548c\u8ba1\u7b97\u541e\u5410\u91cf\u65b9\u9762\u9762\u4e34\u6311\u6218\u3002", "method": "\u91c7\u7528\u5206\u533a\u7b56\u7565\u548c\u52a8\u6001\u8d1f\u8f7d\u5747\u8861\u65b9\u6848\uff0c\u5728\u591aGPU\u4e0a\u5206\u914d\u8ba1\u7b97\u4efb\u52a1\u4ee5\u51cf\u5c11\u7a7a\u95f2\u65f6\u95f4\u3002", "result": "\u57284\u4e2aGPU\u4e0a\uff0cAMPED\u6bd4\u73b0\u6709\u6700\u4f73GPU\u57fa\u7ebf\u5b9e\u73b0\u4e865.1\u500d\u7684\u51e0\u4f55\u5e73\u5747\u52a0\u901f\u3002", "conclusion": "AMPED\u6210\u529f\u6ee1\u8db3\u4e86\u5927\u89c4\u6a21\u7a00\u758f\u5f20\u91cf\u5206\u89e3\u7684\u8ba1\u7b97\u9700\u6c42\uff0c\u663e\u8457\u63d0\u5347\u4e86\u6027\u80fd\u3002"}}
{"id": "2507.15603", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2507.15603", "abs": "https://arxiv.org/abs/2507.15603", "authors": ["Haoxiong Ren", "Yangu He", "Kwunhang Wong", "Rui Bao", "Ning Lin", "Zhongrui Wang", "Dashan Shang"], "title": "When Pipelined In-Memory Accelerators Meet Spiking Direct Feedback Alignment: A Co-Design for Neuromorphic Edge Computing", "comment": "International Conference on Computer-Aided Design 2025", "summary": "Spiking Neural Networks (SNNs) are increasingly favored for deployment on\nresource-constrained edge devices due to their energy-efficient and\nevent-driven processing capabilities. However, training SNNs remains\nchallenging because of the computational intensity of traditional\nbackpropagation algorithms adapted for spike-based systems. In this paper, we\npropose a novel software-hardware co-design that introduces a hardware-friendly\ntraining algorithm, Spiking Direct Feedback Alignment (SDFA) and implement it\non a Resistive Random Access Memory (RRAM)-based In-Memory Computing (IMC)\narchitecture, referred to as PipeSDFA, to accelerate SNN training.\nSoftware-wise, the computational complexity of SNN training is reduced by the\nSDFA through the elimination of sequential error propagation. Hardware-wise, a\nthree-level pipelined dataflow is designed based on IMC architecture to\nparallelize the training process. Experimental results demonstrate that the\nPipeSDFA training accelerator incurs less than 2% accuracy loss on five\ndatasets compared to baselines, while achieving 1.1X~10.5X and 1.37X~2.1X\nreductions in training time and energy consumption, respectively compared to\nPipeLayer.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u8f6f\u786c\u4ef6\u534f\u540c\u8bbe\u8ba1\u65b9\u6cd5PipeSDFA\uff0c\u901a\u8fc7\u786c\u4ef6\u53cb\u597d\u7684SDFA\u7b97\u6cd5\u548cRRAM-based IMC\u67b6\u6784\u52a0\u901fSNN\u8bad\u7ec3\uff0c\u51cf\u5c11\u8ba1\u7b97\u590d\u6742\u5ea6\u548c\u80fd\u8017\u3002", "motivation": "SNN\u5728\u8d44\u6e90\u53d7\u9650\u7684\u8fb9\u7f18\u8bbe\u5907\u4e0a\u90e8\u7f72\u5177\u6709\u4f18\u52bf\uff0c\u4f46\u4f20\u7edf\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u8bad\u7ec3SNN\u8ba1\u7b97\u91cf\u5927\uff0c\u9700\u8981\u66f4\u9ad8\u6548\u7684\u89e3\u51b3\u65b9\u6848\u3002", "method": "\u8f6f\u4ef6\u5c42\u9762\u91c7\u7528SDFA\u7b97\u6cd5\u6d88\u9664\u987a\u5e8f\u8bef\u5dee\u4f20\u64ad\uff0c\u786c\u4ef6\u5c42\u9762\u8bbe\u8ba1\u4e09\u7ea7\u6d41\u6c34\u7ebf\u6570\u636e\u6d41\u5e76\u884c\u5316\u8bad\u7ec3\u3002", "result": "\u5b9e\u9a8c\u663e\u793aPipeSDFA\u5728\u4e94\u4e2a\u6570\u636e\u96c6\u4e0a\u51c6\u786e\u7387\u635f\u5931\u5c0f\u4e8e2%\uff0c\u8bad\u7ec3\u65f6\u95f4\u548c\u80fd\u8017\u5206\u522b\u964d\u4f4e1.1X~10.5X\u548c1.37X~2.1X\u3002", "conclusion": "PipeSDFA\u662f\u4e00\u79cd\u9ad8\u6548\u4e14\u8282\u80fd\u7684SNN\u8bad\u7ec3\u52a0\u901f\u65b9\u6848\uff0c\u9002\u7528\u4e8e\u8fb9\u7f18\u8bbe\u5907\u3002"}}
{"id": "2507.15154", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2507.15154", "abs": "https://arxiv.org/abs/2507.15154", "authors": ["Kohya Shiozaki", "Junya Nakamura"], "title": "Dynatune: Dynamic Tuning of Raft Election Parameters Using Network Measurement", "comment": "This paper was accepted at the 27th International Workshop on\n  Advances in Parallel and Distributed Computational Models (APDCM 2025), held\n  in conjunction with IPDPS 2025", "summary": "Raft is a leader-based consensus algorithm that implements State Machine\nReplication (SMR), which replicates the service state across multiple servers\nto enhance fault tolerance. In Raft, the servers play one of three roles:\nleader, follower, or candidate. The leader receives client requests, determines\nthe processing order, and replicates them to the followers. When the leader\nfails, the service must elect a new leader to continue processing requests,\nduring which the service experiences an out-of-service (OTS) time. The OTS time\nis directly influenced by election parameters, such as heartbeat interval and\nelection timeout. However, traditional approaches, such as Raft, often struggle\nto effectively tune these parameters, particularly under fluctuating network\nconditions, leading to increased OTS time and reduced service responsiveness.\nTo address this, we propose Dynatune, a mechanism that dynamically adjusts\nRaft's election parameters based on network metrics such as round-trip time and\npacket loss rates measured via heartbeats. By adapting to changing network\nenvironments, Dynatune significantly reduces the leader failure detection and\nOTS time without altering Raft's core mechanisms or introducing additional\ncommunication overheads. Experimental results demonstrate that Dynatune reduces\nthe leader failure detection and OTS times by 80% and 45%, respectively,\ncompared with Raft, while maintaining high availability even under dynamic\nnetwork conditions. These findings confirm that Dynatune effectively enhances\nthe performance and reliability of SMR services in various network scenarios.", "AI": {"tldr": "Dynatune\u52a8\u6001\u8c03\u6574Raft\u9009\u4e3e\u53c2\u6570\u4ee5\u51cf\u5c11\u670d\u52a1\u4e2d\u65ad\u65f6\u95f4\u3002", "motivation": "\u4f20\u7edfRaft\u7b97\u6cd5\u5728\u7f51\u7edc\u6ce2\u52a8\u65f6\u96be\u4ee5\u6709\u6548\u8c03\u6574\u9009\u4e3e\u53c2\u6570\uff0c\u5bfc\u81f4\u670d\u52a1\u4e2d\u65ad\u65f6\u95f4\u589e\u52a0\u3002", "method": "Dynatune\u57fa\u4e8e\u7f51\u7edc\u6307\u6807\uff08\u5982\u5f80\u8fd4\u65f6\u95f4\u548c\u4e22\u5305\u7387\uff09\u52a8\u6001\u8c03\u6574\u9009\u4e3e\u53c2\u6570\u3002", "result": "\u5b9e\u9a8c\u663e\u793aDynatune\u5c06\u9886\u5bfc\u8005\u6545\u969c\u68c0\u6d4b\u548c\u670d\u52a1\u4e2d\u65ad\u65f6\u95f4\u5206\u522b\u51cf\u5c1180%\u548c45%\u3002", "conclusion": "Dynatune\u663e\u8457\u63d0\u5347\u4e86SMR\u670d\u52a1\u5728\u4e0d\u540c\u7f51\u7edc\u6761\u4ef6\u4e0b\u7684\u6027\u80fd\u548c\u53ef\u9760\u6027\u3002"}}
{"id": "2507.15664", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2507.15664", "abs": "https://arxiv.org/abs/2507.15664", "authors": ["Haomin Qi", "Yuyang Du", "Lihao Zhang", "Soung Chang Liew", "Kexin Chen", "Yining Du"], "title": "VeriRAG: A Retrieval-Augmented Framework for Automated RTL Testability Repair", "comment": "8 pages, 5 figures", "summary": "Large language models (LLMs) have demonstrated immense potential in\ncomputer-aided design (CAD), particularly for automated debugging and\nverification within electronic design automation (EDA) tools. However, Design\nfor Testability (DFT) remains a relatively underexplored area. This paper\npresents VeriRAG, the first LLM-assisted DFT-EDA framework. VeriRAG leverages a\nRetrieval-Augmented Generation (RAG) approach to enable LLM to revise code to\nensure DFT compliance. VeriRAG integrates (1) an autoencoder-based similarity\nmeasurement model for precise retrieval of reference RTL designs for the LLM,\nand (2) an iterative code revision pipeline that allows the LLM to ensure DFT\ncompliance while maintaining synthesizability. To support VeriRAG, we introduce\nVeriDFT, a Verilog-based DFT dataset curated for DFT-aware RTL repairs. VeriRAG\nretrieves structurally similar RTL designs from VeriDFT, each paired with a\nrigorously validated correction, as references for code repair. With VeriRAG\nand VeriDFT, we achieve fully automated DFT correction -- resulting in a\n7.72-fold improvement in successful repair rate compared to the zero-shot\nbaseline (Fig. 5 in Section V). Ablation studies further confirm the\ncontribution of each component of the VeriRAG framework. We open-source our\ndata, models, and scripts at https://github.com/yuyangdu01/LLM4DFT.", "AI": {"tldr": "VeriRAG\u662f\u4e00\u4e2a\u57fa\u4e8eLLM\u7684DFT-EDA\u6846\u67b6\uff0c\u901a\u8fc7RAG\u65b9\u6cd5\u81ea\u52a8\u4fee\u590dRTL\u8bbe\u8ba1\u4ee5\u786e\u4fddDFT\u5408\u89c4\u6027\uff0c\u6210\u529f\u4fee\u590d\u7387\u63d0\u9ad8\u4e867.72\u500d\u3002", "motivation": "DFT\u5728EDA\u5de5\u5177\u4e2d\u7814\u7a76\u8f83\u5c11\uff0cVeriRAG\u65e8\u5728\u586b\u8865\u8fd9\u4e00\u7a7a\u767d\uff0c\u5229\u7528LLM\u5b9e\u73b0\u81ea\u52a8\u5316DFT\u4fee\u590d\u3002", "method": "VeriRAG\u7ed3\u5408\u4e86\u57fa\u4e8e\u81ea\u52a8\u7f16\u7801\u5668\u7684\u76f8\u4f3c\u6027\u68c0\u7d22\u6a21\u578b\u548c\u8fed\u4ee3\u4ee3\u7801\u4fee\u8ba2\u6d41\u7a0b\uff0c\u4eceVeriDFT\u6570\u636e\u96c6\u4e2d\u68c0\u7d22\u53c2\u8003\u8bbe\u8ba1\u8fdb\u884c\u4fee\u590d\u3002", "result": "VeriRAG\u5b9e\u73b0\u4e86\u5b8c\u5168\u81ea\u52a8\u5316\u7684DFT\u4fee\u590d\uff0c\u4fee\u590d\u6210\u529f\u7387\u6bd4\u96f6\u6837\u672c\u57fa\u7ebf\u63d0\u9ad8\u4e867.72\u500d\u3002", "conclusion": "VeriRAG\u5c55\u793a\u4e86LLM\u5728DFT-EDA\u4e2d\u7684\u6f5c\u529b\uff0c\u5f00\u6e90\u4e86\u6570\u636e\u548c\u6a21\u578b\u4ee5\u4fc3\u8fdb\u8fdb\u4e00\u6b65\u7814\u7a76\u3002"}}
{"id": "2507.15230", "categories": ["cs.DC", "cs.GR"], "pdf": "https://arxiv.org/pdf/2507.15230", "abs": "https://arxiv.org/abs/2507.15230", "authors": ["Guoxi Liu", "Thomas Randall", "Rong Ge", "Federico Iuricich"], "title": "GALE: Leveraging Heterogeneous Systems for Efficient Unstructured Mesh Data Analysis", "comment": null, "summary": "Unstructured meshes present challenges in scientific data analysis due to\nirregular distribution and complex connectivity. Computing and storing\nconnectivity information is a major bottleneck for visualization algorithms,\naffecting both time and memory performance. Recent task-parallel data\nstructures address this by precomputing connectivity information at runtime\nwhile the analysis algorithm executes, effectively hiding computation costs and\nimproving performance. However, existing approaches are CPU-bound, forcing the\ndata structure and analysis algorithm to compete for the same computational\nresources, limiting potential speedups. To overcome this limitation, we\nintroduce a novel task-parallel approach optimized for heterogeneous CPU-GPU\nsystems. Specifically, we offload the computation of mesh connectivity\ninformation to GPU threads, enabling CPU threads to focus on executing the\nvisualization algorithm. Following this paradigm, we propose GALE (GPU-Aided\nLocalized data structurE), the first open-source CUDA-based data structure\ndesigned for heterogeneous task parallelism. Experiments on two 20-core CPUs\nand an NVIDIA V100 GPU show that GALE achieves up to 2.7x speedup over\nstate-of-the-art localized data structures while maintaining memory efficiency.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u9488\u5bf9\u5f02\u6784CPU-GPU\u7cfb\u7edf\u7684\u4efb\u52a1\u5e76\u884c\u65b9\u6cd5GALE\uff0c\u7528\u4e8e\u4f18\u5316\u975e\u7ed3\u6784\u5316\u7f51\u683c\u7684\u8fde\u63a5\u4fe1\u606f\u8ba1\u7b97\uff0c\u663e\u8457\u63d0\u5347\u6027\u80fd\u3002", "motivation": "\u975e\u7ed3\u6784\u5316\u7f51\u683c\u7684\u590d\u6742\u8fde\u63a5\u6027\u5bfc\u81f4\u8ba1\u7b97\u548c\u5b58\u50a8\u74f6\u9888\uff0c\u73b0\u6709\u65b9\u6cd5\u53d7\u9650\u4e8eCPU\u8d44\u6e90\u7ade\u4e89\u3002", "method": "\u5c06\u7f51\u683c\u8fde\u63a5\u4fe1\u606f\u8ba1\u7b97\u5378\u8f7d\u5230GPU\u7ebf\u7a0b\uff0c\u8ba9CPU\u4e13\u6ce8\u4e8e\u53ef\u89c6\u5316\u7b97\u6cd5\uff0c\u63d0\u51faCUDA-based\u6570\u636e\u67b6\u6784GALE\u3002", "result": "\u572820\u6838CPU\u548cNVIDIA V100 GPU\u4e0a\uff0cGALE\u6bd4\u73b0\u6709\u6280\u672f\u5feb2.7\u500d\uff0c\u4e14\u5185\u5b58\u9ad8\u6548\u3002", "conclusion": "GALE\u901a\u8fc7\u5f02\u6784\u4efb\u52a1\u5e76\u884c\u6709\u6548\u89e3\u51b3\u4e86\u975e\u7ed3\u6784\u5316\u7f51\u683c\u7684\u6027\u80fd\u74f6\u9888\u3002"}}
{"id": "2507.15233", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2507.15233", "abs": "https://arxiv.org/abs/2507.15233", "authors": ["Jintao Liu", "Mohammad Goudarzi", "Adel Nadjaran Toosi"], "title": "An ML-Driven Participant Selection Technique for Federated Recommendation System in Edge-Cloud Computing", "comment": null, "summary": "Recommendation systems (RS) personalize content by analyzing user\npreferences, but typically require centralized collection of user data, raising\nprivacy and scalability concerns. Federated Recommendation Systems (FRS)\naddress these issues by enabling distributed, privacy-preserving model training\nacross edge devices, keeping raw data on-device. Although existing FRS\nframeworks benefit from on-device feature extraction and privacy preservation,\nthey suffer from heterogeneous device capabilities, non-independent and\nidentically distributed (non-IID) data, and communication bottlenecks. To\novercome these limitations, we propose a multi-objective reinforcement learning\n(RL) participant selection that jointly optimizes historical client performance\nreputation (CPR), data utility, and system efficiency. First, we define a\ncomposite client-utility function combining CPR, system capability, and data\nquality. Next, we embed this utility into a multi-armed bandit (MAB) framework\nand dynamically balance exploration-exploitation to select participants.\nFinally, we practically implement our approach using the PySyft framework on an\nedge-cloud testbed, and evaluate it on a multimodal movie-recommendation task\nbuilt from the MovieLens-100K dataset. Across four different skewed\ndata-partition scenarios, our MAB-based selection accelerates convergence by\n32-50% in time-to-target AUC and reduces total wall-clock training time by up\nto 46%, while matching or slightly improving final AUC, NDCG@50, and Recall@50\ncompared to existing FRS baselines. Our results demonstrate that adaptive,\nreward-driven client sampling can substantially enhance both efficiency and\nfairness in real-world federated deployments.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u591a\u76ee\u6807\u5f3a\u5316\u5b66\u4e60\u7684\u8054\u90a6\u63a8\u8350\u7cfb\u7edf\u53c2\u4e0e\u8005\u9009\u62e9\u65b9\u6cd5\uff0c\u4f18\u5316\u4e86\u6548\u7387\u4e0e\u516c\u5e73\u6027\u3002", "motivation": "\u89e3\u51b3\u8054\u90a6\u63a8\u8350\u7cfb\u7edf\u4e2d\u8bbe\u5907\u80fd\u529b\u5f02\u6784\u3001\u6570\u636e\u975e\u72ec\u7acb\u540c\u5206\u5e03\u548c\u901a\u4fe1\u74f6\u9888\u7b49\u95ee\u9898\u3002", "method": "\u7ed3\u5408\u5386\u53f2\u5ba2\u6237\u7aef\u6027\u80fd\u58f0\u8a89\u3001\u6570\u636e\u6548\u7528\u548c\u7cfb\u7edf\u6548\u7387\uff0c\u8bbe\u8ba1\u591a\u81c2\u8001\u864e\u673a\u6846\u67b6\u52a8\u6001\u9009\u62e9\u53c2\u4e0e\u8005\u3002", "result": "\u5728MovieLens-100K\u6570\u636e\u96c6\u4e0a\uff0c\u65b9\u6cd5\u52a0\u901f\u6536\u655b32-50%\uff0c\u51cf\u5c11\u8bad\u7ec3\u65f6\u95f446%\uff0c\u5e76\u4fdd\u6301\u6216\u63d0\u5347\u63a8\u8350\u6307\u6807\u3002", "conclusion": "\u81ea\u9002\u5e94\u5ba2\u6237\u7aef\u91c7\u6837\u663e\u8457\u63d0\u5347\u4e86\u8054\u90a6\u63a8\u8350\u7cfb\u7edf\u7684\u6548\u7387\u548c\u516c\u5e73\u6027\u3002"}}
{"id": "2507.15553", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2507.15553", "abs": "https://arxiv.org/abs/2507.15553", "authors": ["Shibo Yu", "Mohammad Goudarzi", "Adel Nadjaran Toosi"], "title": "Efficient Routing of Inference Requests across LLM Instances in Cloud-Edge Computing", "comment": null, "summary": "The rising demand for Large Language Model (LLM) inference services has\nintensified pressure on computational resources, resulting in latency and cost\nchallenges. This paper introduces a novel routing algorithm based on the\nNon-dominated Sorting Genetic Algorithm II (NSGA-II) to distribute inference\nrequests across heterogeneous LLM instances in a cloud-edge computing\nenvironment. Formulated as a multi-objective optimization problem, the\nalgorithm balances response quality, response time, and inference cost,\nadapting to request heterogeneity (e.g., varying complexity and prompt lengths)\nand node diversity (e.g., edge vs. cloud resources). This adaptive routing\nalgorithm optimizes performance under dynamic workloads. We benchmark the\napproach using a testbed with datasets including Stanford Question Answering\nDataset (SQuAD), Mostly Basic Python Problems (MBPP), Hella Situations With\nAdversarial Generations (HellaSwag), and Grade School Math 8K (GSM8K).\nExperimental results show our solution, compared to the baselines, achieves up\nto 95.2% and 34.9% improvements in terms of response time and cost,\nrespectively. These findings validate the algorithm's effectiveness for\nscalable LLM deployments.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8eNSGA-II\u7684\u8def\u7531\u7b97\u6cd5\uff0c\u7528\u4e8e\u5728\u4e91\u8fb9\u8ba1\u7b97\u73af\u5883\u4e2d\u5206\u914dLLM\u63a8\u7406\u8bf7\u6c42\uff0c\u4f18\u5316\u54cd\u5e94\u8d28\u91cf\u3001\u65f6\u95f4\u548c\u6210\u672c\uff0c\u5b9e\u9a8c\u663e\u793a\u5728\u54cd\u5e94\u65f6\u95f4\u548c\u6210\u672c\u4e0a\u5206\u522b\u63d0\u5347\u4e8695.2%\u548c34.9%\u3002", "motivation": "\u968f\u7740\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u63a8\u7406\u670d\u52a1\u9700\u6c42\u7684\u589e\u52a0\uff0c\u8ba1\u7b97\u8d44\u6e90\u538b\u529b\u5bfc\u81f4\u5ef6\u8fdf\u548c\u6210\u672c\u95ee\u9898\uff0c\u9700\u8981\u4e00\u79cd\u9ad8\u6548\u7684\u8d44\u6e90\u5206\u914d\u65b9\u6cd5\u3002", "method": "\u91c7\u7528NSGA-II\u7b97\u6cd5\uff0c\u5c06\u95ee\u9898\u5efa\u6a21\u4e3a\u591a\u76ee\u6807\u4f18\u5316\uff0c\u5e73\u8861\u54cd\u5e94\u8d28\u91cf\u3001\u65f6\u95f4\u548c\u6210\u672c\uff0c\u9002\u5e94\u8bf7\u6c42\u548c\u8282\u70b9\u7684\u591a\u6837\u6027\u3002", "result": "\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0c\u4e0e\u57fa\u7ebf\u76f8\u6bd4\uff0c\u54cd\u5e94\u65f6\u95f4\u548c\u6210\u672c\u5206\u522b\u63d0\u5347\u4e8695.2%\u548c34.9%\u3002", "conclusion": "\u8be5\u7b97\u6cd5\u5728\u52a8\u6001\u8d1f\u8f7d\u4e0b\u8868\u73b0\u4f18\u5f02\uff0c\u9002\u7528\u4e8e\u53ef\u6269\u5c55\u7684LLM\u90e8\u7f72\u3002"}}
